DEBUG:root:This message should go to the log file
INFO:root:So should this
WARNING:root:And this, too 3
ERROR:root:And non-ASCII stuff, too, like Øresund and Malmö
DEBUG:root:This message should go to the log file
INFO:root:So should this
WARNING:root:And this, too 3
ERROR:root:And non-ASCII stuff, too, like Øresund and Malmö
DEBUG:root:This message should go to the log file
INFO:root:So should this
WARNING:root:And this, too 3
ERROR:root:And non-ASCII stuff, too, like Øresund and Malmö
DEBUG:root:This message should go to the log file
INFO:root:So should this
WARNING:root:And this, too 3
ERROR:root:And non-ASCII stuff, too, like Øresund and Malmö
DEBUG:root:This message should go to the log file
INFO:root:So should this
WARNING:root:And this, too 3
ERROR:root:And non-ASCII stuff, too, like Øresund and Malmö
DEBUG:root:This message should go to the log file
INFO:root:So should this
WARNING:root:And this, too 3
ERROR:root:And non-ASCII stuff, too, like Øresund and Malmö
DEBUG:root:This message should go to the log file
INFO:root:So should this
WARNING:root:And this, too 3
ERROR:root:And non-ASCII stuff, too, like Øresund and Malmö
DEBUG:root:This message should go to the log file
INFO:root:So should this
WARNING:root:And this, too 3
ERROR:root:And non-ASCII stuff, too, like Øresund and Malmö
DEBUG:root:This message should go to the log file
INFO:root:So should this
WARNING:root:And this, too 3
ERROR:root:And non-ASCII stuff, too, like Øresund and Malmö
INFO:numexpr.utils:NumExpr defaulting to 8 threads.
INFO:root:msg log of item 1
INFO:root:msg log of item 2
INFO:root:msg log of item 3
INFO:root:msg log of item 1
INFO:root:msg log of item 2
INFO:root:msg log of item 3
INFO:root:msg log of item 1
INFO:root:msg log of item 2
INFO:root:msg log of item 3
INFO:root:msg log of item 1
INFO:root:msg log of item 2
INFO:root:msg log of item 3
INFO:root:So should this time: [0.5118708330010122, 0.48118337500091, 0.480237167001178, 0.4802627909994044, 0.48089112500019837]
INFO:root:So should this time: [0.4908272080010647, 0.4751695420000033]
INFO:root:So should this time: [3.916000423487276e-06, 1.6670001059537753e-06]
INFO:root:So should this time: [1.2919990695081651e-06, 3.330005711177364e-07]
DEBUG:root:This message should go to the log file
INFO:root:So should this
WARNING:root:And this, too 3
ERROR:root:And non-ASCII stuff, too, like Øresund and Malmö
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=23)
           2	LOAD_GLOBAL(arg=0, lineno=23)
           4	LOAD_METHOD(arg=1, lineno=23)
           6	LOAD_GLOBAL(arg=0, lineno=23)
           8	LOAD_METHOD(arg=2, lineno=23)
          10	LOAD_FAST(arg=0, lineno=23)
          12	LOAD_FAST(arg=1, lineno=23)
          14	CALL_METHOD(arg=2, lineno=23)
          16	CALL_METHOD(arg=1, lineno=23)
          18	RETURN_VALUE(arg=None, lineno=23)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=23)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=23)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=23)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=23)
DEBUG:numba.core.byteflow:stack ['$4load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_METHOD(arg=2, lineno=23)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$6load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=23)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$8load_method.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=23)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$8load_method.3', '$keyty10.4']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=CALL_METHOD(arg=2, lineno=23)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$8load_method.3', '$keyty10.4', '$valty12.5']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=CALL_METHOD(arg=1, lineno=23)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$14call_method.6']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=RETURN_VALUE(arg=None, lineno=23)
DEBUG:numba.core.byteflow:stack ['$16call_method.7']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$6load_global.2'}), (8, {'item': '$6load_global.2', 'res': '$8load_method.3'}), (10, {'res': '$keyty10.4'}), (12, {'res': '$valty12.5'}), (14, {'func': '$8load_method.3', 'args': ['$keyty10.4', '$valty12.5'], 'res': '$14call_method.6'}), (16, {'func': '$4load_method.1', 'args': ['$14call_method.6'], 'res': '$16call_method.7'}), (18, {'retval': '$16call_method.7', 'castval': '$18return_value.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    keyty = arg(0, name=keyty)               ['keyty']
    valty = arg(1, name=valty)               ['valty']
    $2load_global.0 = global(dictobject: <module 'numba.typed.dictobject' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numba/typed/dictobject.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=_as_meminfo) ['$2load_global.0', '$4load_method.1']
    $6load_global.2 = global(dictobject: <module 'numba.typed.dictobject' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numba/typed/dictobject.py'>) ['$6load_global.2']
    $8load_method.3 = getattr(value=$6load_global.2, attr=new_dict) ['$6load_global.2', '$8load_method.3']
    $14call_method.6 = call $8load_method.3(keyty, valty, func=$8load_method.3, args=[Var(keyty, typeddict.py:23), Var(valty, typeddict.py:23)], kws=(), vararg=None, target=None) ['$14call_method.6', '$8load_method.3', 'keyty', 'valty']
    $16call_method.7 = call $4load_method.1($14call_method.6, func=$4load_method.1, args=[Var($14call_method.6, typeddict.py:23)], kws=(), vararg=None, target=None) ['$14call_method.6', '$16call_method.7', '$4load_method.1']
    $18return_value.8 = cast(value=$16call_method.7) ['$16call_method.7', '$18return_value.8']
    return $18return_value.8                 ['$18return_value.8']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e0371040>
DEBUG:numba.core.ssa:on stmt: keyty = arg(0, name=keyty)
DEBUG:numba.core.ssa:on stmt: valty = arg(1, name=valty)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(dictobject: <module 'numba.typed.dictobject' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numba/typed/dictobject.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=_as_meminfo)
DEBUG:numba.core.ssa:on stmt: $6load_global.2 = global(dictobject: <module 'numba.typed.dictobject' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numba/typed/dictobject.py'>)
DEBUG:numba.core.ssa:on stmt: $8load_method.3 = getattr(value=$6load_global.2, attr=new_dict)
DEBUG:numba.core.ssa:on stmt: $14call_method.6 = call $8load_method.3(keyty, valty, func=$8load_method.3, args=[Var(keyty, typeddict.py:23), Var(valty, typeddict.py:23)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $16call_method.7 = call $4load_method.1($14call_method.6, func=$4load_method.1, args=[Var($14call_method.6, typeddict.py:23)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $18return_value.8 = cast(value=$16call_method.7)
DEBUG:numba.core.ssa:on stmt: return $18return_value.8
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$14call_method.6': [<numba.core.ir.Assign object at 0x7fd9e031b4f0>],
             '$16call_method.7': [<numba.core.ir.Assign object at 0x7fd9e031b670>],
             '$18return_value.8': [<numba.core.ir.Assign object at 0x7fd9e031b760>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fd9e03133a0>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x7fd9e0313100>],
             '$6load_global.2': [<numba.core.ir.Assign object at 0x7fd9e030de80>],
             '$8load_method.3': [<numba.core.ir.Assign object at 0x7fd9e030df40>],
             'keyty': [<numba.core.ir.Assign object at 0x7fd9e03137c0>],
             'valty': [<numba.core.ir.Assign object at 0x7fd9e03136a0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=653)
           2	LOAD_GLOBAL(arg=0, lineno=653)
           4	LOAD_DEREF(arg=0, lineno=653)
           6	LOAD_DEREF(arg=1, lineno=653)
           8	CALL_FUNCTION(arg=2, lineno=653)
          10	STORE_FAST(arg=2, lineno=653)
          12	LOAD_GLOBAL(arg=1, lineno=654)
          14	LOAD_FAST(arg=2, lineno=654)
          16	LOAD_DEREF(arg=0, lineno=654)
          18	LOAD_DEREF(arg=1, lineno=654)
          20	CALL_FUNCTION(arg=3, lineno=654)
          22	POP_TOP(arg=None, lineno=654)
          24	LOAD_GLOBAL(arg=2, lineno=655)
          26	LOAD_DEREF(arg=0, lineno=655)
          28	LOAD_DEREF(arg=1, lineno=655)
          30	LOAD_FAST(arg=2, lineno=655)
          32	CALL_FUNCTION(arg=3, lineno=655)
          34	STORE_FAST(arg=3, lineno=655)
          36	LOAD_FAST(arg=3, lineno=656)
          38	RETURN_VALUE(arg=None, lineno=656)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=653)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=653)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_DEREF(arg=0, lineno=653)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_DEREF(arg=1, lineno=653)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$4load_deref.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=653)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$4load_deref.1', '$6load_deref.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=STORE_FAST(arg=2, lineno=653)
DEBUG:numba.core.byteflow:stack ['$8call_function.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=654)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=2, lineno=654)
DEBUG:numba.core.byteflow:stack ['$12load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_DEREF(arg=0, lineno=654)
DEBUG:numba.core.byteflow:stack ['$12load_global.4', '$dp14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_DEREF(arg=1, lineno=654)
DEBUG:numba.core.byteflow:stack ['$12load_global.4', '$dp14.5', '$16load_deref.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=CALL_FUNCTION(arg=3, lineno=654)
DEBUG:numba.core.byteflow:stack ['$12load_global.4', '$dp14.5', '$16load_deref.6', '$18load_deref.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=POP_TOP(arg=None, lineno=654)
DEBUG:numba.core.byteflow:stack ['$20call_function.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_GLOBAL(arg=2, lineno=655)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_DEREF(arg=0, lineno=655)
DEBUG:numba.core.byteflow:stack ['$24load_global.9']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_DEREF(arg=1, lineno=655)
DEBUG:numba.core.byteflow:stack ['$24load_global.9', '$26load_deref.10']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=2, lineno=655)
DEBUG:numba.core.byteflow:stack ['$24load_global.9', '$26load_deref.10', '$28load_deref.11']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=CALL_FUNCTION(arg=3, lineno=655)
DEBUG:numba.core.byteflow:stack ['$24load_global.9', '$26load_deref.10', '$28load_deref.11', '$dp30.12']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=STORE_FAST(arg=3, lineno=655)
DEBUG:numba.core.byteflow:stack ['$32call_function.13']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=3, lineno=656)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=38, inst=RETURN_VALUE(arg=None, lineno=656)
DEBUG:numba.core.byteflow:stack ['$d36.14']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$4load_deref.1'}), (6, {'res': '$6load_deref.2'}), (8, {'func': '$2load_global.0', 'args': ['$4load_deref.1', '$6load_deref.2'], 'res': '$8call_function.3'}), (10, {'value': '$8call_function.3'}), (12, {'res': '$12load_global.4'}), (14, {'res': '$dp14.5'}), (16, {'res': '$16load_deref.6'}), (18, {'res': '$18load_deref.7'}), (20, {'func': '$12load_global.4', 'args': ['$dp14.5', '$16load_deref.6', '$18load_deref.7'], 'res': '$20call_function.8'}), (24, {'res': '$24load_global.9'}), (26, {'res': '$26load_deref.10'}), (28, {'res': '$28load_deref.11'}), (30, {'res': '$dp30.12'}), (32, {'func': '$24load_global.9', 'args': ['$26load_deref.10', '$28load_deref.11', '$dp30.12'], 'res': '$32call_function.13'}), (34, {'value': '$32call_function.13'}), (36, {'res': '$d36.14'}), (38, {'retval': '$d36.14', 'castval': '$38return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    key = arg(0, name=key)                   ['key']
    value = arg(1, name=value)               ['value']
    $2load_global.0 = global(_dict_new_minsize: <intrinsic _dict_new_minsize>) ['$2load_global.0']
    $4load_deref.1 = freevar(keyty: class(float64)) ['$4load_deref.1']
    $6load_deref.2 = freevar(valty: class(float64)) ['$6load_deref.2']
    dp = call $2load_global.0($4load_deref.1, $6load_deref.2, func=$2load_global.0, args=[Var($4load_deref.1, dictobject.py:653), Var($6load_deref.2, dictobject.py:653)], kws=(), vararg=None, target=None) ['$2load_global.0', '$4load_deref.1', '$6load_deref.2', 'dp']
    $12load_global.4 = global(_dict_set_method_table: <intrinsic _dict_set_method_table>) ['$12load_global.4']
    $16load_deref.6 = freevar(keyty: class(float64)) ['$16load_deref.6']
    $18load_deref.7 = freevar(valty: class(float64)) ['$18load_deref.7']
    $20call_function.8 = call $12load_global.4(dp, $16load_deref.6, $18load_deref.7, func=$12load_global.4, args=[Var(dp, dictobject.py:653), Var($16load_deref.6, dictobject.py:654), Var($18load_deref.7, dictobject.py:654)], kws=(), vararg=None, target=None) ['$12load_global.4', '$16load_deref.6', '$18load_deref.7', '$20call_function.8', 'dp']
    $24load_global.9 = global(_make_dict: <intrinsic _make_dict>) ['$24load_global.9']
    $26load_deref.10 = freevar(keyty: class(float64)) ['$26load_deref.10']
    $28load_deref.11 = freevar(valty: class(float64)) ['$28load_deref.11']
    d = call $24load_global.9($26load_deref.10, $28load_deref.11, dp, func=$24load_global.9, args=[Var($26load_deref.10, dictobject.py:655), Var($28load_deref.11, dictobject.py:655), Var(dp, dictobject.py:653)], kws=(), vararg=None, target=None) ['$24load_global.9', '$26load_deref.10', '$28load_deref.11', 'd', 'dp']
    $38return_value.15 = cast(value=d)       ['$38return_value.15', 'd']
    return $38return_value.15                ['$38return_value.15']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fda2197caf0>
DEBUG:numba.core.ssa:on stmt: key = arg(0, name=key)
DEBUG:numba.core.ssa:on stmt: value = arg(1, name=value)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(_dict_new_minsize: <intrinsic _dict_new_minsize>)
DEBUG:numba.core.ssa:on stmt: $4load_deref.1 = freevar(keyty: class(float64))
DEBUG:numba.core.ssa:on stmt: $6load_deref.2 = freevar(valty: class(float64))
DEBUG:numba.core.ssa:on stmt: dp = call $2load_global.0($4load_deref.1, $6load_deref.2, func=$2load_global.0, args=[Var($4load_deref.1, dictobject.py:653), Var($6load_deref.2, dictobject.py:653)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12load_global.4 = global(_dict_set_method_table: <intrinsic _dict_set_method_table>)
DEBUG:numba.core.ssa:on stmt: $16load_deref.6 = freevar(keyty: class(float64))
DEBUG:numba.core.ssa:on stmt: $18load_deref.7 = freevar(valty: class(float64))
DEBUG:numba.core.ssa:on stmt: $20call_function.8 = call $12load_global.4(dp, $16load_deref.6, $18load_deref.7, func=$12load_global.4, args=[Var(dp, dictobject.py:653), Var($16load_deref.6, dictobject.py:654), Var($18load_deref.7, dictobject.py:654)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $24load_global.9 = global(_make_dict: <intrinsic _make_dict>)
DEBUG:numba.core.ssa:on stmt: $26load_deref.10 = freevar(keyty: class(float64))
DEBUG:numba.core.ssa:on stmt: $28load_deref.11 = freevar(valty: class(float64))
DEBUG:numba.core.ssa:on stmt: d = call $24load_global.9($26load_deref.10, $28load_deref.11, dp, func=$24load_global.9, args=[Var($26load_deref.10, dictobject.py:655), Var($28load_deref.11, dictobject.py:655), Var(dp, dictobject.py:653)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $38return_value.15 = cast(value=d)
DEBUG:numba.core.ssa:on stmt: return $38return_value.15
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12load_global.4': [<numba.core.ir.Assign object at 0x7fda219ae0a0>],
             '$16load_deref.6': [<numba.core.ir.Assign object at 0x7fda219ae340>],
             '$18load_deref.7': [<numba.core.ir.Assign object at 0x7fda219ae4c0>],
             '$20call_function.8': [<numba.core.ir.Assign object at 0x7fda219ae6a0>],
             '$24load_global.9': [<numba.core.ir.Assign object at 0x7fda219ae7c0>],
             '$26load_deref.10': [<numba.core.ir.Assign object at 0x7fda219ae940>],
             '$28load_deref.11': [<numba.core.ir.Assign object at 0x7fda219aeac0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fda219a7940>],
             '$38return_value.15': [<numba.core.ir.Assign object at 0x7fda219af160>],
             '$4load_deref.1': [<numba.core.ir.Assign object at 0x7fda219a7ac0>],
             '$6load_deref.2': [<numba.core.ir.Assign object at 0x7fda219a7c40>],
             'd': [<numba.core.ir.Assign object at 0x7fda219aedc0>],
             'dp': [<numba.core.ir.Assign object at 0x7fda219a7e20>],
             'key': [<numba.core.ir.Assign object at 0x7fda219a7310>],
             'value': [<numba.core.ir.Assign object at 0x7fda219a7370>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=33)
           2	LOAD_FAST(arg=2, lineno=33)
           4	LOAD_FAST(arg=0, lineno=33)
           6	LOAD_FAST(arg=1, lineno=33)
           8	STORE_SUBSCR(arg=None, lineno=33)
          10	LOAD_CONST(arg=0, lineno=33)
          12	RETURN_VALUE(arg=None, lineno=33)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=33)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=2, lineno=33)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=33)
DEBUG:numba.core.byteflow:stack ['$value2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=33)
DEBUG:numba.core.byteflow:stack ['$value2.0', '$d4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_SUBSCR(arg=None, lineno=33)
DEBUG:numba.core.byteflow:stack ['$value2.0', '$d4.1', '$key6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=33)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=33)
DEBUG:numba.core.byteflow:stack ['$const10.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$value2.0'}), (4, {'res': '$d4.1'}), (6, {'res': '$key6.2'}), (8, {'target': '$d4.1', 'index': '$key6.2', 'value': '$value2.0'}), (10, {'res': '$const10.3'}), (12, {'retval': '$const10.3', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    d = arg(0, name=d)                       ['d']
    key = arg(1, name=key)                   ['key']
    value = arg(2, name=value)               ['value']
    d[key] = value                           ['d', 'key', 'value']
    $const10.3 = const(NoneType, None)       ['$const10.3']
    $12return_value.4 = cast(value=$const10.3) ['$12return_value.4', '$const10.3']
    return $12return_value.4                 ['$12return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fda21a80ac0>
DEBUG:numba.core.ssa:on stmt: d = arg(0, name=d)
DEBUG:numba.core.ssa:on stmt: key = arg(1, name=key)
DEBUG:numba.core.ssa:on stmt: value = arg(2, name=value)
DEBUG:numba.core.ssa:on stmt: d[key] = value
DEBUG:numba.core.ssa:on stmt: $const10.3 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $12return_value.4 = cast(value=$const10.3)
DEBUG:numba.core.ssa:on stmt: return $12return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12return_value.4': [<numba.core.ir.Assign object at 0x7fda21a7c730>],
             '$const10.3': [<numba.core.ir.Assign object at 0x7fda21a7c940>],
             'd': [<numba.core.ir.Assign object at 0x7fda21a914f0>],
             'key': [<numba.core.ir.Assign object at 0x7fda21a807f0>],
             'value': [<numba.core.ir.Assign object at 0x7fda21a80b20>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=683)
           2	LOAD_GLOBAL(arg=0, lineno=683)
           4	LOAD_FAST(arg=1, lineno=683)
           6	LOAD_DEREF(arg=0, lineno=683)
           8	CALL_FUNCTION(arg=2, lineno=683)
          10	STORE_FAST(arg=3, lineno=683)
          12	LOAD_GLOBAL(arg=0, lineno=684)
          14	LOAD_FAST(arg=2, lineno=684)
          16	LOAD_DEREF(arg=1, lineno=684)
          18	CALL_FUNCTION(arg=2, lineno=684)
          20	STORE_FAST(arg=4, lineno=684)
          22	LOAD_GLOBAL(arg=1, lineno=685)
          24	LOAD_FAST(arg=0, lineno=685)
          26	LOAD_FAST(arg=3, lineno=685)
          28	LOAD_GLOBAL(arg=2, lineno=685)
          30	LOAD_FAST(arg=3, lineno=685)
          32	CALL_FUNCTION(arg=1, lineno=685)
          34	LOAD_FAST(arg=4, lineno=685)
          36	CALL_FUNCTION(arg=4, lineno=685)
          38	STORE_FAST(arg=5, lineno=685)
          40	LOAD_FAST(arg=5, lineno=686)
          42	LOAD_GLOBAL(arg=3, lineno=686)
          44	LOAD_ATTR(arg=4, lineno=686)
          46	COMPARE_OP(arg=2, lineno=686)
          48	POP_JUMP_IF_FALSE(arg=54, lineno=686)
          50	LOAD_CONST(arg=0, lineno=687)
          52	RETURN_VALUE(arg=None, lineno=687)
>         54	LOAD_FAST(arg=5, lineno=688)
          56	LOAD_GLOBAL(arg=3, lineno=688)
          58	LOAD_ATTR(arg=5, lineno=688)
          60	COMPARE_OP(arg=2, lineno=688)
          62	POP_JUMP_IF_FALSE(arg=68, lineno=688)
          64	LOAD_CONST(arg=0, lineno=691)
          66	RETURN_VALUE(arg=None, lineno=691)
>         68	LOAD_FAST(arg=5, lineno=692)
          70	LOAD_GLOBAL(arg=3, lineno=692)
          72	LOAD_ATTR(arg=6, lineno=692)
          74	COMPARE_OP(arg=2, lineno=692)
          76	POP_JUMP_IF_FALSE(arg=88, lineno=692)
          78	LOAD_GLOBAL(arg=7, lineno=693)
          80	LOAD_CONST(arg=1, lineno=693)
          82	CALL_FUNCTION(arg=1, lineno=693)
          84	RAISE_VARARGS(arg=1, lineno=693)
          86	JUMP_FORWARD(arg=8, lineno=693)
>         88	LOAD_GLOBAL(arg=8, lineno=695)
          90	LOAD_CONST(arg=2, lineno=695)
          92	CALL_FUNCTION(arg=1, lineno=695)
          94	RAISE_VARARGS(arg=1, lineno=695)
>         96	LOAD_CONST(arg=0, lineno=695)
          98	RETURN_VALUE(arg=None, lineno=695)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=683)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=683)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=683)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_DEREF(arg=0, lineno=683)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$key4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=683)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$key4.1', '$6load_deref.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=STORE_FAST(arg=3, lineno=683)
DEBUG:numba.core.byteflow:stack ['$8call_function.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_GLOBAL(arg=0, lineno=684)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=2, lineno=684)
DEBUG:numba.core.byteflow:stack ['$12load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_DEREF(arg=1, lineno=684)
DEBUG:numba.core.byteflow:stack ['$12load_global.4', '$value14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=CALL_FUNCTION(arg=2, lineno=684)
DEBUG:numba.core.byteflow:stack ['$12load_global.4', '$value14.5', '$16load_deref.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=STORE_FAST(arg=4, lineno=684)
DEBUG:numba.core.byteflow:stack ['$18call_function.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_GLOBAL(arg=1, lineno=685)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=685)
DEBUG:numba.core.byteflow:stack ['$22load_global.8']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=3, lineno=685)
DEBUG:numba.core.byteflow:stack ['$22load_global.8', '$d24.9']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_GLOBAL(arg=2, lineno=685)
DEBUG:numba.core.byteflow:stack ['$22load_global.8', '$d24.9', '$castedkey26.10']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=3, lineno=685)
DEBUG:numba.core.byteflow:stack ['$22load_global.8', '$d24.9', '$castedkey26.10', '$28load_global.11']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=CALL_FUNCTION(arg=1, lineno=685)
DEBUG:numba.core.byteflow:stack ['$22load_global.8', '$d24.9', '$castedkey26.10', '$28load_global.11', '$castedkey30.12']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=4, lineno=685)
DEBUG:numba.core.byteflow:stack ['$22load_global.8', '$d24.9', '$castedkey26.10', '$32call_function.13']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=CALL_FUNCTION(arg=4, lineno=685)
DEBUG:numba.core.byteflow:stack ['$22load_global.8', '$d24.9', '$castedkey26.10', '$32call_function.13', '$castedval34.14']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_FAST(arg=5, lineno=685)
DEBUG:numba.core.byteflow:stack ['$36call_function.15']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=5, lineno=686)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_GLOBAL(arg=3, lineno=686)
DEBUG:numba.core.byteflow:stack ['$status40.16']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_ATTR(arg=4, lineno=686)
DEBUG:numba.core.byteflow:stack ['$status40.16', '$42load_global.17']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=COMPARE_OP(arg=2, lineno=686)
DEBUG:numba.core.byteflow:stack ['$status40.16', '$44load_attr.18']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=POP_JUMP_IF_FALSE(arg=54, lineno=686)
DEBUG:numba.core.byteflow:stack ['$46compare_op.19']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=50, stack=(), blockstack=(), npush=0), Edge(pc=54, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_CONST(arg=0, lineno=687)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=52, inst=RETURN_VALUE(arg=None, lineno=687)
DEBUG:numba.core.byteflow:stack ['$const50.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=54 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=5, lineno=688)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=688)
DEBUG:numba.core.byteflow:stack ['$status54.0']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_ATTR(arg=5, lineno=688)
DEBUG:numba.core.byteflow:stack ['$status54.0', '$56load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=COMPARE_OP(arg=2, lineno=688)
DEBUG:numba.core.byteflow:stack ['$status54.0', '$58load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=68, lineno=688)
DEBUG:numba.core.byteflow:stack ['$60compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=0, lineno=691)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=691)
DEBUG:numba.core.byteflow:stack ['$const64.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=68 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=5, lineno=692)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_GLOBAL(arg=3, lineno=692)
DEBUG:numba.core.byteflow:stack ['$status68.0']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_ATTR(arg=6, lineno=692)
DEBUG:numba.core.byteflow:stack ['$status68.0', '$70load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=COMPARE_OP(arg=2, lineno=692)
DEBUG:numba.core.byteflow:stack ['$status68.0', '$72load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=POP_JUMP_IF_FALSE(arg=88, lineno=692)
DEBUG:numba.core.byteflow:stack ['$74compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0), Edge(pc=88, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=88 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_GLOBAL(arg=7, lineno=693)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_CONST(arg=1, lineno=693)
DEBUG:numba.core.byteflow:stack ['$78load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=CALL_FUNCTION(arg=1, lineno=693)
DEBUG:numba.core.byteflow:stack ['$78load_global.0', '$const80.1']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=693)
DEBUG:numba.core.byteflow:stack ['$82call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=88 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_GLOBAL(arg=8, lineno=695)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_CONST(arg=2, lineno=695)
DEBUG:numba.core.byteflow:stack ['$88load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=CALL_FUNCTION(arg=1, lineno=695)
DEBUG:numba.core.byteflow:stack ['$88load_global.0', '$const90.1']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=RAISE_VARARGS(arg=1, lineno=695)
DEBUG:numba.core.byteflow:stack ['$92call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=0): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=88 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$key4.1'}), (6, {'res': '$6load_deref.2'}), (8, {'func': '$2load_global.0', 'args': ['$key4.1', '$6load_deref.2'], 'res': '$8call_function.3'}), (10, {'value': '$8call_function.3'}), (12, {'res': '$12load_global.4'}), (14, {'res': '$value14.5'}), (16, {'res': '$16load_deref.6'}), (18, {'func': '$12load_global.4', 'args': ['$value14.5', '$16load_deref.6'], 'res': '$18call_function.7'}), (20, {'value': '$18call_function.7'}), (22, {'res': '$22load_global.8'}), (24, {'res': '$d24.9'}), (26, {'res': '$castedkey26.10'}), (28, {'res': '$28load_global.11'}), (30, {'res': '$castedkey30.12'}), (32, {'func': '$28load_global.11', 'args': ['$castedkey30.12'], 'res': '$32call_function.13'}), (34, {'res': '$castedval34.14'}), (36, {'func': '$22load_global.8', 'args': ['$d24.9', '$castedkey26.10', '$32call_function.13', '$castedval34.14'], 'res': '$36call_function.15'}), (38, {'value': '$36call_function.15'}), (40, {'res': '$status40.16'}), (42, {'res': '$42load_global.17'}), (44, {'item': '$42load_global.17', 'res': '$44load_attr.18'}), (46, {'lhs': '$status40.16', 'rhs': '$44load_attr.18', 'res': '$46compare_op.19'}), (48, {'pred': '$46compare_op.19'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: (), 54: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=50 nstack_initial=0):
AdaptBlockInfo(insts=((50, {'res': '$const50.0'}), (52, {'retval': '$const50.0', 'castval': '$52return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$status54.0'}), (56, {'res': '$56load_global.1'}), (58, {'item': '$56load_global.1', 'res': '$58load_attr.2'}), (60, {'lhs': '$status54.0', 'rhs': '$58load_attr.2', 'res': '$60compare_op.3'}), (62, {'pred': '$60compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$const64.0'}), (66, {'retval': '$const64.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$status68.0'}), (70, {'res': '$70load_global.1'}), (72, {'item': '$70load_global.1', 'res': '$72load_attr.2'}), (74, {'lhs': '$status68.0', 'rhs': '$72load_attr.2', 'res': '$74compare_op.3'}), (76, {'pred': '$74compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: (), 88: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$78load_global.0'}), (80, {'res': '$const80.1'}), (82, {'func': '$78load_global.0', 'args': ['$const80.1'], 'res': '$82call_function.2'}), (84, {'exc': '$82call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=88 nstack_initial=0):
AdaptBlockInfo(insts=((88, {'res': '$88load_global.0'}), (90, {'res': '$const90.1'}), (92, {'func': '$88load_global.0', 'args': ['$const90.1'], 'res': '$92call_function.2'}), (94, {'exc': '$92call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    d = arg(0, name=d)                       ['d']
    key = arg(1, name=key)                   ['key']
    value = arg(2, name=value)               ['value']
    $2load_global.0 = global(_cast: <intrinsic _cast>) ['$2load_global.0']
    $6load_deref.2 = freevar(keyty: float64) ['$6load_deref.2']
    castedkey = call $2load_global.0(key, $6load_deref.2, func=$2load_global.0, args=[Var(key, dictobject.py:683), Var($6load_deref.2, dictobject.py:683)], kws=(), vararg=None, target=None) ['$2load_global.0', '$6load_deref.2', 'castedkey', 'key']
    $12load_global.4 = global(_cast: <intrinsic _cast>) ['$12load_global.4']
    $16load_deref.6 = freevar(valty: float64) ['$16load_deref.6']
    castedval = call $12load_global.4(value, $16load_deref.6, func=$12load_global.4, args=[Var(value, dictobject.py:683), Var($16load_deref.6, dictobject.py:684)], kws=(), vararg=None, target=None) ['$12load_global.4', '$16load_deref.6', 'castedval', 'value']
    $22load_global.8 = global(_dict_insert: <intrinsic _dict_insert>) ['$22load_global.8']
    $28load_global.11 = global(hash: <built-in function hash>) ['$28load_global.11']
    $32call_function.13 = call $28load_global.11(castedkey, func=$28load_global.11, args=[Var(castedkey, dictobject.py:683)], kws=(), vararg=None, target=None) ['$28load_global.11', '$32call_function.13', 'castedkey']
    status = call $22load_global.8(d, castedkey, $32call_function.13, castedval, func=$22load_global.8, args=[Var(d, dictobject.py:683), Var(castedkey, dictobject.py:683), Var($32call_function.13, dictobject.py:685), Var(castedval, dictobject.py:684)], kws=(), vararg=None, target=None) ['$22load_global.8', '$32call_function.13', 'castedkey', 'castedval', 'd', 'status']
    $42load_global.17 = global(Status: <enum 'Status'>) ['$42load_global.17']
    $44load_attr.18 = getattr(value=$42load_global.17, attr=OK) ['$42load_global.17', '$44load_attr.18']
    $46compare_op.19 = status == $44load_attr.18 ['$44load_attr.18', '$46compare_op.19', 'status']
    bool48 = global(bool: <class 'bool'>)    ['bool48']
    $48pred = call bool48($46compare_op.19, func=bool48, args=(Var($46compare_op.19, dictobject.py:686),), kws=(), vararg=None, target=None) ['$46compare_op.19', '$48pred', 'bool48']
    branch $48pred, 50, 54                   ['$48pred']
label 50:
    $const50.0 = const(NoneType, None)       ['$const50.0']
    $52return_value.1 = cast(value=$const50.0) ['$52return_value.1', '$const50.0']
    return $52return_value.1                 ['$52return_value.1']
label 54:
    $56load_global.1 = global(Status: <enum 'Status'>) ['$56load_global.1']
    $58load_attr.2 = getattr(value=$56load_global.1, attr=OK_REPLACED) ['$56load_global.1', '$58load_attr.2']
    $60compare_op.3 = status == $58load_attr.2 ['$58load_attr.2', '$60compare_op.3', 'status']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60compare_op.3, func=bool62, args=(Var($60compare_op.3, dictobject.py:688),), kws=(), vararg=None, target=None) ['$60compare_op.3', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $const64.0 = const(NoneType, None)       ['$const64.0']
    $66return_value.1 = cast(value=$const64.0) ['$66return_value.1', '$const64.0']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $70load_global.1 = global(Status: <enum 'Status'>) ['$70load_global.1']
    $72load_attr.2 = getattr(value=$70load_global.1, attr=ERR_CMP_FAILED) ['$70load_global.1', '$72load_attr.2']
    $74compare_op.3 = status == $72load_attr.2 ['$72load_attr.2', '$74compare_op.3', 'status']
    bool76 = global(bool: <class 'bool'>)    ['bool76']
    $76pred = call bool76($74compare_op.3, func=bool76, args=(Var($74compare_op.3, dictobject.py:692),), kws=(), vararg=None, target=None) ['$74compare_op.3', '$76pred', 'bool76']
    branch $76pred, 78, 88                   ['$76pred']
label 78:
    $78load_global.0 = global(ValueError: <class 'ValueError'>) ['$78load_global.0']
    $const80.1 = const(str, key comparison failed) ['$const80.1']
    $82call_function.2 = call $78load_global.0($const80.1, func=$78load_global.0, args=[Var($const80.1, dictobject.py:693)], kws=(), vararg=None, target=None) ['$78load_global.0', '$82call_function.2', '$const80.1']
    raise $82call_function.2                 ['$82call_function.2']
label 88:
    $88load_global.0 = global(RuntimeError: <class 'RuntimeError'>) ['$88load_global.0']
    $const90.1 = const(str, dict.__setitem__ failed unexpectedly) ['$const90.1']
    $92call_function.2 = call $88load_global.0($const90.1, func=$88load_global.0, args=[Var($const90.1, dictobject.py:695)], kws=(), vararg=None, target=None) ['$88load_global.0', '$92call_function.2', '$const90.1']
    raise $92call_function.2                 ['$92call_function.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fda21a440d0>
DEBUG:numba.core.ssa:on stmt: d = arg(0, name=d)
DEBUG:numba.core.ssa:on stmt: key = arg(1, name=key)
DEBUG:numba.core.ssa:on stmt: value = arg(2, name=value)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(_cast: <intrinsic _cast>)
DEBUG:numba.core.ssa:on stmt: $6load_deref.2 = freevar(keyty: float64)
DEBUG:numba.core.ssa:on stmt: castedkey = call $2load_global.0(key, $6load_deref.2, func=$2load_global.0, args=[Var(key, dictobject.py:683), Var($6load_deref.2, dictobject.py:683)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12load_global.4 = global(_cast: <intrinsic _cast>)
DEBUG:numba.core.ssa:on stmt: $16load_deref.6 = freevar(valty: float64)
DEBUG:numba.core.ssa:on stmt: castedval = call $12load_global.4(value, $16load_deref.6, func=$12load_global.4, args=[Var(value, dictobject.py:683), Var($16load_deref.6, dictobject.py:684)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $22load_global.8 = global(_dict_insert: <intrinsic _dict_insert>)
DEBUG:numba.core.ssa:on stmt: $28load_global.11 = global(hash: <built-in function hash>)
DEBUG:numba.core.ssa:on stmt: $32call_function.13 = call $28load_global.11(castedkey, func=$28load_global.11, args=[Var(castedkey, dictobject.py:683)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: status = call $22load_global.8(d, castedkey, $32call_function.13, castedval, func=$22load_global.8, args=[Var(d, dictobject.py:683), Var(castedkey, dictobject.py:683), Var($32call_function.13, dictobject.py:685), Var(castedval, dictobject.py:684)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $42load_global.17 = global(Status: <enum 'Status'>)
DEBUG:numba.core.ssa:on stmt: $44load_attr.18 = getattr(value=$42load_global.17, attr=OK)
DEBUG:numba.core.ssa:on stmt: $46compare_op.19 = status == $44load_attr.18
DEBUG:numba.core.ssa:on stmt: bool48 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $48pred = call bool48($46compare_op.19, func=bool48, args=(Var($46compare_op.19, dictobject.py:686),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $48pred, 50, 54
DEBUG:numba.core.ssa:==== SSA block analysis pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fda21a440d0>
DEBUG:numba.core.ssa:on stmt: $const50.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $52return_value.1 = cast(value=$const50.0)
DEBUG:numba.core.ssa:on stmt: return $52return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 54
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fda21a440d0>
DEBUG:numba.core.ssa:on stmt: $56load_global.1 = global(Status: <enum 'Status'>)
DEBUG:numba.core.ssa:on stmt: $58load_attr.2 = getattr(value=$56load_global.1, attr=OK_REPLACED)
DEBUG:numba.core.ssa:on stmt: $60compare_op.3 = status == $58load_attr.2
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($60compare_op.3, func=bool62, args=(Var($60compare_op.3, dictobject.py:688),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 68
DEBUG:numba.core.ssa:==== SSA block analysis pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fda21a440d0>
DEBUG:numba.core.ssa:on stmt: $const64.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $66return_value.1 = cast(value=$const64.0)
DEBUG:numba.core.ssa:on stmt: return $66return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fda21a440d0>
DEBUG:numba.core.ssa:on stmt: $70load_global.1 = global(Status: <enum 'Status'>)
DEBUG:numba.core.ssa:on stmt: $72load_attr.2 = getattr(value=$70load_global.1, attr=ERR_CMP_FAILED)
DEBUG:numba.core.ssa:on stmt: $74compare_op.3 = status == $72load_attr.2
DEBUG:numba.core.ssa:on stmt: bool76 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $76pred = call bool76($74compare_op.3, func=bool76, args=(Var($74compare_op.3, dictobject.py:692),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $76pred, 78, 88
DEBUG:numba.core.ssa:==== SSA block analysis pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fda21a440d0>
DEBUG:numba.core.ssa:on stmt: $78load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const80.1 = const(str, key comparison failed)
DEBUG:numba.core.ssa:on stmt: $82call_function.2 = call $78load_global.0($const80.1, func=$78load_global.0, args=[Var($const80.1, dictobject.py:693)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('key comparison failed')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 88
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fda21a440d0>
DEBUG:numba.core.ssa:on stmt: $88load_global.0 = global(RuntimeError: <class 'RuntimeError'>)
DEBUG:numba.core.ssa:on stmt: $const90.1 = const(str, dict.__setitem__ failed unexpectedly)
DEBUG:numba.core.ssa:on stmt: $92call_function.2 = call $88load_global.0($const90.1, func=$88load_global.0, args=[Var($const90.1, dictobject.py:695)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'RuntimeError'>('dict.__setitem__ failed unexpectedly')
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12load_global.4': [<numba.core.ir.Assign object at 0x7fda21a65be0>],
             '$16load_deref.6': [<numba.core.ir.Assign object at 0x7fda21a65700>],
             '$22load_global.8': [<numba.core.ir.Assign object at 0x7fda21a65400>],
             '$28load_global.11': [<numba.core.ir.Assign object at 0x7fda21a65040>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fda214f5f70>],
             '$32call_function.13': [<numba.core.ir.Assign object at 0x7fda21a3bf70>],
             '$42load_global.17': [<numba.core.ir.Assign object at 0x7fda21a3b8b0>],
             '$44load_attr.18': [<numba.core.ir.Assign object at 0x7fda21a3b6a0>],
             '$46compare_op.19': [<numba.core.ir.Assign object at 0x7fda21a3b430>],
             '$48pred': [<numba.core.ir.Assign object at 0x7fda21a3b310>],
             '$52return_value.1': [<numba.core.ir.Assign object at 0x7fda21a3be80>],
             '$56load_global.1': [<numba.core.ir.Assign object at 0x7fda21a2ff10>],
             '$58load_attr.2': [<numba.core.ir.Assign object at 0x7fda21a2faf0>],
             '$60compare_op.3': [<numba.core.ir.Assign object at 0x7fda21a2f490>],
             '$62pred': [<numba.core.ir.Assign object at 0x7fda21a2f100>],
             '$66return_value.1': [<numba.core.ir.Assign object at 0x7fda21a2f430>],
             '$6load_deref.2': [<numba.core.ir.Assign object at 0x7fda21a7c2b0>],
             '$70load_global.1': [<numba.core.ir.Assign object at 0x7fda21a15a60>],
             '$72load_attr.2': [<numba.core.ir.Assign object at 0x7fda21a15970>],
             '$74compare_op.3': [<numba.core.ir.Assign object at 0x7fda21a15c70>],
             '$76pred': [<numba.core.ir.Assign object at 0x7fda21a15fd0>],
             '$78load_global.0': [<numba.core.ir.Assign object at 0x7fda21a151c0>],
             '$82call_function.2': [<numba.core.ir.Assign object at 0x7fda21a15640>],
             '$88load_global.0': [<numba.core.ir.Assign object at 0x7fda21a15400>],
             '$92call_function.2': [<numba.core.ir.Assign object at 0x7fda21a05f40>],
             '$const50.0': [<numba.core.ir.Assign object at 0x7fd9f0263a60>],
             '$const64.0': [<numba.core.ir.Assign object at 0x7fda21a2fdf0>],
             '$const80.1': [<numba.core.ir.Assign object at 0x7fda21a15130>],
             '$const90.1': [<numba.core.ir.Assign object at 0x7fda21a05760>],
             'bool48': [<numba.core.ir.Assign object at 0x7fda21a3b520>],
             'bool62': [<numba.core.ir.Assign object at 0x7fda21a2f190>],
             'bool76': [<numba.core.ir.Assign object at 0x7fda21a15f10>],
             'castedkey': [<numba.core.ir.Assign object at 0x7fda21a65df0>],
             'castedval': [<numba.core.ir.Assign object at 0x7fda21a65820>],
             'd': [<numba.core.ir.Assign object at 0x7fda403b9490>],
             'key': [<numba.core.ir.Assign object at 0x7fd9e0039070>],
             'status': [<numba.core.ir.Assign object at 0x7fda21a3bbe0>],
             'value': [<numba.core.ir.Assign object at 0x7fd9e0039670>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=49)
           2	LOAD_FAST(arg=0, lineno=49)
           4	LOAD_METHOD(arg=0, lineno=49)
           6	CALL_METHOD(arg=0, lineno=49)
           8	RETURN_VALUE(arg=None, lineno=49)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=49)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=49)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=49)
DEBUG:numba.core.byteflow:stack ['$obj2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_METHOD(arg=0, lineno=49)
DEBUG:numba.core.byteflow:stack ['$4load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=49)
DEBUG:numba.core.byteflow:stack ['$6call_method.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$obj2.0'}), (4, {'item': '$obj2.0', 'res': '$4load_method.1'}), (6, {'func': '$4load_method.1', 'args': [], 'res': '$6call_method.2'}), (8, {'retval': '$6call_method.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    $4load_method.1 = getattr(value=obj, attr=__hash__) ['$4load_method.1', 'obj']
    $6call_method.2 = call $4load_method.1(func=$4load_method.1, args=[], kws=(), vararg=None, target=None) ['$4load_method.1', '$6call_method.2']
    $8return_value.3 = cast(value=$6call_method.2) ['$6call_method.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fda219cd4f0>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=obj, attr=__hash__)
DEBUG:numba.core.ssa:on stmt: $6call_method.2 = call $4load_method.1(func=$4load_method.1, args=[], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $8return_value.3 = cast(value=$6call_method.2)
DEBUG:numba.core.ssa:on stmt: return $8return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$4load_method.1': [<numba.core.ir.Assign object at 0x7fda219e1c10>],
             '$6call_method.2': [<numba.core.ir.Assign object at 0x7fda219e1b20>],
             '$8return_value.3': [<numba.core.ir.Assign object at 0x7fda219e1d60>],
             'obj': [<numba.core.ir.Assign object at 0x7fda21a05460>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	LOAD_GLOBAL(arg=0, lineno=214)
           4	LOAD_FAST(arg=0, lineno=214)
           6	CALL_FUNCTION(arg=1, lineno=214)
           8	STORE_FAST(arg=1, lineno=214)
          10	LOAD_FAST(arg=1, lineno=215)
          12	RETURN_VALUE(arg=None, lineno=215)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=214)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=214)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=214)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=214)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$val4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=1, lineno=214)
DEBUG:numba.core.byteflow:stack ['$6call_function.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=215)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=215)
DEBUG:numba.core.byteflow:stack ['$hashed10.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$val4.1'}), (6, {'func': '$2load_global.0', 'args': ['$val4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$hashed10.3'}), (12, {'retval': '$hashed10.3', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    val = arg(0, name=val)                   ['val']
    $2load_global.0 = global(_Py_HashDouble: <function _Py_HashDouble at 0x7fda213bc5e0>) ['$2load_global.0']
    hashed = call $2load_global.0(val, func=$2load_global.0, args=[Var(val, hashing.py:214)], kws=(), vararg=None, target=None) ['$2load_global.0', 'hashed', 'val']
    $12return_value.4 = cast(value=hashed)   ['$12return_value.4', 'hashed']
    return $12return_value.4                 ['$12return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fda219a7490>
DEBUG:numba.core.ssa:on stmt: val = arg(0, name=val)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(_Py_HashDouble: <function _Py_HashDouble at 0x7fda213bc5e0>)
DEBUG:numba.core.ssa:on stmt: hashed = call $2load_global.0(val, func=$2load_global.0, args=[Var(val, hashing.py:214)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12return_value.4 = cast(value=hashed)
DEBUG:numba.core.ssa:on stmt: return $12return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12return_value.4': [<numba.core.ir.Assign object at 0x7fda2197c1f0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fd9e034cee0>],
             'hashed': [<numba.core.ir.Assign object at 0x7fd9e034ca00>],
             'val': [<numba.core.ir.Assign object at 0x7fd9e034c6d0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=72)
           2	LOAD_GLOBAL(arg=0, lineno=72)
           4	LOAD_METHOD(arg=1, lineno=72)
           6	LOAD_FAST(arg=0, lineno=72)
           8	CALL_METHOD(arg=1, lineno=72)
          10	POP_JUMP_IF_TRUE(arg=46, lineno=72)
          12	LOAD_GLOBAL(arg=0, lineno=73)
          14	LOAD_METHOD(arg=2, lineno=73)
          16	LOAD_FAST(arg=0, lineno=73)
          18	CALL_METHOD(arg=1, lineno=73)
          20	POP_JUMP_IF_FALSE(arg=42, lineno=73)
          22	LOAD_FAST(arg=0, lineno=74)
          24	LOAD_CONST(arg=1, lineno=74)
          26	COMPARE_OP(arg=4, lineno=74)
          28	POP_JUMP_IF_FALSE(arg=34, lineno=74)
          30	LOAD_GLOBAL(arg=3, lineno=75)
          32	RETURN_VALUE(arg=None, lineno=75)
>         34	LOAD_GLOBAL(arg=3, lineno=77)
          36	UNARY_NEGATIVE(arg=None, lineno=77)
          38	RETURN_VALUE(arg=None, lineno=77)
          40	JUMP_FORWARD(arg=4, lineno=77)
>         42	LOAD_GLOBAL(arg=4, lineno=79)
          44	RETURN_VALUE(arg=None, lineno=79)
>         46	LOAD_GLOBAL(arg=5, lineno=81)
          48	LOAD_METHOD(arg=6, lineno=81)
          50	LOAD_FAST(arg=0, lineno=81)
          52	CALL_METHOD(arg=1, lineno=81)
          54	UNPACK_SEQUENCE(arg=2, lineno=81)
          56	STORE_FAST(arg=1, lineno=81)
          58	STORE_FAST(arg=2, lineno=81)
          60	LOAD_CONST(arg=2, lineno=83)
          62	STORE_FAST(arg=3, lineno=83)
          64	LOAD_FAST(arg=1, lineno=84)
          66	LOAD_CONST(arg=1, lineno=84)
          68	COMPARE_OP(arg=0, lineno=84)
          70	POP_JUMP_IF_FALSE(arg=82, lineno=84)
          72	LOAD_CONST(arg=3, lineno=85)
          74	STORE_FAST(arg=3, lineno=85)
          76	LOAD_FAST(arg=1, lineno=86)
          78	UNARY_NEGATIVE(arg=None, lineno=86)
          80	STORE_FAST(arg=1, lineno=86)
>         82	LOAD_CONST(arg=1, lineno=90)
          84	STORE_FAST(arg=4, lineno=90)
>         86	LOAD_FAST(arg=1, lineno=91)
          88	POP_JUMP_IF_FALSE(arg=172, lineno=91)
          90	LOAD_FAST(arg=4, lineno=92)
          92	LOAD_CONST(arg=4, lineno=92)
          94	BINARY_LSHIFT(arg=None, lineno=92)
          96	LOAD_GLOBAL(arg=7, lineno=92)
          98	BINARY_AND(arg=None, lineno=92)
         100	LOAD_FAST(arg=4, lineno=92)
         102	LOAD_GLOBAL(arg=8, lineno=92)
         104	LOAD_CONST(arg=4, lineno=92)
         106	BINARY_SUBTRACT(arg=None, lineno=92)
         108	BINARY_RSHIFT(arg=None, lineno=92)
         110	BINARY_OR(arg=None, lineno=92)
         112	STORE_FAST(arg=4, lineno=92)
         114	LOAD_FAST(arg=1, lineno=93)
         116	LOAD_CONST(arg=5, lineno=93)
         118	INPLACE_MULTIPLY(arg=None, lineno=93)
         120	STORE_FAST(arg=1, lineno=93)
         122	LOAD_FAST(arg=2, lineno=94)
         124	LOAD_CONST(arg=4, lineno=94)
         126	INPLACE_SUBTRACT(arg=None, lineno=94)
         128	STORE_FAST(arg=2, lineno=94)
         130	LOAD_GLOBAL(arg=9, lineno=95)
         132	LOAD_FAST(arg=1, lineno=95)
         134	CALL_FUNCTION(arg=1, lineno=95)
         136	STORE_FAST(arg=5, lineno=95)
         138	LOAD_FAST(arg=1, lineno=96)
         140	LOAD_FAST(arg=5, lineno=96)
         142	INPLACE_SUBTRACT(arg=None, lineno=96)
         144	STORE_FAST(arg=1, lineno=96)
         146	LOAD_FAST(arg=4, lineno=97)
         148	LOAD_FAST(arg=5, lineno=97)
         150	INPLACE_ADD(arg=None, lineno=97)
         152	STORE_FAST(arg=4, lineno=97)
         154	LOAD_FAST(arg=4, lineno=98)
         156	LOAD_GLOBAL(arg=7, lineno=98)
         158	COMPARE_OP(arg=5, lineno=98)
         160	POP_JUMP_IF_FALSE(arg=86, lineno=98)
         162	LOAD_FAST(arg=4, lineno=99)
         164	LOAD_GLOBAL(arg=7, lineno=99)
         166	INPLACE_SUBTRACT(arg=None, lineno=99)
         168	STORE_FAST(arg=4, lineno=99)
         170	JUMP_ABSOLUTE(arg=86, lineno=99)
>        172	LOAD_FAST(arg=2, lineno=101)
         174	LOAD_CONST(arg=1, lineno=101)
         176	COMPARE_OP(arg=5, lineno=101)
         178	POP_JUMP_IF_FALSE(arg=190, lineno=101)
         180	LOAD_FAST(arg=2, lineno=102)
         182	LOAD_GLOBAL(arg=8, lineno=102)
         184	BINARY_MODULO(arg=None, lineno=102)
         186	STORE_FAST(arg=2, lineno=102)
         188	JUMP_FORWARD(arg=20, lineno=102)
>        190	LOAD_GLOBAL(arg=8, lineno=104)
         192	LOAD_CONST(arg=2, lineno=104)
         194	BINARY_SUBTRACT(arg=None, lineno=104)
         196	LOAD_CONST(arg=3, lineno=104)
         198	LOAD_FAST(arg=2, lineno=104)
         200	BINARY_SUBTRACT(arg=None, lineno=104)
         202	LOAD_GLOBAL(arg=8, lineno=104)
         204	BINARY_MODULO(arg=None, lineno=104)
         206	BINARY_SUBTRACT(arg=None, lineno=104)
         208	STORE_FAST(arg=2, lineno=104)
>        210	LOAD_FAST(arg=4, lineno=106)
         212	LOAD_FAST(arg=2, lineno=106)
         214	BINARY_LSHIFT(arg=None, lineno=106)
         216	LOAD_GLOBAL(arg=7, lineno=106)
         218	BINARY_AND(arg=None, lineno=106)
         220	LOAD_FAST(arg=4, lineno=106)
         222	LOAD_GLOBAL(arg=8, lineno=106)
         224	LOAD_FAST(arg=2, lineno=106)
         226	BINARY_SUBTRACT(arg=None, lineno=106)
         228	BINARY_RSHIFT(arg=None, lineno=106)
         230	BINARY_OR(arg=None, lineno=106)
         232	STORE_FAST(arg=4, lineno=106)
         234	LOAD_FAST(arg=4, lineno=108)
         236	LOAD_FAST(arg=3, lineno=108)
         238	BINARY_MULTIPLY(arg=None, lineno=108)
         240	STORE_FAST(arg=4, lineno=108)
         242	LOAD_GLOBAL(arg=10, lineno=109)
         244	LOAD_FAST(arg=4, lineno=109)
         246	CALL_FUNCTION(arg=1, lineno=109)
         248	RETURN_VALUE(arg=None, lineno=109)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=72)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=72)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=72)
DEBUG:numba.core.byteflow:stack ['$4load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=CALL_METHOD(arg=1, lineno=72)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$v6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=POP_JUMP_IF_TRUE(arg=46, lineno=72)
DEBUG:numba.core.byteflow:stack ['$8call_method.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=12, stack=(), blockstack=(), npush=0), Edge(pc=46, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=12 nstack_initial=0), State(pc_initial=46 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_GLOBAL(arg=0, lineno=73)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_METHOD(arg=2, lineno=73)
DEBUG:numba.core.byteflow:stack ['$12load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=73)
DEBUG:numba.core.byteflow:stack ['$14load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=CALL_METHOD(arg=1, lineno=73)
DEBUG:numba.core.byteflow:stack ['$14load_method.1', '$v16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=POP_JUMP_IF_FALSE(arg=42, lineno=73)
DEBUG:numba.core.byteflow:stack ['$18call_method.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=22, stack=(), blockstack=(), npush=0), Edge(pc=42, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=46 nstack_initial=0), State(pc_initial=22 nstack_initial=0), State(pc_initial=42 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_GLOBAL(arg=5, lineno=81)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_METHOD(arg=6, lineno=81)
DEBUG:numba.core.byteflow:stack ['$46load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=0, lineno=81)
DEBUG:numba.core.byteflow:stack ['$48load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=CALL_METHOD(arg=1, lineno=81)
DEBUG:numba.core.byteflow:stack ['$48load_method.1', '$v50.2']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=UNPACK_SEQUENCE(arg=2, lineno=81)
DEBUG:numba.core.byteflow:stack ['$52call_method.3']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=STORE_FAST(arg=1, lineno=81)
DEBUG:numba.core.byteflow:stack ['$54unpack_sequence.5', '$54unpack_sequence.4']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=STORE_FAST(arg=2, lineno=81)
DEBUG:numba.core.byteflow:stack ['$54unpack_sequence.5']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=83)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=STORE_FAST(arg=3, lineno=83)
DEBUG:numba.core.byteflow:stack ['$const60.7']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=1, lineno=84)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_CONST(arg=1, lineno=84)
DEBUG:numba.core.byteflow:stack ['$m64.8']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=COMPARE_OP(arg=0, lineno=84)
DEBUG:numba.core.byteflow:stack ['$m64.8', '$const66.9']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=POP_JUMP_IF_FALSE(arg=82, lineno=84)
DEBUG:numba.core.byteflow:stack ['$68compare_op.10']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=72, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=22 nstack_initial=0), State(pc_initial=42 nstack_initial=0), State(pc_initial=72 nstack_initial=0), State(pc_initial=82 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=74)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_CONST(arg=1, lineno=74)
DEBUG:numba.core.byteflow:stack ['$v22.0']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=COMPARE_OP(arg=4, lineno=74)
DEBUG:numba.core.byteflow:stack ['$v22.0', '$const24.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=34, lineno=74)
DEBUG:numba.core.byteflow:stack ['$26compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=34, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=72 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=30 nstack_initial=0), State(pc_initial=34 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_GLOBAL(arg=4, lineno=79)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=RETURN_VALUE(arg=None, lineno=79)
DEBUG:numba.core.byteflow:stack ['$42load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=72 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=30 nstack_initial=0), State(pc_initial=34 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_CONST(arg=3, lineno=85)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=74, inst=STORE_FAST(arg=3, lineno=85)
DEBUG:numba.core.byteflow:stack ['$const72.0']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_FAST(arg=1, lineno=86)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=78, inst=UNARY_NEGATIVE(arg=None, lineno=86)
DEBUG:numba.core.byteflow:stack ['$m76.1']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=STORE_FAST(arg=1, lineno=86)
DEBUG:numba.core.byteflow:stack ['$78unary_negative.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=30 nstack_initial=0), State(pc_initial=34 nstack_initial=0), State(pc_initial=82 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_CONST(arg=1, lineno=90)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=84, inst=STORE_FAST(arg=4, lineno=90)
DEBUG:numba.core.byteflow:stack ['$const82.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=86, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=34 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_GLOBAL(arg=3, lineno=75)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=75)
DEBUG:numba.core.byteflow:stack ['$30load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_GLOBAL(arg=3, lineno=77)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=UNARY_NEGATIVE(arg=None, lineno=77)
DEBUG:numba.core.byteflow:stack ['$34load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=RETURN_VALUE(arg=None, lineno=77)
DEBUG:numba.core.byteflow:stack ['$36unary_negative.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=1, lineno=91)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=POP_JUMP_IF_FALSE(arg=172, lineno=91)
DEBUG:numba.core.byteflow:stack ['$m86.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=172, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=172 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=92)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_CONST(arg=4, lineno=92)
DEBUG:numba.core.byteflow:stack ['$x90.0']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=BINARY_LSHIFT(arg=None, lineno=92)
DEBUG:numba.core.byteflow:stack ['$x90.0', '$const92.1']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_GLOBAL(arg=7, lineno=92)
DEBUG:numba.core.byteflow:stack ['$94binary_lshift.2']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=BINARY_AND(arg=None, lineno=92)
DEBUG:numba.core.byteflow:stack ['$94binary_lshift.2', '$96load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=4, lineno=92)
DEBUG:numba.core.byteflow:stack ['$98binary_and.4']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_GLOBAL(arg=8, lineno=92)
DEBUG:numba.core.byteflow:stack ['$98binary_and.4', '$x100.5']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_CONST(arg=4, lineno=92)
DEBUG:numba.core.byteflow:stack ['$98binary_and.4', '$x100.5', '$102load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=BINARY_SUBTRACT(arg=None, lineno=92)
DEBUG:numba.core.byteflow:stack ['$98binary_and.4', '$x100.5', '$102load_global.6', '$const104.7']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=BINARY_RSHIFT(arg=None, lineno=92)
DEBUG:numba.core.byteflow:stack ['$98binary_and.4', '$x100.5', '$106binary_subtract.8']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=BINARY_OR(arg=None, lineno=92)
DEBUG:numba.core.byteflow:stack ['$98binary_and.4', '$108binary_rshift.9']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=STORE_FAST(arg=4, lineno=92)
DEBUG:numba.core.byteflow:stack ['$110binary_or.10']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_FAST(arg=1, lineno=93)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_CONST(arg=5, lineno=93)
DEBUG:numba.core.byteflow:stack ['$m114.11']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=INPLACE_MULTIPLY(arg=None, lineno=93)
DEBUG:numba.core.byteflow:stack ['$m114.11', '$const116.12']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=STORE_FAST(arg=1, lineno=93)
DEBUG:numba.core.byteflow:stack ['$118inplace_multiply.13']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_FAST(arg=2, lineno=94)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_CONST(arg=4, lineno=94)
DEBUG:numba.core.byteflow:stack ['$e122.14']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=INPLACE_SUBTRACT(arg=None, lineno=94)
DEBUG:numba.core.byteflow:stack ['$e122.14', '$const124.15']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=STORE_FAST(arg=2, lineno=94)
DEBUG:numba.core.byteflow:stack ['$126inplace_subtract.16']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_GLOBAL(arg=9, lineno=95)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_FAST(arg=1, lineno=95)
DEBUG:numba.core.byteflow:stack ['$130load_global.17']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=CALL_FUNCTION(arg=1, lineno=95)
DEBUG:numba.core.byteflow:stack ['$130load_global.17', '$m132.18']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=STORE_FAST(arg=5, lineno=95)
DEBUG:numba.core.byteflow:stack ['$134call_function.19']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_FAST(arg=1, lineno=96)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=5, lineno=96)
DEBUG:numba.core.byteflow:stack ['$m138.20']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=INPLACE_SUBTRACT(arg=None, lineno=96)
DEBUG:numba.core.byteflow:stack ['$m138.20', '$y140.21']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=STORE_FAST(arg=1, lineno=96)
DEBUG:numba.core.byteflow:stack ['$142inplace_subtract.22']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_FAST(arg=4, lineno=97)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=5, lineno=97)
DEBUG:numba.core.byteflow:stack ['$x146.23']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=INPLACE_ADD(arg=None, lineno=97)
DEBUG:numba.core.byteflow:stack ['$x146.23', '$y148.24']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=STORE_FAST(arg=4, lineno=97)
DEBUG:numba.core.byteflow:stack ['$150inplace_add.25']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=98)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_GLOBAL(arg=7, lineno=98)
DEBUG:numba.core.byteflow:stack ['$x154.26']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=COMPARE_OP(arg=5, lineno=98)
DEBUG:numba.core.byteflow:stack ['$x154.26', '$156load_global.27']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=POP_JUMP_IF_FALSE(arg=86, lineno=98)
DEBUG:numba.core.byteflow:stack ['$158compare_op.28']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=162, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=172 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=172, inst=LOAD_FAST(arg=2, lineno=101)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=174, inst=LOAD_CONST(arg=1, lineno=101)
DEBUG:numba.core.byteflow:stack ['$e172.0']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=COMPARE_OP(arg=5, lineno=101)
DEBUG:numba.core.byteflow:stack ['$e172.0', '$const174.1']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=POP_JUMP_IF_FALSE(arg=190, lineno=101)
DEBUG:numba.core.byteflow:stack ['$176compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=180, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=162 nstack_initial=0), State(pc_initial=86 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_FAST(arg=4, lineno=99)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_GLOBAL(arg=7, lineno=99)
DEBUG:numba.core.byteflow:stack ['$x162.0']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=INPLACE_SUBTRACT(arg=None, lineno=99)
DEBUG:numba.core.byteflow:stack ['$x162.0', '$164load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=STORE_FAST(arg=4, lineno=99)
DEBUG:numba.core.byteflow:stack ['$166inplace_subtract.2']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=JUMP_ABSOLUTE(arg=86, lineno=99)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=86, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_FAST(arg=2, lineno=102)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=182, inst=LOAD_GLOBAL(arg=8, lineno=102)
DEBUG:numba.core.byteflow:stack ['$e180.0']
DEBUG:numba.core.byteflow:dispatch pc=184, inst=BINARY_MODULO(arg=None, lineno=102)
DEBUG:numba.core.byteflow:stack ['$e180.0', '$182load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=STORE_FAST(arg=2, lineno=102)
DEBUG:numba.core.byteflow:stack ['$184binary_modulo.2']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=JUMP_FORWARD(arg=20, lineno=102)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=210, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=86 nstack_initial=0), State(pc_initial=210 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=190, inst=LOAD_GLOBAL(arg=8, lineno=104)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=104)
DEBUG:numba.core.byteflow:stack ['$190load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=BINARY_SUBTRACT(arg=None, lineno=104)
DEBUG:numba.core.byteflow:stack ['$190load_global.0', '$const192.1']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_CONST(arg=3, lineno=104)
DEBUG:numba.core.byteflow:stack ['$194binary_subtract.2']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=LOAD_FAST(arg=2, lineno=104)
DEBUG:numba.core.byteflow:stack ['$194binary_subtract.2', '$const196.3']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=BINARY_SUBTRACT(arg=None, lineno=104)
DEBUG:numba.core.byteflow:stack ['$194binary_subtract.2', '$const196.3', '$e198.4']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=LOAD_GLOBAL(arg=8, lineno=104)
DEBUG:numba.core.byteflow:stack ['$194binary_subtract.2', '$200binary_subtract.5']
DEBUG:numba.core.byteflow:dispatch pc=204, inst=BINARY_MODULO(arg=None, lineno=104)
DEBUG:numba.core.byteflow:stack ['$194binary_subtract.2', '$200binary_subtract.5', '$202load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=BINARY_SUBTRACT(arg=None, lineno=104)
DEBUG:numba.core.byteflow:stack ['$194binary_subtract.2', '$204binary_modulo.7']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=STORE_FAST(arg=2, lineno=104)
DEBUG:numba.core.byteflow:stack ['$206binary_subtract.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=210, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=0), State(pc_initial=210 nstack_initial=0), State(pc_initial=210 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=210 nstack_initial=0), State(pc_initial=210 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_FAST(arg=4, lineno=106)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=212, inst=LOAD_FAST(arg=2, lineno=106)
DEBUG:numba.core.byteflow:stack ['$x210.0']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=BINARY_LSHIFT(arg=None, lineno=106)
DEBUG:numba.core.byteflow:stack ['$x210.0', '$e212.1']
DEBUG:numba.core.byteflow:dispatch pc=216, inst=LOAD_GLOBAL(arg=7, lineno=106)
DEBUG:numba.core.byteflow:stack ['$214binary_lshift.2']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=BINARY_AND(arg=None, lineno=106)
DEBUG:numba.core.byteflow:stack ['$214binary_lshift.2', '$216load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=4, lineno=106)
DEBUG:numba.core.byteflow:stack ['$218binary_and.4']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=LOAD_GLOBAL(arg=8, lineno=106)
DEBUG:numba.core.byteflow:stack ['$218binary_and.4', '$x220.5']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=LOAD_FAST(arg=2, lineno=106)
DEBUG:numba.core.byteflow:stack ['$218binary_and.4', '$x220.5', '$222load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=BINARY_SUBTRACT(arg=None, lineno=106)
DEBUG:numba.core.byteflow:stack ['$218binary_and.4', '$x220.5', '$222load_global.6', '$e224.7']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=BINARY_RSHIFT(arg=None, lineno=106)
DEBUG:numba.core.byteflow:stack ['$218binary_and.4', '$x220.5', '$226binary_subtract.8']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=BINARY_OR(arg=None, lineno=106)
DEBUG:numba.core.byteflow:stack ['$218binary_and.4', '$228binary_rshift.9']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=STORE_FAST(arg=4, lineno=106)
DEBUG:numba.core.byteflow:stack ['$230binary_or.10']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_FAST(arg=4, lineno=108)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=236, inst=LOAD_FAST(arg=3, lineno=108)
DEBUG:numba.core.byteflow:stack ['$x234.11']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=BINARY_MULTIPLY(arg=None, lineno=108)
DEBUG:numba.core.byteflow:stack ['$x234.11', '$sign236.12']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=STORE_FAST(arg=4, lineno=108)
DEBUG:numba.core.byteflow:stack ['$238binary_multiply.13']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=LOAD_GLOBAL(arg=10, lineno=109)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=109)
DEBUG:numba.core.byteflow:stack ['$242load_global.14']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=CALL_FUNCTION(arg=1, lineno=109)
DEBUG:numba.core.byteflow:stack ['$242load_global.14', '$x244.15']
DEBUG:numba.core.byteflow:dispatch pc=248, inst=RETURN_VALUE(arg=None, lineno=109)
DEBUG:numba.core.byteflow:stack ['$246call_function.16']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=210 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=34 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=46 nstack_initial=0): set(),
             State(pc_initial=72 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set(),
             State(pc_initial=90 nstack_initial=0): set(),
             State(pc_initial=162 nstack_initial=0): set(),
             State(pc_initial=172 nstack_initial=0): set(),
             State(pc_initial=180 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set(),
             State(pc_initial=210 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$v6.2'}), (8, {'func': '$4load_method.1', 'args': ['$v6.2'], 'res': '$8call_method.3'}), (10, {'pred': '$8call_method.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: (), 46: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=12 nstack_initial=0):
AdaptBlockInfo(insts=((12, {'res': '$12load_global.0'}), (14, {'item': '$12load_global.0', 'res': '$14load_method.1'}), (16, {'res': '$v16.2'}), (18, {'func': '$14load_method.1', 'args': ['$v16.2'], 'res': '$18call_method.3'}), (20, {'pred': '$18call_method.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: (), 42: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=22 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'res': '$v22.0'}), (24, {'res': '$const24.1'}), (26, {'lhs': '$v22.0', 'rhs': '$const24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 34: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {'res': '$30load_global.0'}), (32, {'retval': '$30load_global.0', 'castval': '$32return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$34load_global.0'}), (36, {'value': '$34load_global.0', 'res': '$36unary_negative.1'}), (38, {'retval': '$36unary_negative.1', 'castval': '$38return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {'res': '$42load_global.0'}), (44, {'retval': '$42load_global.0', 'castval': '$44return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=46 nstack_initial=0):
AdaptBlockInfo(insts=((46, {'res': '$46load_global.0'}), (48, {'item': '$46load_global.0', 'res': '$48load_method.1'}), (50, {'res': '$v50.2'}), (52, {'func': '$48load_method.1', 'args': ['$v50.2'], 'res': '$52call_method.3'}), (54, {'iterable': '$52call_method.3', 'stores': ['$54unpack_sequence.4', '$54unpack_sequence.5'], 'tupleobj': '$54unpack_sequence.6'}), (56, {'value': '$54unpack_sequence.4'}), (58, {'value': '$54unpack_sequence.5'}), (60, {'res': '$const60.7'}), (62, {'value': '$const60.7'}), (64, {'res': '$m64.8'}), (66, {'res': '$const66.9'}), (68, {'lhs': '$m64.8', 'rhs': '$const66.9', 'res': '$68compare_op.10'}), (70, {'pred': '$68compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={72: (), 82: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=72 nstack_initial=0):
AdaptBlockInfo(insts=((72, {'res': '$const72.0'}), (74, {'value': '$const72.0'}), (76, {'res': '$m76.1'}), (78, {'value': '$m76.1', 'res': '$78unary_negative.2'}), (80, {'value': '$78unary_negative.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$const82.0'}), (84, {'value': '$const82.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={86: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$m86.0'}), (88, {'pred': '$m86.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 172: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$x90.0'}), (92, {'res': '$const92.1'}), (94, {'lhs': '$x90.0', 'rhs': '$const92.1', 'res': '$94binary_lshift.2'}), (96, {'res': '$96load_global.3'}), (98, {'lhs': '$94binary_lshift.2', 'rhs': '$96load_global.3', 'res': '$98binary_and.4'}), (100, {'res': '$x100.5'}), (102, {'res': '$102load_global.6'}), (104, {'res': '$const104.7'}), (106, {'lhs': '$102load_global.6', 'rhs': '$const104.7', 'res': '$106binary_subtract.8'}), (108, {'lhs': '$x100.5', 'rhs': '$106binary_subtract.8', 'res': '$108binary_rshift.9'}), (110, {'lhs': '$98binary_and.4', 'rhs': '$108binary_rshift.9', 'res': '$110binary_or.10'}), (112, {'value': '$110binary_or.10'}), (114, {'res': '$m114.11'}), (116, {'res': '$const116.12'}), (118, {'lhs': '$m114.11', 'rhs': '$const116.12', 'res': '$118inplace_multiply.13'}), (120, {'value': '$118inplace_multiply.13'}), (122, {'res': '$e122.14'}), (124, {'res': '$const124.15'}), (126, {'lhs': '$e122.14', 'rhs': '$const124.15', 'res': '$126inplace_subtract.16'}), (128, {'value': '$126inplace_subtract.16'}), (130, {'res': '$130load_global.17'}), (132, {'res': '$m132.18'}), (134, {'func': '$130load_global.17', 'args': ['$m132.18'], 'res': '$134call_function.19'}), (136, {'value': '$134call_function.19'}), (138, {'res': '$m138.20'}), (140, {'res': '$y140.21'}), (142, {'lhs': '$m138.20', 'rhs': '$y140.21', 'res': '$142inplace_subtract.22'}), (144, {'value': '$142inplace_subtract.22'}), (146, {'res': '$x146.23'}), (148, {'res': '$y148.24'}), (150, {'lhs': '$x146.23', 'rhs': '$y148.24', 'res': '$150inplace_add.25'}), (152, {'value': '$150inplace_add.25'}), (154, {'res': '$x154.26'}), (156, {'res': '$156load_global.27'}), (158, {'lhs': '$x154.26', 'rhs': '$156load_global.27', 'res': '$158compare_op.28'}), (160, {'pred': '$158compare_op.28'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={162: (), 86: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=162 nstack_initial=0):
AdaptBlockInfo(insts=((162, {'res': '$x162.0'}), (164, {'res': '$164load_global.1'}), (166, {'lhs': '$x162.0', 'rhs': '$164load_global.1', 'res': '$166inplace_subtract.2'}), (168, {'value': '$166inplace_subtract.2'}), (170, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={86: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=172 nstack_initial=0):
AdaptBlockInfo(insts=((172, {'res': '$e172.0'}), (174, {'res': '$const174.1'}), (176, {'lhs': '$e172.0', 'rhs': '$const174.1', 'res': '$176compare_op.2'}), (178, {'pred': '$176compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={180: (), 190: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=180 nstack_initial=0):
AdaptBlockInfo(insts=((180, {'res': '$e180.0'}), (182, {'res': '$182load_global.1'}), (184, {'lhs': '$e180.0', 'rhs': '$182load_global.1', 'res': '$184binary_modulo.2'}), (186, {'value': '$184binary_modulo.2'}), (188, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={210: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$190load_global.0'}), (192, {'res': '$const192.1'}), (194, {'lhs': '$190load_global.0', 'rhs': '$const192.1', 'res': '$194binary_subtract.2'}), (196, {'res': '$const196.3'}), (198, {'res': '$e198.4'}), (200, {'lhs': '$const196.3', 'rhs': '$e198.4', 'res': '$200binary_subtract.5'}), (202, {'res': '$202load_global.6'}), (204, {'lhs': '$200binary_subtract.5', 'rhs': '$202load_global.6', 'res': '$204binary_modulo.7'}), (206, {'lhs': '$194binary_subtract.2', 'rhs': '$204binary_modulo.7', 'res': '$206binary_subtract.8'}), (208, {'value': '$206binary_subtract.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={210: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=210 nstack_initial=0):
AdaptBlockInfo(insts=((210, {'res': '$x210.0'}), (212, {'res': '$e212.1'}), (214, {'lhs': '$x210.0', 'rhs': '$e212.1', 'res': '$214binary_lshift.2'}), (216, {'res': '$216load_global.3'}), (218, {'lhs': '$214binary_lshift.2', 'rhs': '$216load_global.3', 'res': '$218binary_and.4'}), (220, {'res': '$x220.5'}), (222, {'res': '$222load_global.6'}), (224, {'res': '$e224.7'}), (226, {'lhs': '$222load_global.6', 'rhs': '$e224.7', 'res': '$226binary_subtract.8'}), (228, {'lhs': '$x220.5', 'rhs': '$226binary_subtract.8', 'res': '$228binary_rshift.9'}), (230, {'lhs': '$218binary_and.4', 'rhs': '$228binary_rshift.9', 'res': '$230binary_or.10'}), (232, {'value': '$230binary_or.10'}), (234, {'res': '$x234.11'}), (236, {'res': '$sign236.12'}), (238, {'lhs': '$x234.11', 'rhs': '$sign236.12', 'res': '$238binary_multiply.13'}), (240, {'value': '$238binary_multiply.13'}), (242, {'res': '$242load_global.14'}), (244, {'res': '$x244.15'}), (246, {'func': '$242load_global.14', 'args': ['$x244.15'], 'res': '$246call_function.16'}), (248, {'retval': '$246call_function.16', 'castval': '$248return_value.17'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    v = arg(0, name=v)                       ['v']
    $2load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=isfinite) ['$2load_global.0', '$4load_method.1']
    $8call_method.3 = call $4load_method.1(v, func=$4load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None) ['$4load_method.1', '$8call_method.3', 'v']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8call_method.3, func=bool10, args=(Var($8call_method.3, hashing.py:72),), kws=(), vararg=None, target=None) ['$10pred', '$8call_method.3', 'bool10']
    branch $10pred, 46, 12                   ['$10pred']
label 12:
    $12load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>) ['$12load_global.0']
    $14load_method.1 = getattr(value=$12load_global.0, attr=isinf) ['$12load_global.0', '$14load_method.1']
    $18call_method.3 = call $14load_method.1(v, func=$14load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None) ['$14load_method.1', '$18call_method.3', 'v']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($18call_method.3, func=bool20, args=(Var($18call_method.3, hashing.py:73),), kws=(), vararg=None, target=None) ['$18call_method.3', '$20pred', 'bool20']
    branch $20pred, 22, 42                   ['$20pred']
label 22:
    $const24.1 = const(int, 0)               ['$const24.1']
    $26compare_op.2 = v > $const24.1         ['$26compare_op.2', '$const24.1', 'v']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, hashing.py:74),), kws=(), vararg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 34                   ['$28pred']
label 30:
    $30load_global.0 = global(_PyHASH_INF: 314159) ['$30load_global.0']
    $32return_value.1 = cast(value=$30load_global.0) ['$30load_global.0', '$32return_value.1']
    return $32return_value.1                 ['$32return_value.1']
label 34:
    $34load_global.0 = global(_PyHASH_INF: 314159) ['$34load_global.0']
    $36unary_negative.1 = unary(fn=<built-in function neg>, value=$34load_global.0) ['$34load_global.0', '$36unary_negative.1']
    $38return_value.2 = cast(value=$36unary_negative.1) ['$36unary_negative.1', '$38return_value.2']
    return $38return_value.2                 ['$38return_value.2']
label 42:
    $42load_global.0 = global(_PyHASH_NAN: 0) ['$42load_global.0']
    $44return_value.1 = cast(value=$42load_global.0) ['$42load_global.0', '$44return_value.1']
    return $44return_value.1                 ['$44return_value.1']
label 46:
    $46load_global.0 = global(math: <module 'math' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/lib-dynload/math.cpython-39-darwin.so'>) ['$46load_global.0']
    $48load_method.1 = getattr(value=$46load_global.0, attr=frexp) ['$46load_global.0', '$48load_method.1']
    $52call_method.3 = call $48load_method.1(v, func=$48load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None) ['$48load_method.1', '$52call_method.3', 'v']
    $54unpack_sequence.6 = exhaust_iter(value=$52call_method.3, count=2) ['$52call_method.3', '$54unpack_sequence.6']
    $54unpack_sequence.4 = static_getitem(value=$54unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>) ['$54unpack_sequence.4', '$54unpack_sequence.6']
    $54unpack_sequence.5 = static_getitem(value=$54unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>) ['$54unpack_sequence.5', '$54unpack_sequence.6']
    m = $54unpack_sequence.4                 ['$54unpack_sequence.4', 'm']
    e = $54unpack_sequence.5                 ['$54unpack_sequence.5', 'e']
    sign = const(int, 1)                     ['sign']
    $const66.9 = const(int, 0)               ['$const66.9']
    $68compare_op.10 = m < $const66.9        ['$68compare_op.10', '$const66.9', 'm']
    bool70 = global(bool: <class 'bool'>)    ['bool70']
    $70pred = call bool70($68compare_op.10, func=bool70, args=(Var($68compare_op.10, hashing.py:84),), kws=(), vararg=None, target=None) ['$68compare_op.10', '$70pred', 'bool70']
    branch $70pred, 72, 82                   ['$70pred']
label 72:
    sign = const(int, -1)                    ['sign']
    m = unary(fn=<built-in function neg>, value=m) ['m', 'm']
    jump 82                                  []
label 82:
    x = const(int, 0)                        ['x']
    jump 86                                  []
label 86:
    bool88 = global(bool: <class 'bool'>)    ['bool88']
    $88pred = call bool88(m, func=bool88, args=(Var(m, hashing.py:81),), kws=(), vararg=None, target=None) ['$88pred', 'bool88', 'm']
    branch $88pred, 90, 172                  ['$88pred']
label 90:
    $const92.1 = const(int, 28)              ['$const92.1']
    $94binary_lshift.2 = x << $const92.1     ['$94binary_lshift.2', '$const92.1', 'x']
    $96load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951) ['$96load_global.3']
    $98binary_and.4 = $94binary_lshift.2 & $96load_global.3 ['$94binary_lshift.2', '$96load_global.3', '$98binary_and.4']
    $102load_global.6 = global(_PyHASH_BITS: 61) ['$102load_global.6']
    $const104.7 = const(int, 28)             ['$const104.7']
    $106binary_subtract.8 = $102load_global.6 - $const104.7 ['$102load_global.6', '$106binary_subtract.8', '$const104.7']
    $108binary_rshift.9 = x >> $106binary_subtract.8 ['$106binary_subtract.8', '$108binary_rshift.9', 'x']
    x = $98binary_and.4 | $108binary_rshift.9 ['$108binary_rshift.9', '$98binary_and.4', 'x']
    $const116.12 = const(float, 268435456.0) ['$const116.12']
    $118inplace_multiply.13 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=m, rhs=$const116.12, static_lhs=Undefined, static_rhs=Undefined) ['$118inplace_multiply.13', '$const116.12', 'm']
    m = $118inplace_multiply.13              ['$118inplace_multiply.13', 'm']
    $const124.15 = const(int, 28)            ['$const124.15']
    $126inplace_subtract.16 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=e, rhs=$const124.15, static_lhs=Undefined, static_rhs=Undefined) ['$126inplace_subtract.16', '$const124.15', 'e']
    e = $126inplace_subtract.16              ['$126inplace_subtract.16', 'e']
    $130load_global.17 = global(int: <class 'int'>) ['$130load_global.17']
    y = call $130load_global.17(m, func=$130load_global.17, args=[Var(m, hashing.py:81)], kws=(), vararg=None, target=None) ['$130load_global.17', 'm', 'y']
    $142inplace_subtract.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=m, rhs=y, static_lhs=Undefined, static_rhs=Undefined) ['$142inplace_subtract.22', 'm', 'y']
    m = $142inplace_subtract.22              ['$142inplace_subtract.22', 'm']
    $150inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=x, rhs=y, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_add.25', 'x', 'y']
    x = $150inplace_add.25                   ['$150inplace_add.25', 'x']
    $156load_global.27 = global(_PyHASH_MODULUS: 2305843009213693951) ['$156load_global.27']
    $158compare_op.28 = x >= $156load_global.27 ['$156load_global.27', '$158compare_op.28', 'x']
    bool160 = global(bool: <class 'bool'>)   ['bool160']
    $160pred = call bool160($158compare_op.28, func=bool160, args=(Var($158compare_op.28, hashing.py:98),), kws=(), vararg=None, target=None) ['$158compare_op.28', '$160pred', 'bool160']
    branch $160pred, 162, 86                 ['$160pred']
label 162:
    $164load_global.1 = global(_PyHASH_MODULUS: 2305843009213693951) ['$164load_global.1']
    $166inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=x, rhs=$164load_global.1, static_lhs=Undefined, static_rhs=Undefined) ['$164load_global.1', '$166inplace_subtract.2', 'x']
    x = $166inplace_subtract.2               ['$166inplace_subtract.2', 'x']
    jump 86                                  []
label 172:
    $const174.1 = const(int, 0)              ['$const174.1']
    $176compare_op.2 = e >= $const174.1      ['$176compare_op.2', '$const174.1', 'e']
    bool178 = global(bool: <class 'bool'>)   ['bool178']
    $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, hashing.py:101),), kws=(), vararg=None, target=None) ['$176compare_op.2', '$178pred', 'bool178']
    branch $178pred, 180, 190                ['$178pred']
label 180:
    $182load_global.1 = global(_PyHASH_BITS: 61) ['$182load_global.1']
    $184binary_modulo.2 = e % $182load_global.1 ['$182load_global.1', '$184binary_modulo.2', 'e']
    e = $184binary_modulo.2                  ['$184binary_modulo.2', 'e']
    jump 210                                 []
label 190:
    $190load_global.0 = global(_PyHASH_BITS: 61) ['$190load_global.0']
    $const192.1 = const(int, 1)              ['$const192.1']
    $194binary_subtract.2 = $190load_global.0 - $const192.1 ['$190load_global.0', '$194binary_subtract.2', '$const192.1']
    $const196.3 = const(int, -1)             ['$const196.3']
    $200binary_subtract.5 = $const196.3 - e  ['$200binary_subtract.5', '$const196.3', 'e']
    $202load_global.6 = global(_PyHASH_BITS: 61) ['$202load_global.6']
    $204binary_modulo.7 = $200binary_subtract.5 % $202load_global.6 ['$200binary_subtract.5', '$202load_global.6', '$204binary_modulo.7']
    e = $194binary_subtract.2 - $204binary_modulo.7 ['$194binary_subtract.2', '$204binary_modulo.7', 'e']
    jump 210                                 []
label 210:
    $214binary_lshift.2 = x << e             ['$214binary_lshift.2', 'e', 'x']
    $216load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951) ['$216load_global.3']
    $218binary_and.4 = $214binary_lshift.2 & $216load_global.3 ['$214binary_lshift.2', '$216load_global.3', '$218binary_and.4']
    $222load_global.6 = global(_PyHASH_BITS: 61) ['$222load_global.6']
    $226binary_subtract.8 = $222load_global.6 - e ['$222load_global.6', '$226binary_subtract.8', 'e']
    $228binary_rshift.9 = x >> $226binary_subtract.8 ['$226binary_subtract.8', '$228binary_rshift.9', 'x']
    x = $218binary_and.4 | $228binary_rshift.9 ['$218binary_and.4', '$228binary_rshift.9', 'x']
    $238binary_multiply.13 = x * sign        ['$238binary_multiply.13', 'sign', 'x']
    x = $238binary_multiply.13               ['$238binary_multiply.13', 'x']
    $242load_global.14 = global(process_return: <function process_return at 0x7fda213bc0d0>) ['$242load_global.14']
    $246call_function.16 = call $242load_global.14(x, func=$242load_global.14, args=[Var(x, hashing.py:90)], kws=(), vararg=None, target=None) ['$242load_global.14', '$246call_function.16', 'x']
    $248return_value.17 = cast(value=$246call_function.16) ['$246call_function.16', '$248return_value.17']
    return $248return_value.17               ['$248return_value.17']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e03ed460>
DEBUG:numba.core.ssa:on stmt: v = arg(0, name=v)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=isfinite)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(v, func=$4load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10($8call_method.3, func=bool10, args=(Var($8call_method.3, hashing.py:72),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 46, 12
DEBUG:numba.core.ssa:==== SSA block analysis pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e03ed460>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $14load_method.1 = getattr(value=$12load_global.0, attr=isinf)
DEBUG:numba.core.ssa:on stmt: $18call_method.3 = call $14load_method.1(v, func=$14load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18call_method.3, func=bool20, args=(Var($18call_method.3, hashing.py:73),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 42
DEBUG:numba.core.ssa:==== SSA block analysis pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e03ed460>
DEBUG:numba.core.ssa:on stmt: $const24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.2 = v > $const24.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, hashing.py:74),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e03ed460>
DEBUG:numba.core.ssa:on stmt: $30load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$30load_global.0)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e03ed460>
DEBUG:numba.core.ssa:on stmt: $34load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $36unary_negative.1 = unary(fn=<built-in function neg>, value=$34load_global.0)
DEBUG:numba.core.ssa:on stmt: $38return_value.2 = cast(value=$36unary_negative.1)
DEBUG:numba.core.ssa:on stmt: return $38return_value.2
DEBUG:numba.core.ssa:==== SSA block analysis pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e03ed460>
DEBUG:numba.core.ssa:on stmt: $42load_global.0 = global(_PyHASH_NAN: 0)
DEBUG:numba.core.ssa:on stmt: $44return_value.1 = cast(value=$42load_global.0)
DEBUG:numba.core.ssa:on stmt: return $44return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e03ed460>
DEBUG:numba.core.ssa:on stmt: $46load_global.0 = global(math: <module 'math' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/lib-dynload/math.cpython-39-darwin.so'>)
DEBUG:numba.core.ssa:on stmt: $48load_method.1 = getattr(value=$46load_global.0, attr=frexp)
DEBUG:numba.core.ssa:on stmt: $52call_method.3 = call $48load_method.1(v, func=$48load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.6 = exhaust_iter(value=$52call_method.3, count=2)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.4 = static_getitem(value=$54unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.5 = static_getitem(value=$54unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: m = $54unpack_sequence.4
DEBUG:numba.core.ssa:on stmt: e = $54unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: sign = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const66.9 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $68compare_op.10 = m < $const66.9
DEBUG:numba.core.ssa:on stmt: bool70 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $70pred = call bool70($68compare_op.10, func=bool70, args=(Var($68compare_op.10, hashing.py:84),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $70pred, 72, 82
DEBUG:numba.core.ssa:==== SSA block analysis pass on 72
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e03ed460>
DEBUG:numba.core.ssa:on stmt: sign = const(int, -1)
DEBUG:numba.core.ssa:on stmt: m = unary(fn=<built-in function neg>, value=m)
DEBUG:numba.core.ssa:on stmt: jump 82
DEBUG:numba.core.ssa:==== SSA block analysis pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e03ed460>
DEBUG:numba.core.ssa:on stmt: x = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.ssa:==== SSA block analysis pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e03ed460>
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88(m, func=bool88, args=(Var(m, hashing.py:81),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 172
DEBUG:numba.core.ssa:==== SSA block analysis pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e03ed460>
DEBUG:numba.core.ssa:on stmt: $const92.1 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $94binary_lshift.2 = x << $const92.1
DEBUG:numba.core.ssa:on stmt: $96load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $98binary_and.4 = $94binary_lshift.2 & $96load_global.3
DEBUG:numba.core.ssa:on stmt: $102load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const104.7 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $106binary_subtract.8 = $102load_global.6 - $const104.7
DEBUG:numba.core.ssa:on stmt: $108binary_rshift.9 = x >> $106binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x = $98binary_and.4 | $108binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $const116.12 = const(float, 268435456.0)
DEBUG:numba.core.ssa:on stmt: $118inplace_multiply.13 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=m, rhs=$const116.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m = $118inplace_multiply.13
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $126inplace_subtract.16 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=e, rhs=$const124.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: e = $126inplace_subtract.16
DEBUG:numba.core.ssa:on stmt: $130load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: y = call $130load_global.17(m, func=$130load_global.17, args=[Var(m, hashing.py:81)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $142inplace_subtract.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=m, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m = $142inplace_subtract.22
DEBUG:numba.core.ssa:on stmt: $150inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=x, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x = $150inplace_add.25
DEBUG:numba.core.ssa:on stmt: $156load_global.27 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $158compare_op.28 = x >= $156load_global.27
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($158compare_op.28, func=bool160, args=(Var($158compare_op.28, hashing.py:98),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 211
DEBUG:numba.core.ssa:==== SSA block analysis pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e03ed460>
DEBUG:numba.core.ssa:on stmt: $164load_global.1 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $166inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=x, rhs=$164load_global.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x = $166inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: jump 211
DEBUG:numba.core.ssa:==== SSA block analysis pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e03ed460>
DEBUG:numba.core.ssa:on stmt: $const174.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = e >= $const174.1
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, hashing.py:101),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 190
DEBUG:numba.core.ssa:==== SSA block analysis pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e03ed460>
DEBUG:numba.core.ssa:on stmt: $182load_global.1 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $184binary_modulo.2 = e % $182load_global.1
DEBUG:numba.core.ssa:on stmt: e = $184binary_modulo.2
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block analysis pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e03ed460>
DEBUG:numba.core.ssa:on stmt: $190load_global.0 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const192.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $194binary_subtract.2 = $190load_global.0 - $const192.1
DEBUG:numba.core.ssa:on stmt: $const196.3 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $200binary_subtract.5 = $const196.3 - e
DEBUG:numba.core.ssa:on stmt: $202load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $204binary_modulo.7 = $200binary_subtract.5 % $202load_global.6
DEBUG:numba.core.ssa:on stmt: e = $194binary_subtract.2 - $204binary_modulo.7
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block analysis pass on 210
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e03ed460>
DEBUG:numba.core.ssa:on stmt: $214binary_lshift.2 = x << e
DEBUG:numba.core.ssa:on stmt: $216load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $218binary_and.4 = $214binary_lshift.2 & $216load_global.3
DEBUG:numba.core.ssa:on stmt: $222load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $226binary_subtract.8 = $222load_global.6 - e
DEBUG:numba.core.ssa:on stmt: $228binary_rshift.9 = x >> $226binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x = $218binary_and.4 | $228binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $238binary_multiply.13 = x * sign
DEBUG:numba.core.ssa:on stmt: x = $238binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $242load_global.14 = global(process_return: <function process_return at 0x7fda213bc0d0>)
DEBUG:numba.core.ssa:on stmt: $246call_function.16 = call $242load_global.14(x, func=$242load_global.14, args=[Var(x, hashing.py:90)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248return_value.17 = cast(value=$246call_function.16)
DEBUG:numba.core.ssa:on stmt: return $248return_value.17
DEBUG:numba.core.ssa:==== SSA block analysis pass on 211
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e03ed460>
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102load_global.6': [<numba.core.ir.Assign object at 0x7fd9e03d1a00>],
             '$106binary_subtract.8': [<numba.core.ir.Assign object at 0x7fd9e03d1d30>],
             '$108binary_rshift.9': [<numba.core.ir.Assign object at 0x7fd9e03d1eb0>],
             '$10pred': [<numba.core.ir.Assign object at 0x7fd9e03b3e20>],
             '$118inplace_multiply.13': [<numba.core.ir.Assign object at 0x7fd9e03d4550>],
             '$126inplace_subtract.16': [<numba.core.ir.Assign object at 0x7fd9e03d4a30>],
             '$12load_global.0': [<numba.core.ir.Assign object at 0x7fd9e03c50a0>],
             '$130load_global.17': [<numba.core.ir.Assign object at 0x7fd9e03d4c40>],
             '$142inplace_subtract.22': [<numba.core.ir.Assign object at 0x7fd9e03d6430>],
             '$14load_method.1': [<numba.core.ir.Assign object at 0x7fd9e03c5220>],
             '$150inplace_add.25': [<numba.core.ir.Assign object at 0x7fd9e03d68b0>],
             '$156load_global.27': [<numba.core.ir.Assign object at 0x7fd9e03d6be0>],
             '$158compare_op.28': [<numba.core.ir.Assign object at 0x7fd9e03d6d90>],
             '$160pred': [<numba.core.ir.Assign object at 0x7fd9e03d8040>],
             '$164load_global.1': [<numba.core.ir.Assign object at 0x7fd9e03d6160>],
             '$166inplace_subtract.2': [<numba.core.ir.Assign object at 0x7fd9e03d6af0>],
             '$176compare_op.2': [<numba.core.ir.Assign object at 0x7fd9e03d86d0>],
             '$178pred': [<numba.core.ir.Assign object at 0x7fd9e03d8940>],
             '$182load_global.1': [<numba.core.ir.Assign object at 0x7fd9e03d8ca0>],
             '$184binary_modulo.2': [<numba.core.ir.Assign object at 0x7fd9e03d8e50>],
             '$18call_method.3': [<numba.core.ir.Assign object at 0x7fd9e03c5550>],
             '$190load_global.0': [<numba.core.ir.Assign object at 0x7fd9e03da1c0>],
             '$194binary_subtract.2': [<numba.core.ir.Assign object at 0x7fd9e03da4f0>],
             '$200binary_subtract.5': [<numba.core.ir.Assign object at 0x7fd9e03da910>],
             '$202load_global.6': [<numba.core.ir.Assign object at 0x7fd9e03daa60>],
             '$204binary_modulo.7': [<numba.core.ir.Assign object at 0x7fd9e03dac10>],
             '$20pred': [<numba.core.ir.Assign object at 0x7fd9e03c5760>],
             '$214binary_lshift.2': [<numba.core.ir.Assign object at 0x7fd9e03dc250>],
             '$216load_global.3': [<numba.core.ir.Assign object at 0x7fd9e03dc3a0>],
             '$218binary_and.4': [<numba.core.ir.Assign object at 0x7fd9e03dc550>],
             '$222load_global.6': [<numba.core.ir.Assign object at 0x7fd9e03dc7c0>],
             '$226binary_subtract.8': [<numba.core.ir.Assign object at 0x7fd9e03dca90>],
             '$228binary_rshift.9': [<numba.core.ir.Assign object at 0x7fd9e03dcc10>],
             '$238binary_multiply.13': [<numba.core.ir.Assign object at 0x7fd9e03de250>],
             '$242load_global.14': [<numba.core.ir.Assign object at 0x7fd9e03de460>],
             '$246call_function.16': [<numba.core.ir.Assign object at 0x7fd9e03de760>],
             '$248return_value.17': [<numba.core.ir.Assign object at 0x7fd9e03de880>],
             '$26compare_op.2': [<numba.core.ir.Assign object at 0x7fd9e03c5c70>],
             '$28pred': [<numba.core.ir.Assign object at 0x7fd9e03c5ee0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fd9e03b30a0>],
             '$30load_global.0': [<numba.core.ir.Assign object at 0x7fd9e03c9160>],
             '$32return_value.1': [<numba.core.ir.Assign object at 0x7fd9e03c92e0>],
             '$34load_global.0': [<numba.core.ir.Assign object at 0x7fd9e03c9580>],
             '$36unary_negative.1': [<numba.core.ir.Assign object at 0x7fd9e03c9700>],
             '$38return_value.2': [<numba.core.ir.Assign object at 0x7fd9e03c9880>],
             '$42load_global.0': [<numba.core.ir.Assign object at 0x7fd9e03c9b20>],
             '$44return_value.1': [<numba.core.ir.Assign object at 0x7fd9e03c9ca0>],
             '$46load_global.0': [<numba.core.ir.Assign object at 0x7fd9e03c9f40>],
             '$48load_method.1': [<numba.core.ir.Assign object at 0x7fd9e03cc100>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x7fd9e03b33d0>],
             '$52call_method.3': [<numba.core.ir.Assign object at 0x7fd9e03cc430>],
             '$54unpack_sequence.4': [<numba.core.ir.Assign object at 0x7fd9e03cc6a0>],
             '$54unpack_sequence.5': [<numba.core.ir.Assign object at 0x7fd9e03cc7c0>],
             '$54unpack_sequence.6': [<numba.core.ir.Assign object at 0x7fd9e03cc550>],
             '$68compare_op.10': [<numba.core.ir.Assign object at 0x7fd9e03ce0d0>],
             '$70pred': [<numba.core.ir.Assign object at 0x7fd9e03ce340>],
             '$88pred': [<numba.core.ir.Assign object at 0x7fd9e03cef40>],
             '$8call_method.3': [<numba.core.ir.Assign object at 0x7fd9e03b3c10>],
             '$94binary_lshift.2': [<numba.core.ir.Assign object at 0x7fd9e03d1490>],
             '$96load_global.3': [<numba.core.ir.Assign object at 0x7fd9e03d15e0>],
             '$98binary_and.4': [<numba.core.ir.Assign object at 0x7fd9e03d1790>],
             '$const104.7': [<numba.core.ir.Assign object at 0x7fd9e03d1b80>],
             '$const116.12': [<numba.core.ir.Assign object at 0x7fd9e03d43a0>],
             '$const124.15': [<numba.core.ir.Assign object at 0x7fd9e03d4880>],
             '$const174.1': [<numba.core.ir.Assign object at 0x7fd9e03d8520>],
             '$const192.1': [<numba.core.ir.Assign object at 0x7fd9e03da340>],
             '$const196.3': [<numba.core.ir.Assign object at 0x7fd9e03da640>],
             '$const24.1': [<numba.core.ir.Assign object at 0x7fd9e03c5ac0>],
             '$const66.9': [<numba.core.ir.Assign object at 0x7fd9e03ccee0>],
             '$const92.1': [<numba.core.ir.Assign object at 0x7fd9e03d12e0>],
             'bool10': [<numba.core.ir.Assign object at 0x7fd9e03b3d00>],
             'bool160': [<numba.core.ir.Assign object at 0x7fd9e03d6ee0>],
             'bool178': [<numba.core.ir.Assign object at 0x7fd9e03d8820>],
             'bool20': [<numba.core.ir.Assign object at 0x7fd9e03c5640>],
             'bool28': [<numba.core.ir.Assign object at 0x7fd9e03c5dc0>],
             'bool70': [<numba.core.ir.Assign object at 0x7fd9e03ce220>],
             'bool88': [<numba.core.ir.Assign object at 0x7fd9e03cee20>],
             'e': [<numba.core.ir.Assign object at 0x7fd9e03cc9a0>,
                   <numba.core.ir.Assign object at 0x7fd9e03d4af0>,
                   <numba.core.ir.Assign object at 0x7fd9e03d8f10>,
                   <numba.core.ir.Assign object at 0x7fd9e03dad90>],
             'm': [<numba.core.ir.Assign object at 0x7fd9e03cc880>,
                   <numba.core.ir.Assign object at 0x7fd9e03ce820>,
                   <numba.core.ir.Assign object at 0x7fd9e03d4610>,
                   <numba.core.ir.Assign object at 0x7fd9e03d64f0>],
             'sign': [<numba.core.ir.Assign object at 0x7fd9e03ccb20>,
                      <numba.core.ir.Assign object at 0x7fd9e03ce4c0>],
             'v': [<numba.core.ir.Assign object at 0x7fd9e03b3af0>],
             'x': [<numba.core.ir.Assign object at 0x7fd9e03ce9a0>,
                   <numba.core.ir.Assign object at 0x7fd9e03d4070>,
                   <numba.core.ir.Assign object at 0x7fd9e03d6970>,
                   <numba.core.ir.Assign object at 0x7fd9e03d8190>,
                   <numba.core.ir.Assign object at 0x7fd9e03dcd90>,
                   <numba.core.ir.Assign object at 0x7fd9e03de310>],
             'y': [<numba.core.ir.Assign object at 0x7fd9e03d4f40>]})
DEBUG:numba.core.ssa:SSA violators {'sign', 'm', 'x', 'e'}
DEBUG:numba.core.ssa:Fix SSA violator on var sign
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: v = arg(0, name=v)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=isfinite)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(v, func=$4load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10($8call_method.3, func=bool10, args=(Var($8call_method.3, hashing.py:72),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 46, 12
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $14load_method.1 = getattr(value=$12load_global.0, attr=isinf)
DEBUG:numba.core.ssa:on stmt: $18call_method.3 = call $14load_method.1(v, func=$14load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18call_method.3, func=bool20, args=(Var($18call_method.3, hashing.py:73),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $const24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.2 = v > $const24.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, hashing.py:74),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $30load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$30load_global.0)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $34load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $36unary_negative.1 = unary(fn=<built-in function neg>, value=$34load_global.0)
DEBUG:numba.core.ssa:on stmt: $38return_value.2 = cast(value=$36unary_negative.1)
DEBUG:numba.core.ssa:on stmt: return $38return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $42load_global.0 = global(_PyHASH_NAN: 0)
DEBUG:numba.core.ssa:on stmt: $44return_value.1 = cast(value=$42load_global.0)
DEBUG:numba.core.ssa:on stmt: return $44return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $46load_global.0 = global(math: <module 'math' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/lib-dynload/math.cpython-39-darwin.so'>)
DEBUG:numba.core.ssa:on stmt: $48load_method.1 = getattr(value=$46load_global.0, attr=frexp)
DEBUG:numba.core.ssa:on stmt: $52call_method.3 = call $48load_method.1(v, func=$48load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.6 = exhaust_iter(value=$52call_method.3, count=2)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.4 = static_getitem(value=$54unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.5 = static_getitem(value=$54unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: m = $54unpack_sequence.4
DEBUG:numba.core.ssa:on stmt: e = $54unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: sign = const(int, 1)
DEBUG:numba.core.ssa:first assign: sign
DEBUG:numba.core.ssa:replaced with: sign = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const66.9 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $68compare_op.10 = m < $const66.9
DEBUG:numba.core.ssa:on stmt: bool70 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $70pred = call bool70($68compare_op.10, func=bool70, args=(Var($68compare_op.10, hashing.py:84),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $70pred, 72, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 72
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: sign = const(int, -1)
DEBUG:numba.core.ssa:replaced with: sign.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: m = unary(fn=<built-in function neg>, value=m)
DEBUG:numba.core.ssa:on stmt: jump 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: x = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88(m, func=bool88, args=(Var(m, hashing.py:81),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $const92.1 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $94binary_lshift.2 = x << $const92.1
DEBUG:numba.core.ssa:on stmt: $96load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $98binary_and.4 = $94binary_lshift.2 & $96load_global.3
DEBUG:numba.core.ssa:on stmt: $102load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const104.7 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $106binary_subtract.8 = $102load_global.6 - $const104.7
DEBUG:numba.core.ssa:on stmt: $108binary_rshift.9 = x >> $106binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x = $98binary_and.4 | $108binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $const116.12 = const(float, 268435456.0)
DEBUG:numba.core.ssa:on stmt: $118inplace_multiply.13 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=m, rhs=$const116.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m = $118inplace_multiply.13
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $126inplace_subtract.16 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=e, rhs=$const124.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: e = $126inplace_subtract.16
DEBUG:numba.core.ssa:on stmt: $130load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: y = call $130load_global.17(m, func=$130load_global.17, args=[Var(m, hashing.py:81)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $142inplace_subtract.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=m, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m = $142inplace_subtract.22
DEBUG:numba.core.ssa:on stmt: $150inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=x, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x = $150inplace_add.25
DEBUG:numba.core.ssa:on stmt: $156load_global.27 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $158compare_op.28 = x >= $156load_global.27
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($158compare_op.28, func=bool160, args=(Var($158compare_op.28, hashing.py:98),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 211
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $164load_global.1 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $166inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=x, rhs=$164load_global.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x = $166inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: jump 211
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $const174.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = e >= $const174.1
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, hashing.py:101),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $182load_global.1 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $184binary_modulo.2 = e % $182load_global.1
DEBUG:numba.core.ssa:on stmt: e = $184binary_modulo.2
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $190load_global.0 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const192.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $194binary_subtract.2 = $190load_global.0 - $const192.1
DEBUG:numba.core.ssa:on stmt: $const196.3 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $200binary_subtract.5 = $const196.3 - e
DEBUG:numba.core.ssa:on stmt: $202load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $204binary_modulo.7 = $200binary_subtract.5 % $202load_global.6
DEBUG:numba.core.ssa:on stmt: e = $194binary_subtract.2 - $204binary_modulo.7
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 210
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $214binary_lshift.2 = x << e
DEBUG:numba.core.ssa:on stmt: $216load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $218binary_and.4 = $214binary_lshift.2 & $216load_global.3
DEBUG:numba.core.ssa:on stmt: $222load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $226binary_subtract.8 = $222load_global.6 - e
DEBUG:numba.core.ssa:on stmt: $228binary_rshift.9 = x >> $226binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x = $218binary_and.4 | $228binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $238binary_multiply.13 = x * sign
DEBUG:numba.core.ssa:on stmt: x = $238binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $242load_global.14 = global(process_return: <function process_return at 0x7fda213bc0d0>)
DEBUG:numba.core.ssa:on stmt: $246call_function.16 = call $242load_global.14(x, func=$242load_global.14, args=[Var(x, hashing.py:90)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248return_value.17 = cast(value=$246call_function.16)
DEBUG:numba.core.ssa:on stmt: return $248return_value.17
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 211
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {46: [<numba.core.ir.Assign object at 0x7fd9e03de580>],
             72: [<numba.core.ir.Assign object at 0x7fd9e03ded90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: v = arg(0, name=v)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=isfinite)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(v, func=$4load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10($8call_method.3, func=bool10, args=(Var($8call_method.3, hashing.py:72),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 46, 12
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $14load_method.1 = getattr(value=$12load_global.0, attr=isinf)
DEBUG:numba.core.ssa:on stmt: $18call_method.3 = call $14load_method.1(v, func=$14load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18call_method.3, func=bool20, args=(Var($18call_method.3, hashing.py:73),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $const24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.2 = v > $const24.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, hashing.py:74),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $30load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$30load_global.0)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $34load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $36unary_negative.1 = unary(fn=<built-in function neg>, value=$34load_global.0)
DEBUG:numba.core.ssa:on stmt: $38return_value.2 = cast(value=$36unary_negative.1)
DEBUG:numba.core.ssa:on stmt: return $38return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $42load_global.0 = global(_PyHASH_NAN: 0)
DEBUG:numba.core.ssa:on stmt: $44return_value.1 = cast(value=$42load_global.0)
DEBUG:numba.core.ssa:on stmt: return $44return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $46load_global.0 = global(math: <module 'math' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/lib-dynload/math.cpython-39-darwin.so'>)
DEBUG:numba.core.ssa:on stmt: $48load_method.1 = getattr(value=$46load_global.0, attr=frexp)
DEBUG:numba.core.ssa:on stmt: $52call_method.3 = call $48load_method.1(v, func=$48load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.6 = exhaust_iter(value=$52call_method.3, count=2)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.4 = static_getitem(value=$54unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.5 = static_getitem(value=$54unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: m = $54unpack_sequence.4
DEBUG:numba.core.ssa:on stmt: e = $54unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: sign = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const66.9 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $68compare_op.10 = m < $const66.9
DEBUG:numba.core.ssa:on stmt: bool70 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $70pred = call bool70($68compare_op.10, func=bool70, args=(Var($68compare_op.10, hashing.py:84),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $70pred, 72, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 72
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: sign.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: m = unary(fn=<built-in function neg>, value=m)
DEBUG:numba.core.ssa:on stmt: jump 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: x = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88(m, func=bool88, args=(Var(m, hashing.py:81),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $const92.1 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $94binary_lshift.2 = x << $const92.1
DEBUG:numba.core.ssa:on stmt: $96load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $98binary_and.4 = $94binary_lshift.2 & $96load_global.3
DEBUG:numba.core.ssa:on stmt: $102load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const104.7 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $106binary_subtract.8 = $102load_global.6 - $const104.7
DEBUG:numba.core.ssa:on stmt: $108binary_rshift.9 = x >> $106binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x = $98binary_and.4 | $108binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $const116.12 = const(float, 268435456.0)
DEBUG:numba.core.ssa:on stmt: $118inplace_multiply.13 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=m, rhs=$const116.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m = $118inplace_multiply.13
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $126inplace_subtract.16 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=e, rhs=$const124.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: e = $126inplace_subtract.16
DEBUG:numba.core.ssa:on stmt: $130load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: y = call $130load_global.17(m, func=$130load_global.17, args=[Var(m, hashing.py:81)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $142inplace_subtract.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=m, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m = $142inplace_subtract.22
DEBUG:numba.core.ssa:on stmt: $150inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=x, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x = $150inplace_add.25
DEBUG:numba.core.ssa:on stmt: $156load_global.27 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $158compare_op.28 = x >= $156load_global.27
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($158compare_op.28, func=bool160, args=(Var($158compare_op.28, hashing.py:98),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 211
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $164load_global.1 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $166inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=x, rhs=$164load_global.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x = $166inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: jump 211
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $const174.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = e >= $const174.1
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, hashing.py:101),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $182load_global.1 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $184binary_modulo.2 = e % $182load_global.1
DEBUG:numba.core.ssa:on stmt: e = $184binary_modulo.2
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $190load_global.0 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const192.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $194binary_subtract.2 = $190load_global.0 - $const192.1
DEBUG:numba.core.ssa:on stmt: $const196.3 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $200binary_subtract.5 = $const196.3 - e
DEBUG:numba.core.ssa:on stmt: $202load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $204binary_modulo.7 = $200binary_subtract.5 % $202load_global.6
DEBUG:numba.core.ssa:on stmt: e = $194binary_subtract.2 - $204binary_modulo.7
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 210
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $214binary_lshift.2 = x << e
DEBUG:numba.core.ssa:on stmt: $216load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $218binary_and.4 = $214binary_lshift.2 & $216load_global.3
DEBUG:numba.core.ssa:on stmt: $222load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $226binary_subtract.8 = $222load_global.6 - e
DEBUG:numba.core.ssa:on stmt: $228binary_rshift.9 = x >> $226binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x = $218binary_and.4 | $228binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $238binary_multiply.13 = x * sign
DEBUG:numba.core.ssa:find_def var='sign' stmt=$238binary_multiply.13 = x * sign
DEBUG:numba.core.ssa:find_def_from_top label 210
DEBUG:numba.core.ssa:idom 172 from label 210
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 86 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:find_def_from_top label 86
DEBUG:numba.core.ssa:idom 82 from label 86
DEBUG:numba.core.ssa:find_def_from_bottom label 82
DEBUG:numba.core.ssa:find_def_from_top label 82
DEBUG:numba.core.ssa:insert phi node sign.2 = phi(incoming_values=[], incoming_blocks=[]) at 82
DEBUG:numba.core.ssa:find_def_from_bottom label 72
DEBUG:numba.core.ssa:incoming_def sign.1 = const(int, -1)
DEBUG:numba.core.ssa:find_def_from_bottom label 46
DEBUG:numba.core.ssa:incoming_def sign = const(int, 1)
DEBUG:numba.core.ssa:replaced with: $238binary_multiply.13 = x * sign.2
DEBUG:numba.core.ssa:on stmt: x = $238binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $242load_global.14 = global(process_return: <function process_return at 0x7fda213bc0d0>)
DEBUG:numba.core.ssa:on stmt: $246call_function.16 = call $242load_global.14(x, func=$242load_global.14, args=[Var(x, hashing.py:90)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248return_value.17 = cast(value=$246call_function.16)
DEBUG:numba.core.ssa:on stmt: return $248return_value.17
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 211
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.ssa:Fix SSA violator on var m
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03daf40>
DEBUG:numba.core.ssa:on stmt: v = arg(0, name=v)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=isfinite)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(v, func=$4load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10($8call_method.3, func=bool10, args=(Var($8call_method.3, hashing.py:72),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 46, 12
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03daf40>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $14load_method.1 = getattr(value=$12load_global.0, attr=isinf)
DEBUG:numba.core.ssa:on stmt: $18call_method.3 = call $14load_method.1(v, func=$14load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18call_method.3, func=bool20, args=(Var($18call_method.3, hashing.py:73),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03daf40>
DEBUG:numba.core.ssa:on stmt: $const24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.2 = v > $const24.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, hashing.py:74),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03daf40>
DEBUG:numba.core.ssa:on stmt: $30load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$30load_global.0)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03daf40>
DEBUG:numba.core.ssa:on stmt: $34load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $36unary_negative.1 = unary(fn=<built-in function neg>, value=$34load_global.0)
DEBUG:numba.core.ssa:on stmt: $38return_value.2 = cast(value=$36unary_negative.1)
DEBUG:numba.core.ssa:on stmt: return $38return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03daf40>
DEBUG:numba.core.ssa:on stmt: $42load_global.0 = global(_PyHASH_NAN: 0)
DEBUG:numba.core.ssa:on stmt: $44return_value.1 = cast(value=$42load_global.0)
DEBUG:numba.core.ssa:on stmt: return $44return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03daf40>
DEBUG:numba.core.ssa:on stmt: $46load_global.0 = global(math: <module 'math' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/lib-dynload/math.cpython-39-darwin.so'>)
DEBUG:numba.core.ssa:on stmt: $48load_method.1 = getattr(value=$46load_global.0, attr=frexp)
DEBUG:numba.core.ssa:on stmt: $52call_method.3 = call $48load_method.1(v, func=$48load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.6 = exhaust_iter(value=$52call_method.3, count=2)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.4 = static_getitem(value=$54unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.5 = static_getitem(value=$54unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: m = $54unpack_sequence.4
DEBUG:numba.core.ssa:first assign: m
DEBUG:numba.core.ssa:replaced with: m = $54unpack_sequence.4
DEBUG:numba.core.ssa:on stmt: e = $54unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: sign = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const66.9 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $68compare_op.10 = m < $const66.9
DEBUG:numba.core.ssa:on stmt: bool70 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $70pred = call bool70($68compare_op.10, func=bool70, args=(Var($68compare_op.10, hashing.py:84),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $70pred, 72, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 72
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03daf40>
DEBUG:numba.core.ssa:on stmt: sign.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: m = unary(fn=<built-in function neg>, value=m)
DEBUG:numba.core.ssa:replaced with: m.1 = unary(fn=<built-in function neg>, value=m)
DEBUG:numba.core.ssa:on stmt: jump 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03daf40>
DEBUG:numba.core.ssa:on stmt: sign.2 = phi(incoming_values=[Var(sign.1, hashing.py:85), Var(sign, hashing.py:83)], incoming_blocks=[72, 46])
DEBUG:numba.core.ssa:on stmt: x = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03daf40>
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88(m, func=bool88, args=(Var(m, hashing.py:81),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03daf40>
DEBUG:numba.core.ssa:on stmt: $const92.1 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $94binary_lshift.2 = x << $const92.1
DEBUG:numba.core.ssa:on stmt: $96load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $98binary_and.4 = $94binary_lshift.2 & $96load_global.3
DEBUG:numba.core.ssa:on stmt: $102load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const104.7 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $106binary_subtract.8 = $102load_global.6 - $const104.7
DEBUG:numba.core.ssa:on stmt: $108binary_rshift.9 = x >> $106binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x = $98binary_and.4 | $108binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $const116.12 = const(float, 268435456.0)
DEBUG:numba.core.ssa:on stmt: $118inplace_multiply.13 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=m, rhs=$const116.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m = $118inplace_multiply.13
DEBUG:numba.core.ssa:replaced with: m.2 = $118inplace_multiply.13
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $126inplace_subtract.16 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=e, rhs=$const124.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: e = $126inplace_subtract.16
DEBUG:numba.core.ssa:on stmt: $130load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: y = call $130load_global.17(m, func=$130load_global.17, args=[Var(m, hashing.py:81)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $142inplace_subtract.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=m, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m = $142inplace_subtract.22
DEBUG:numba.core.ssa:replaced with: m.3 = $142inplace_subtract.22
DEBUG:numba.core.ssa:on stmt: $150inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=x, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x = $150inplace_add.25
DEBUG:numba.core.ssa:on stmt: $156load_global.27 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $158compare_op.28 = x >= $156load_global.27
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($158compare_op.28, func=bool160, args=(Var($158compare_op.28, hashing.py:98),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 211
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03daf40>
DEBUG:numba.core.ssa:on stmt: $164load_global.1 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $166inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=x, rhs=$164load_global.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x = $166inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: jump 211
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03daf40>
DEBUG:numba.core.ssa:on stmt: $const174.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = e >= $const174.1
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, hashing.py:101),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03daf40>
DEBUG:numba.core.ssa:on stmt: $182load_global.1 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $184binary_modulo.2 = e % $182load_global.1
DEBUG:numba.core.ssa:on stmt: e = $184binary_modulo.2
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03daf40>
DEBUG:numba.core.ssa:on stmt: $190load_global.0 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const192.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $194binary_subtract.2 = $190load_global.0 - $const192.1
DEBUG:numba.core.ssa:on stmt: $const196.3 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $200binary_subtract.5 = $const196.3 - e
DEBUG:numba.core.ssa:on stmt: $202load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $204binary_modulo.7 = $200binary_subtract.5 % $202load_global.6
DEBUG:numba.core.ssa:on stmt: e = $194binary_subtract.2 - $204binary_modulo.7
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 210
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03daf40>
DEBUG:numba.core.ssa:on stmt: $214binary_lshift.2 = x << e
DEBUG:numba.core.ssa:on stmt: $216load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $218binary_and.4 = $214binary_lshift.2 & $216load_global.3
DEBUG:numba.core.ssa:on stmt: $222load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $226binary_subtract.8 = $222load_global.6 - e
DEBUG:numba.core.ssa:on stmt: $228binary_rshift.9 = x >> $226binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x = $218binary_and.4 | $228binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $238binary_multiply.13 = x * sign.2
DEBUG:numba.core.ssa:on stmt: x = $238binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $242load_global.14 = global(process_return: <function process_return at 0x7fda213bc0d0>)
DEBUG:numba.core.ssa:on stmt: $246call_function.16 = call $242load_global.14(x, func=$242load_global.14, args=[Var(x, hashing.py:90)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248return_value.17 = cast(value=$246call_function.16)
DEBUG:numba.core.ssa:on stmt: return $248return_value.17
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 211
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03daf40>
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {46: [<numba.core.ir.Assign object at 0x7fd9e03debb0>],
             72: [<numba.core.ir.Assign object at 0x7fd9e03dee50>],
             90: [<numba.core.ir.Assign object at 0x7fd9e03de9d0>,
                  <numba.core.ir.Assign object at 0x7fd9e03dccd0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03a9b50>
DEBUG:numba.core.ssa:on stmt: v = arg(0, name=v)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=isfinite)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(v, func=$4load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10($8call_method.3, func=bool10, args=(Var($8call_method.3, hashing.py:72),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 46, 12
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03a9b50>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $14load_method.1 = getattr(value=$12load_global.0, attr=isinf)
DEBUG:numba.core.ssa:on stmt: $18call_method.3 = call $14load_method.1(v, func=$14load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18call_method.3, func=bool20, args=(Var($18call_method.3, hashing.py:73),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03a9b50>
DEBUG:numba.core.ssa:on stmt: $const24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.2 = v > $const24.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, hashing.py:74),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03a9b50>
DEBUG:numba.core.ssa:on stmt: $30load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$30load_global.0)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03a9b50>
DEBUG:numba.core.ssa:on stmt: $34load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $36unary_negative.1 = unary(fn=<built-in function neg>, value=$34load_global.0)
DEBUG:numba.core.ssa:on stmt: $38return_value.2 = cast(value=$36unary_negative.1)
DEBUG:numba.core.ssa:on stmt: return $38return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03a9b50>
DEBUG:numba.core.ssa:on stmt: $42load_global.0 = global(_PyHASH_NAN: 0)
DEBUG:numba.core.ssa:on stmt: $44return_value.1 = cast(value=$42load_global.0)
DEBUG:numba.core.ssa:on stmt: return $44return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03a9b50>
DEBUG:numba.core.ssa:on stmt: $46load_global.0 = global(math: <module 'math' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/lib-dynload/math.cpython-39-darwin.so'>)
DEBUG:numba.core.ssa:on stmt: $48load_method.1 = getattr(value=$46load_global.0, attr=frexp)
DEBUG:numba.core.ssa:on stmt: $52call_method.3 = call $48load_method.1(v, func=$48load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.6 = exhaust_iter(value=$52call_method.3, count=2)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.4 = static_getitem(value=$54unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.5 = static_getitem(value=$54unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: m = $54unpack_sequence.4
DEBUG:numba.core.ssa:on stmt: e = $54unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: sign = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const66.9 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $68compare_op.10 = m < $const66.9
DEBUG:numba.core.ssa:find_def var='m' stmt=$68compare_op.10 = m < $const66.9
DEBUG:numba.core.ssa:on stmt: bool70 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $70pred = call bool70($68compare_op.10, func=bool70, args=(Var($68compare_op.10, hashing.py:84),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $70pred, 72, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 72
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03a9b50>
DEBUG:numba.core.ssa:on stmt: sign.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: m.1 = unary(fn=<built-in function neg>, value=m)
DEBUG:numba.core.ssa:find_def var='m' stmt=m.1 = unary(fn=<built-in function neg>, value=m)
DEBUG:numba.core.ssa:find_def_from_top label 72
DEBUG:numba.core.ssa:idom 46 from label 72
DEBUG:numba.core.ssa:find_def_from_bottom label 46
DEBUG:numba.core.ssa:on stmt: jump 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03a9b50>
DEBUG:numba.core.ssa:on stmt: sign.2 = phi(incoming_values=[Var(sign.1, hashing.py:85), Var(sign, hashing.py:83)], incoming_blocks=[72, 46])
DEBUG:numba.core.ssa:on stmt: x = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03a9b50>
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88(m, func=bool88, args=(Var(m, hashing.py:81),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:find_def var='m' stmt=$88pred = call bool88(m, func=bool88, args=(Var(m, hashing.py:81),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 86
DEBUG:numba.core.ssa:insert phi node m.4 = phi(incoming_values=[], incoming_blocks=[]) at 86
DEBUG:numba.core.ssa:find_def_from_bottom label 82
DEBUG:numba.core.ssa:find_def_from_top label 82
DEBUG:numba.core.ssa:insert phi node m.5 = phi(incoming_values=[], incoming_blocks=[]) at 82
DEBUG:numba.core.ssa:find_def_from_bottom label 72
DEBUG:numba.core.ssa:incoming_def m.1 = unary(fn=<built-in function neg>, value=m)
DEBUG:numba.core.ssa:find_def_from_bottom label 46
DEBUG:numba.core.ssa:incoming_def m = $54unpack_sequence.4
DEBUG:numba.core.ssa:incoming_def m.5 = phi(incoming_values=[Var(m.1, hashing.py:86), Var(m, hashing.py:81)], incoming_blocks=[72, 46])
DEBUG:numba.core.ssa:find_def_from_bottom label 211
DEBUG:numba.core.ssa:find_def_from_top label 211
DEBUG:numba.core.ssa:idom 90 from label 211
DEBUG:numba.core.ssa:find_def_from_bottom label 90
DEBUG:numba.core.ssa:incoming_def m.3 = $142inplace_subtract.22
DEBUG:numba.core.ssa:replaced with: $88pred = call bool88(m.4, func=bool88, args=(Var(m.4, hashing.py:91),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03a9b50>
DEBUG:numba.core.ssa:on stmt: $const92.1 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $94binary_lshift.2 = x << $const92.1
DEBUG:numba.core.ssa:on stmt: $96load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $98binary_and.4 = $94binary_lshift.2 & $96load_global.3
DEBUG:numba.core.ssa:on stmt: $102load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const104.7 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $106binary_subtract.8 = $102load_global.6 - $const104.7
DEBUG:numba.core.ssa:on stmt: $108binary_rshift.9 = x >> $106binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x = $98binary_and.4 | $108binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $const116.12 = const(float, 268435456.0)
DEBUG:numba.core.ssa:on stmt: $118inplace_multiply.13 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=m, rhs=$const116.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='m' stmt=$118inplace_multiply.13 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=m, rhs=$const116.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 90
DEBUG:numba.core.ssa:idom 86 from label 90
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:replaced with: $118inplace_multiply.13 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=m.4, rhs=$const116.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m.2 = $118inplace_multiply.13
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $126inplace_subtract.16 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=e, rhs=$const124.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: e = $126inplace_subtract.16
DEBUG:numba.core.ssa:on stmt: $130load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: y = call $130load_global.17(m, func=$130load_global.17, args=[Var(m, hashing.py:81)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:find_def var='m' stmt=y = call $130load_global.17(m, func=$130load_global.17, args=[Var(m, hashing.py:81)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:replaced with: y = call $130load_global.17(m.2, func=$130load_global.17, args=[Var(m.2, hashing.py:93)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $142inplace_subtract.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=m, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='m' stmt=$142inplace_subtract.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=m, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:replaced with: $142inplace_subtract.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=m.2, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m.3 = $142inplace_subtract.22
DEBUG:numba.core.ssa:on stmt: $150inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=x, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x = $150inplace_add.25
DEBUG:numba.core.ssa:on stmt: $156load_global.27 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $158compare_op.28 = x >= $156load_global.27
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($158compare_op.28, func=bool160, args=(Var($158compare_op.28, hashing.py:98),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 211
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03a9b50>
DEBUG:numba.core.ssa:on stmt: $164load_global.1 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $166inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=x, rhs=$164load_global.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x = $166inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: jump 211
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03a9b50>
DEBUG:numba.core.ssa:on stmt: $const174.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = e >= $const174.1
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, hashing.py:101),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03a9b50>
DEBUG:numba.core.ssa:on stmt: $182load_global.1 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $184binary_modulo.2 = e % $182load_global.1
DEBUG:numba.core.ssa:on stmt: e = $184binary_modulo.2
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03a9b50>
DEBUG:numba.core.ssa:on stmt: $190load_global.0 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const192.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $194binary_subtract.2 = $190load_global.0 - $const192.1
DEBUG:numba.core.ssa:on stmt: $const196.3 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $200binary_subtract.5 = $const196.3 - e
DEBUG:numba.core.ssa:on stmt: $202load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $204binary_modulo.7 = $200binary_subtract.5 % $202load_global.6
DEBUG:numba.core.ssa:on stmt: e = $194binary_subtract.2 - $204binary_modulo.7
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 210
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03a9b50>
DEBUG:numba.core.ssa:on stmt: $214binary_lshift.2 = x << e
DEBUG:numba.core.ssa:on stmt: $216load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $218binary_and.4 = $214binary_lshift.2 & $216load_global.3
DEBUG:numba.core.ssa:on stmt: $222load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $226binary_subtract.8 = $222load_global.6 - e
DEBUG:numba.core.ssa:on stmt: $228binary_rshift.9 = x >> $226binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x = $218binary_and.4 | $228binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $238binary_multiply.13 = x * sign.2
DEBUG:numba.core.ssa:on stmt: x = $238binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $242load_global.14 = global(process_return: <function process_return at 0x7fda213bc0d0>)
DEBUG:numba.core.ssa:on stmt: $246call_function.16 = call $242load_global.14(x, func=$242load_global.14, args=[Var(x, hashing.py:90)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248return_value.17 = cast(value=$246call_function.16)
DEBUG:numba.core.ssa:on stmt: return $248return_value.17
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 211
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03a9b50>
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.ssa:Fix SSA violator on var x
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: v = arg(0, name=v)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=isfinite)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(v, func=$4load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10($8call_method.3, func=bool10, args=(Var($8call_method.3, hashing.py:72),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 46, 12
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $14load_method.1 = getattr(value=$12load_global.0, attr=isinf)
DEBUG:numba.core.ssa:on stmt: $18call_method.3 = call $14load_method.1(v, func=$14load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18call_method.3, func=bool20, args=(Var($18call_method.3, hashing.py:73),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $const24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.2 = v > $const24.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, hashing.py:74),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $30load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$30load_global.0)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $34load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $36unary_negative.1 = unary(fn=<built-in function neg>, value=$34load_global.0)
DEBUG:numba.core.ssa:on stmt: $38return_value.2 = cast(value=$36unary_negative.1)
DEBUG:numba.core.ssa:on stmt: return $38return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $42load_global.0 = global(_PyHASH_NAN: 0)
DEBUG:numba.core.ssa:on stmt: $44return_value.1 = cast(value=$42load_global.0)
DEBUG:numba.core.ssa:on stmt: return $44return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $46load_global.0 = global(math: <module 'math' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/lib-dynload/math.cpython-39-darwin.so'>)
DEBUG:numba.core.ssa:on stmt: $48load_method.1 = getattr(value=$46load_global.0, attr=frexp)
DEBUG:numba.core.ssa:on stmt: $52call_method.3 = call $48load_method.1(v, func=$48load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.6 = exhaust_iter(value=$52call_method.3, count=2)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.4 = static_getitem(value=$54unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.5 = static_getitem(value=$54unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: m = $54unpack_sequence.4
DEBUG:numba.core.ssa:on stmt: e = $54unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: sign = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const66.9 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $68compare_op.10 = m < $const66.9
DEBUG:numba.core.ssa:on stmt: bool70 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $70pred = call bool70($68compare_op.10, func=bool70, args=(Var($68compare_op.10, hashing.py:84),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $70pred, 72, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 72
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: sign.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: m.1 = unary(fn=<built-in function neg>, value=m)
DEBUG:numba.core.ssa:on stmt: jump 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: m.5 = phi(incoming_values=[Var(m.1, hashing.py:86), Var(m, hashing.py:81)], incoming_blocks=[72, 46])
DEBUG:numba.core.ssa:on stmt: sign.2 = phi(incoming_values=[Var(sign.1, hashing.py:85), Var(sign, hashing.py:83)], incoming_blocks=[72, 46])
DEBUG:numba.core.ssa:on stmt: x = const(int, 0)
DEBUG:numba.core.ssa:first assign: x
DEBUG:numba.core.ssa:replaced with: x = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: m.4 = phi(incoming_values=[Var(m.5, hashing.py:91), Var(m.3, hashing.py:96)], incoming_blocks=[82, 211])
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88(m.4, func=bool88, args=(Var(m.4, hashing.py:91),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $const92.1 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $94binary_lshift.2 = x << $const92.1
DEBUG:numba.core.ssa:on stmt: $96load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $98binary_and.4 = $94binary_lshift.2 & $96load_global.3
DEBUG:numba.core.ssa:on stmt: $102load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const104.7 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $106binary_subtract.8 = $102load_global.6 - $const104.7
DEBUG:numba.core.ssa:on stmt: $108binary_rshift.9 = x >> $106binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x = $98binary_and.4 | $108binary_rshift.9
DEBUG:numba.core.ssa:replaced with: x.1 = $98binary_and.4 | $108binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $const116.12 = const(float, 268435456.0)
DEBUG:numba.core.ssa:on stmt: $118inplace_multiply.13 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=m.4, rhs=$const116.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m.2 = $118inplace_multiply.13
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $126inplace_subtract.16 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=e, rhs=$const124.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: e = $126inplace_subtract.16
DEBUG:numba.core.ssa:on stmt: $130load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: y = call $130load_global.17(m.2, func=$130load_global.17, args=[Var(m.2, hashing.py:93)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $142inplace_subtract.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=m.2, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m.3 = $142inplace_subtract.22
DEBUG:numba.core.ssa:on stmt: $150inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=x, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x = $150inplace_add.25
DEBUG:numba.core.ssa:replaced with: x.2 = $150inplace_add.25
DEBUG:numba.core.ssa:on stmt: $156load_global.27 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $158compare_op.28 = x >= $156load_global.27
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($158compare_op.28, func=bool160, args=(Var($158compare_op.28, hashing.py:98),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 211
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $164load_global.1 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $166inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=x, rhs=$164load_global.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x = $166inplace_subtract.2
DEBUG:numba.core.ssa:replaced with: x.3 = $166inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: jump 211
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $const174.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = e >= $const174.1
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, hashing.py:101),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $182load_global.1 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $184binary_modulo.2 = e % $182load_global.1
DEBUG:numba.core.ssa:on stmt: e = $184binary_modulo.2
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $190load_global.0 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const192.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $194binary_subtract.2 = $190load_global.0 - $const192.1
DEBUG:numba.core.ssa:on stmt: $const196.3 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $200binary_subtract.5 = $const196.3 - e
DEBUG:numba.core.ssa:on stmt: $202load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $204binary_modulo.7 = $200binary_subtract.5 % $202load_global.6
DEBUG:numba.core.ssa:on stmt: e = $194binary_subtract.2 - $204binary_modulo.7
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 210
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: $214binary_lshift.2 = x << e
DEBUG:numba.core.ssa:on stmt: $216load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $218binary_and.4 = $214binary_lshift.2 & $216load_global.3
DEBUG:numba.core.ssa:on stmt: $222load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $226binary_subtract.8 = $222load_global.6 - e
DEBUG:numba.core.ssa:on stmt: $228binary_rshift.9 = x >> $226binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x = $218binary_and.4 | $228binary_rshift.9
DEBUG:numba.core.ssa:replaced with: x.4 = $218binary_and.4 | $228binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $238binary_multiply.13 = x * sign.2
DEBUG:numba.core.ssa:on stmt: x = $238binary_multiply.13
DEBUG:numba.core.ssa:replaced with: x.5 = $238binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $242load_global.14 = global(process_return: <function process_return at 0x7fda213bc0d0>)
DEBUG:numba.core.ssa:on stmt: $246call_function.16 = call $242load_global.14(x, func=$242load_global.14, args=[Var(x, hashing.py:90)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248return_value.17 = cast(value=$246call_function.16)
DEBUG:numba.core.ssa:on stmt: return $248return_value.17
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 211
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03ce610>
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {82: [<numba.core.ir.Assign object at 0x7fd9e03deb20>],
             90: [<numba.core.ir.Assign object at 0x7fd9e03ed490>,
                  <numba.core.ir.Assign object at 0x7fd9e03ed3a0>],
             162: [<numba.core.ir.Assign object at 0x7fd9e03ed040>],
             210: [<numba.core.ir.Assign object at 0x7fd9e03ed340>,
                   <numba.core.ir.Assign object at 0x7fd9e03ed4f0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ed790>
DEBUG:numba.core.ssa:on stmt: v = arg(0, name=v)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=isfinite)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(v, func=$4load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10($8call_method.3, func=bool10, args=(Var($8call_method.3, hashing.py:72),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 46, 12
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ed790>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $14load_method.1 = getattr(value=$12load_global.0, attr=isinf)
DEBUG:numba.core.ssa:on stmt: $18call_method.3 = call $14load_method.1(v, func=$14load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18call_method.3, func=bool20, args=(Var($18call_method.3, hashing.py:73),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ed790>
DEBUG:numba.core.ssa:on stmt: $const24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.2 = v > $const24.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, hashing.py:74),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ed790>
DEBUG:numba.core.ssa:on stmt: $30load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$30load_global.0)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ed790>
DEBUG:numba.core.ssa:on stmt: $34load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $36unary_negative.1 = unary(fn=<built-in function neg>, value=$34load_global.0)
DEBUG:numba.core.ssa:on stmt: $38return_value.2 = cast(value=$36unary_negative.1)
DEBUG:numba.core.ssa:on stmt: return $38return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ed790>
DEBUG:numba.core.ssa:on stmt: $42load_global.0 = global(_PyHASH_NAN: 0)
DEBUG:numba.core.ssa:on stmt: $44return_value.1 = cast(value=$42load_global.0)
DEBUG:numba.core.ssa:on stmt: return $44return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ed790>
DEBUG:numba.core.ssa:on stmt: $46load_global.0 = global(math: <module 'math' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/lib-dynload/math.cpython-39-darwin.so'>)
DEBUG:numba.core.ssa:on stmt: $48load_method.1 = getattr(value=$46load_global.0, attr=frexp)
DEBUG:numba.core.ssa:on stmt: $52call_method.3 = call $48load_method.1(v, func=$48load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.6 = exhaust_iter(value=$52call_method.3, count=2)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.4 = static_getitem(value=$54unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.5 = static_getitem(value=$54unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: m = $54unpack_sequence.4
DEBUG:numba.core.ssa:on stmt: e = $54unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: sign = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const66.9 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $68compare_op.10 = m < $const66.9
DEBUG:numba.core.ssa:on stmt: bool70 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $70pred = call bool70($68compare_op.10, func=bool70, args=(Var($68compare_op.10, hashing.py:84),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $70pred, 72, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 72
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ed790>
DEBUG:numba.core.ssa:on stmt: sign.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: m.1 = unary(fn=<built-in function neg>, value=m)
DEBUG:numba.core.ssa:on stmt: jump 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ed790>
DEBUG:numba.core.ssa:on stmt: m.5 = phi(incoming_values=[Var(m.1, hashing.py:86), Var(m, hashing.py:81)], incoming_blocks=[72, 46])
DEBUG:numba.core.ssa:on stmt: sign.2 = phi(incoming_values=[Var(sign.1, hashing.py:85), Var(sign, hashing.py:83)], incoming_blocks=[72, 46])
DEBUG:numba.core.ssa:on stmt: x = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ed790>
DEBUG:numba.core.ssa:on stmt: m.4 = phi(incoming_values=[Var(m.5, hashing.py:91), Var(m.3, hashing.py:96)], incoming_blocks=[82, 211])
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88(m.4, func=bool88, args=(Var(m.4, hashing.py:91),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ed790>
DEBUG:numba.core.ssa:on stmt: $const92.1 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $94binary_lshift.2 = x << $const92.1
DEBUG:numba.core.ssa:find_def var='x' stmt=$94binary_lshift.2 = x << $const92.1
DEBUG:numba.core.ssa:find_def_from_top label 90
DEBUG:numba.core.ssa:idom 86 from label 90
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:find_def_from_top label 86
DEBUG:numba.core.ssa:insert phi node x.6 = phi(incoming_values=[], incoming_blocks=[]) at 86
DEBUG:numba.core.ssa:find_def_from_bottom label 82
DEBUG:numba.core.ssa:incoming_def x = const(int, 0)
DEBUG:numba.core.ssa:find_def_from_bottom label 211
DEBUG:numba.core.ssa:find_def_from_top label 211
DEBUG:numba.core.ssa:insert phi node x.7 = phi(incoming_values=[], incoming_blocks=[]) at 211
DEBUG:numba.core.ssa:find_def_from_bottom label 162
DEBUG:numba.core.ssa:incoming_def x.3 = $166inplace_subtract.2
DEBUG:numba.core.ssa:find_def_from_bottom label 90
DEBUG:numba.core.ssa:incoming_def x.2 = $150inplace_add.25
DEBUG:numba.core.ssa:incoming_def x.7 = phi(incoming_values=[Var(x.3, hashing.py:99), Var(x.2, hashing.py:97)], incoming_blocks=[162, 90])
DEBUG:numba.core.ssa:replaced with: $94binary_lshift.2 = x.6 << $const92.1
DEBUG:numba.core.ssa:on stmt: $96load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $98binary_and.4 = $94binary_lshift.2 & $96load_global.3
DEBUG:numba.core.ssa:on stmt: $102load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const104.7 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $106binary_subtract.8 = $102load_global.6 - $const104.7
DEBUG:numba.core.ssa:on stmt: $108binary_rshift.9 = x >> $106binary_subtract.8
DEBUG:numba.core.ssa:find_def var='x' stmt=$108binary_rshift.9 = x >> $106binary_subtract.8
DEBUG:numba.core.ssa:find_def_from_top label 90
DEBUG:numba.core.ssa:idom 86 from label 90
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:replaced with: $108binary_rshift.9 = x.6 >> $106binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x.1 = $98binary_and.4 | $108binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $const116.12 = const(float, 268435456.0)
DEBUG:numba.core.ssa:on stmt: $118inplace_multiply.13 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=m.4, rhs=$const116.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m.2 = $118inplace_multiply.13
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $126inplace_subtract.16 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=e, rhs=$const124.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: e = $126inplace_subtract.16
DEBUG:numba.core.ssa:on stmt: $130load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: y = call $130load_global.17(m.2, func=$130load_global.17, args=[Var(m.2, hashing.py:93)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $142inplace_subtract.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=m.2, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m.3 = $142inplace_subtract.22
DEBUG:numba.core.ssa:on stmt: $150inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=x, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='x' stmt=$150inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=x, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:replaced with: $150inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=x.1, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x.2 = $150inplace_add.25
DEBUG:numba.core.ssa:on stmt: $156load_global.27 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $158compare_op.28 = x >= $156load_global.27
DEBUG:numba.core.ssa:find_def var='x' stmt=$158compare_op.28 = x >= $156load_global.27
DEBUG:numba.core.ssa:replaced with: $158compare_op.28 = x.2 >= $156load_global.27
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($158compare_op.28, func=bool160, args=(Var($158compare_op.28, hashing.py:98),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 211
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ed790>
DEBUG:numba.core.ssa:on stmt: $164load_global.1 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $166inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=x, rhs=$164load_global.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='x' stmt=$166inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=x, rhs=$164load_global.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 162
DEBUG:numba.core.ssa:idom 90 from label 162
DEBUG:numba.core.ssa:find_def_from_bottom label 90
DEBUG:numba.core.ssa:replaced with: $166inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=x.2, rhs=$164load_global.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x.3 = $166inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: jump 211
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ed790>
DEBUG:numba.core.ssa:on stmt: $const174.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = e >= $const174.1
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, hashing.py:101),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ed790>
DEBUG:numba.core.ssa:on stmt: $182load_global.1 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $184binary_modulo.2 = e % $182load_global.1
DEBUG:numba.core.ssa:on stmt: e = $184binary_modulo.2
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ed790>
DEBUG:numba.core.ssa:on stmt: $190load_global.0 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const192.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $194binary_subtract.2 = $190load_global.0 - $const192.1
DEBUG:numba.core.ssa:on stmt: $const196.3 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $200binary_subtract.5 = $const196.3 - e
DEBUG:numba.core.ssa:on stmt: $202load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $204binary_modulo.7 = $200binary_subtract.5 % $202load_global.6
DEBUG:numba.core.ssa:on stmt: e = $194binary_subtract.2 - $204binary_modulo.7
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 210
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ed790>
DEBUG:numba.core.ssa:on stmt: $214binary_lshift.2 = x << e
DEBUG:numba.core.ssa:find_def var='x' stmt=$214binary_lshift.2 = x << e
DEBUG:numba.core.ssa:find_def_from_top label 210
DEBUG:numba.core.ssa:idom 172 from label 210
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 86 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:replaced with: $214binary_lshift.2 = x.6 << e
DEBUG:numba.core.ssa:on stmt: $216load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $218binary_and.4 = $214binary_lshift.2 & $216load_global.3
DEBUG:numba.core.ssa:on stmt: $222load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $226binary_subtract.8 = $222load_global.6 - e
DEBUG:numba.core.ssa:on stmt: $228binary_rshift.9 = x >> $226binary_subtract.8
DEBUG:numba.core.ssa:find_def var='x' stmt=$228binary_rshift.9 = x >> $226binary_subtract.8
DEBUG:numba.core.ssa:find_def_from_top label 210
DEBUG:numba.core.ssa:idom 172 from label 210
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 86 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:replaced with: $228binary_rshift.9 = x.6 >> $226binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x.4 = $218binary_and.4 | $228binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $238binary_multiply.13 = x * sign.2
DEBUG:numba.core.ssa:find_def var='x' stmt=$238binary_multiply.13 = x * sign.2
DEBUG:numba.core.ssa:replaced with: $238binary_multiply.13 = x.4 * sign.2
DEBUG:numba.core.ssa:on stmt: x.5 = $238binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $242load_global.14 = global(process_return: <function process_return at 0x7fda213bc0d0>)
DEBUG:numba.core.ssa:on stmt: $246call_function.16 = call $242load_global.14(x, func=$242load_global.14, args=[Var(x, hashing.py:90)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:find_def var='x' stmt=$246call_function.16 = call $242load_global.14(x, func=$242load_global.14, args=[Var(x, hashing.py:90)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:replaced with: $246call_function.16 = call $242load_global.14(x.5, func=$242load_global.14, args=[Var(x.5, hashing.py:108)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248return_value.17 = cast(value=$246call_function.16)
DEBUG:numba.core.ssa:on stmt: return $248return_value.17
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 211
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03ed790>
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.ssa:Fix SSA violator on var e
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03a9df0>
DEBUG:numba.core.ssa:on stmt: v = arg(0, name=v)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=isfinite)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(v, func=$4load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10($8call_method.3, func=bool10, args=(Var($8call_method.3, hashing.py:72),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 46, 12
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03a9df0>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $14load_method.1 = getattr(value=$12load_global.0, attr=isinf)
DEBUG:numba.core.ssa:on stmt: $18call_method.3 = call $14load_method.1(v, func=$14load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18call_method.3, func=bool20, args=(Var($18call_method.3, hashing.py:73),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03a9df0>
DEBUG:numba.core.ssa:on stmt: $const24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.2 = v > $const24.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, hashing.py:74),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03a9df0>
DEBUG:numba.core.ssa:on stmt: $30load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$30load_global.0)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03a9df0>
DEBUG:numba.core.ssa:on stmt: $34load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $36unary_negative.1 = unary(fn=<built-in function neg>, value=$34load_global.0)
DEBUG:numba.core.ssa:on stmt: $38return_value.2 = cast(value=$36unary_negative.1)
DEBUG:numba.core.ssa:on stmt: return $38return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03a9df0>
DEBUG:numba.core.ssa:on stmt: $42load_global.0 = global(_PyHASH_NAN: 0)
DEBUG:numba.core.ssa:on stmt: $44return_value.1 = cast(value=$42load_global.0)
DEBUG:numba.core.ssa:on stmt: return $44return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03a9df0>
DEBUG:numba.core.ssa:on stmt: $46load_global.0 = global(math: <module 'math' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/lib-dynload/math.cpython-39-darwin.so'>)
DEBUG:numba.core.ssa:on stmt: $48load_method.1 = getattr(value=$46load_global.0, attr=frexp)
DEBUG:numba.core.ssa:on stmt: $52call_method.3 = call $48load_method.1(v, func=$48load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.6 = exhaust_iter(value=$52call_method.3, count=2)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.4 = static_getitem(value=$54unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.5 = static_getitem(value=$54unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: m = $54unpack_sequence.4
DEBUG:numba.core.ssa:on stmt: e = $54unpack_sequence.5
DEBUG:numba.core.ssa:first assign: e
DEBUG:numba.core.ssa:replaced with: e = $54unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: sign = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const66.9 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $68compare_op.10 = m < $const66.9
DEBUG:numba.core.ssa:on stmt: bool70 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $70pred = call bool70($68compare_op.10, func=bool70, args=(Var($68compare_op.10, hashing.py:84),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $70pred, 72, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 72
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03a9df0>
DEBUG:numba.core.ssa:on stmt: sign.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: m.1 = unary(fn=<built-in function neg>, value=m)
DEBUG:numba.core.ssa:on stmt: jump 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03a9df0>
DEBUG:numba.core.ssa:on stmt: m.5 = phi(incoming_values=[Var(m.1, hashing.py:86), Var(m, hashing.py:81)], incoming_blocks=[72, 46])
DEBUG:numba.core.ssa:on stmt: sign.2 = phi(incoming_values=[Var(sign.1, hashing.py:85), Var(sign, hashing.py:83)], incoming_blocks=[72, 46])
DEBUG:numba.core.ssa:on stmt: x = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03a9df0>
DEBUG:numba.core.ssa:on stmt: x.6 = phi(incoming_values=[Var(x, hashing.py:90), Var(x.7, hashing.py:92)], incoming_blocks=[82, 211])
DEBUG:numba.core.ssa:on stmt: m.4 = phi(incoming_values=[Var(m.5, hashing.py:91), Var(m.3, hashing.py:96)], incoming_blocks=[82, 211])
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88(m.4, func=bool88, args=(Var(m.4, hashing.py:91),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03a9df0>
DEBUG:numba.core.ssa:on stmt: $const92.1 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $94binary_lshift.2 = x.6 << $const92.1
DEBUG:numba.core.ssa:on stmt: $96load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $98binary_and.4 = $94binary_lshift.2 & $96load_global.3
DEBUG:numba.core.ssa:on stmt: $102load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const104.7 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $106binary_subtract.8 = $102load_global.6 - $const104.7
DEBUG:numba.core.ssa:on stmt: $108binary_rshift.9 = x.6 >> $106binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x.1 = $98binary_and.4 | $108binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $const116.12 = const(float, 268435456.0)
DEBUG:numba.core.ssa:on stmt: $118inplace_multiply.13 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=m.4, rhs=$const116.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m.2 = $118inplace_multiply.13
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $126inplace_subtract.16 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=e, rhs=$const124.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: e = $126inplace_subtract.16
DEBUG:numba.core.ssa:replaced with: e.1 = $126inplace_subtract.16
DEBUG:numba.core.ssa:on stmt: $130load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: y = call $130load_global.17(m.2, func=$130load_global.17, args=[Var(m.2, hashing.py:93)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $142inplace_subtract.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=m.2, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m.3 = $142inplace_subtract.22
DEBUG:numba.core.ssa:on stmt: $150inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=x.1, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x.2 = $150inplace_add.25
DEBUG:numba.core.ssa:on stmt: $156load_global.27 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $158compare_op.28 = x.2 >= $156load_global.27
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($158compare_op.28, func=bool160, args=(Var($158compare_op.28, hashing.py:98),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 211
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03a9df0>
DEBUG:numba.core.ssa:on stmt: $164load_global.1 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $166inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=x.2, rhs=$164load_global.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x.3 = $166inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: jump 211
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03a9df0>
DEBUG:numba.core.ssa:on stmt: $const174.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = e >= $const174.1
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, hashing.py:101),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03a9df0>
DEBUG:numba.core.ssa:on stmt: $182load_global.1 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $184binary_modulo.2 = e % $182load_global.1
DEBUG:numba.core.ssa:on stmt: e = $184binary_modulo.2
DEBUG:numba.core.ssa:replaced with: e.2 = $184binary_modulo.2
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03a9df0>
DEBUG:numba.core.ssa:on stmt: $190load_global.0 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const192.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $194binary_subtract.2 = $190load_global.0 - $const192.1
DEBUG:numba.core.ssa:on stmt: $const196.3 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $200binary_subtract.5 = $const196.3 - e
DEBUG:numba.core.ssa:on stmt: $202load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $204binary_modulo.7 = $200binary_subtract.5 % $202load_global.6
DEBUG:numba.core.ssa:on stmt: e = $194binary_subtract.2 - $204binary_modulo.7
DEBUG:numba.core.ssa:replaced with: e.3 = $194binary_subtract.2 - $204binary_modulo.7
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 210
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03a9df0>
DEBUG:numba.core.ssa:on stmt: $214binary_lshift.2 = x.6 << e
DEBUG:numba.core.ssa:on stmt: $216load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $218binary_and.4 = $214binary_lshift.2 & $216load_global.3
DEBUG:numba.core.ssa:on stmt: $222load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $226binary_subtract.8 = $222load_global.6 - e
DEBUG:numba.core.ssa:on stmt: $228binary_rshift.9 = x.6 >> $226binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x.4 = $218binary_and.4 | $228binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $238binary_multiply.13 = x.4 * sign.2
DEBUG:numba.core.ssa:on stmt: x.5 = $238binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $242load_global.14 = global(process_return: <function process_return at 0x7fda213bc0d0>)
DEBUG:numba.core.ssa:on stmt: $246call_function.16 = call $242load_global.14(x.5, func=$242load_global.14, args=[Var(x.5, hashing.py:108)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248return_value.17 = cast(value=$246call_function.16)
DEBUG:numba.core.ssa:on stmt: return $248return_value.17
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 211
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e03a9df0>
DEBUG:numba.core.ssa:on stmt: x.7 = phi(incoming_values=[Var(x.3, hashing.py:99), Var(x.2, hashing.py:97)], incoming_blocks=[162, 90])
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {46: [<numba.core.ir.Assign object at 0x7fd9e03defd0>],
             90: [<numba.core.ir.Assign object at 0x7fd9e03ed280>],
             180: [<numba.core.ir.Assign object at 0x7fd9e0404ca0>],
             190: [<numba.core.ir.Assign object at 0x7fd9e0404df0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03b3610>
DEBUG:numba.core.ssa:on stmt: v = arg(0, name=v)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=isfinite)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $4load_method.1(v, func=$4load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool10 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $10pred = call bool10($8call_method.3, func=bool10, args=(Var($8call_method.3, hashing.py:72),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $10pred, 46, 12
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03b3610>
DEBUG:numba.core.ssa:on stmt: $12load_global.0 = global(np: <module 'numpy' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numpy/__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $14load_method.1 = getattr(value=$12load_global.0, attr=isinf)
DEBUG:numba.core.ssa:on stmt: $18call_method.3 = call $14load_method.1(v, func=$14load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18call_method.3, func=bool20, args=(Var($18call_method.3, hashing.py:73),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03b3610>
DEBUG:numba.core.ssa:on stmt: $const24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $26compare_op.2 = v > $const24.1
DEBUG:numba.core.ssa:on stmt: bool28 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, hashing.py:74),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $28pred, 30, 34
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03b3610>
DEBUG:numba.core.ssa:on stmt: $30load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=$30load_global.0)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 34
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03b3610>
DEBUG:numba.core.ssa:on stmt: $34load_global.0 = global(_PyHASH_INF: 314159)
DEBUG:numba.core.ssa:on stmt: $36unary_negative.1 = unary(fn=<built-in function neg>, value=$34load_global.0)
DEBUG:numba.core.ssa:on stmt: $38return_value.2 = cast(value=$36unary_negative.1)
DEBUG:numba.core.ssa:on stmt: return $38return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03b3610>
DEBUG:numba.core.ssa:on stmt: $42load_global.0 = global(_PyHASH_NAN: 0)
DEBUG:numba.core.ssa:on stmt: $44return_value.1 = cast(value=$42load_global.0)
DEBUG:numba.core.ssa:on stmt: return $44return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03b3610>
DEBUG:numba.core.ssa:on stmt: $46load_global.0 = global(math: <module 'math' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/lib-dynload/math.cpython-39-darwin.so'>)
DEBUG:numba.core.ssa:on stmt: $48load_method.1 = getattr(value=$46load_global.0, attr=frexp)
DEBUG:numba.core.ssa:on stmt: $52call_method.3 = call $48load_method.1(v, func=$48load_method.1, args=[Var(v, hashing.py:72)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.6 = exhaust_iter(value=$52call_method.3, count=2)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.4 = static_getitem(value=$54unpack_sequence.6, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $54unpack_sequence.5 = static_getitem(value=$54unpack_sequence.6, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: m = $54unpack_sequence.4
DEBUG:numba.core.ssa:on stmt: e = $54unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: sign = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const66.9 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $68compare_op.10 = m < $const66.9
DEBUG:numba.core.ssa:on stmt: bool70 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $70pred = call bool70($68compare_op.10, func=bool70, args=(Var($68compare_op.10, hashing.py:84),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $70pred, 72, 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 72
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03b3610>
DEBUG:numba.core.ssa:on stmt: sign.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: m.1 = unary(fn=<built-in function neg>, value=m)
DEBUG:numba.core.ssa:on stmt: jump 82
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03b3610>
DEBUG:numba.core.ssa:on stmt: m.5 = phi(incoming_values=[Var(m.1, hashing.py:86), Var(m, hashing.py:81)], incoming_blocks=[72, 46])
DEBUG:numba.core.ssa:on stmt: sign.2 = phi(incoming_values=[Var(sign.1, hashing.py:85), Var(sign, hashing.py:83)], incoming_blocks=[72, 46])
DEBUG:numba.core.ssa:on stmt: x = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03b3610>
DEBUG:numba.core.ssa:on stmt: x.6 = phi(incoming_values=[Var(x, hashing.py:90), Var(x.7, hashing.py:92)], incoming_blocks=[82, 211])
DEBUG:numba.core.ssa:on stmt: m.4 = phi(incoming_values=[Var(m.5, hashing.py:91), Var(m.3, hashing.py:96)], incoming_blocks=[82, 211])
DEBUG:numba.core.ssa:on stmt: bool88 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $88pred = call bool88(m.4, func=bool88, args=(Var(m.4, hashing.py:91),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $88pred, 90, 172
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 90
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03b3610>
DEBUG:numba.core.ssa:on stmt: $const92.1 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $94binary_lshift.2 = x.6 << $const92.1
DEBUG:numba.core.ssa:on stmt: $96load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $98binary_and.4 = $94binary_lshift.2 & $96load_global.3
DEBUG:numba.core.ssa:on stmt: $102load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const104.7 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $106binary_subtract.8 = $102load_global.6 - $const104.7
DEBUG:numba.core.ssa:on stmt: $108binary_rshift.9 = x.6 >> $106binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x.1 = $98binary_and.4 | $108binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $const116.12 = const(float, 268435456.0)
DEBUG:numba.core.ssa:on stmt: $118inplace_multiply.13 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=m.4, rhs=$const116.12, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m.2 = $118inplace_multiply.13
DEBUG:numba.core.ssa:on stmt: $const124.15 = const(int, 28)
DEBUG:numba.core.ssa:on stmt: $126inplace_subtract.16 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=e, rhs=$const124.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='e' stmt=$126inplace_subtract.16 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=e, rhs=$const124.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 90
DEBUG:numba.core.ssa:idom 86 from label 90
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:find_def_from_top label 86
DEBUG:numba.core.ssa:insert phi node e.4 = phi(incoming_values=[], incoming_blocks=[]) at 86
DEBUG:numba.core.ssa:find_def_from_bottom label 82
DEBUG:numba.core.ssa:find_def_from_top label 82
DEBUG:numba.core.ssa:idom 46 from label 82
DEBUG:numba.core.ssa:find_def_from_bottom label 46
DEBUG:numba.core.ssa:incoming_def e = $54unpack_sequence.5
DEBUG:numba.core.ssa:find_def_from_bottom label 211
DEBUG:numba.core.ssa:find_def_from_top label 211
DEBUG:numba.core.ssa:idom 90 from label 211
DEBUG:numba.core.ssa:find_def_from_bottom label 90
DEBUG:numba.core.ssa:incoming_def e.1 = $126inplace_subtract.16
DEBUG:numba.core.ssa:replaced with: $126inplace_subtract.16 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=e.4, rhs=$const124.15, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: e.1 = $126inplace_subtract.16
DEBUG:numba.core.ssa:on stmt: $130load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: y = call $130load_global.17(m.2, func=$130load_global.17, args=[Var(m.2, hashing.py:93)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $142inplace_subtract.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=m.2, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: m.3 = $142inplace_subtract.22
DEBUG:numba.core.ssa:on stmt: $150inplace_add.25 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=x.1, rhs=y, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x.2 = $150inplace_add.25
DEBUG:numba.core.ssa:on stmt: $156load_global.27 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $158compare_op.28 = x.2 >= $156load_global.27
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($158compare_op.28, func=bool160, args=(Var($158compare_op.28, hashing.py:98),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 211
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03b3610>
DEBUG:numba.core.ssa:on stmt: $164load_global.1 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $166inplace_subtract.2 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=x.2, rhs=$164load_global.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: x.3 = $166inplace_subtract.2
DEBUG:numba.core.ssa:on stmt: jump 211
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03b3610>
DEBUG:numba.core.ssa:on stmt: $const174.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $176compare_op.2 = e >= $const174.1
DEBUG:numba.core.ssa:find_def var='e' stmt=$176compare_op.2 = e >= $const174.1
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 86 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:replaced with: $176compare_op.2 = e.4 >= $const174.1
DEBUG:numba.core.ssa:on stmt: bool178 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $178pred = call bool178($176compare_op.2, func=bool178, args=(Var($176compare_op.2, hashing.py:101),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $178pred, 180, 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03b3610>
DEBUG:numba.core.ssa:on stmt: $182load_global.1 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $184binary_modulo.2 = e % $182load_global.1
DEBUG:numba.core.ssa:find_def var='e' stmt=$184binary_modulo.2 = e % $182load_global.1
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 172 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 86 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:replaced with: $184binary_modulo.2 = e.4 % $182load_global.1
DEBUG:numba.core.ssa:on stmt: e.2 = $184binary_modulo.2
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03b3610>
DEBUG:numba.core.ssa:on stmt: $190load_global.0 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $const192.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $194binary_subtract.2 = $190load_global.0 - $const192.1
DEBUG:numba.core.ssa:on stmt: $const196.3 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $200binary_subtract.5 = $const196.3 - e
DEBUG:numba.core.ssa:find_def var='e' stmt=$200binary_subtract.5 = $const196.3 - e
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:idom 172 from label 190
DEBUG:numba.core.ssa:find_def_from_bottom label 172
DEBUG:numba.core.ssa:find_def_from_top label 172
DEBUG:numba.core.ssa:idom 86 from label 172
DEBUG:numba.core.ssa:find_def_from_bottom label 86
DEBUG:numba.core.ssa:replaced with: $200binary_subtract.5 = $const196.3 - e.4
DEBUG:numba.core.ssa:on stmt: $202load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $204binary_modulo.7 = $200binary_subtract.5 % $202load_global.6
DEBUG:numba.core.ssa:on stmt: e.3 = $194binary_subtract.2 - $204binary_modulo.7
DEBUG:numba.core.ssa:on stmt: jump 210
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 210
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03b3610>
DEBUG:numba.core.ssa:on stmt: $214binary_lshift.2 = x.6 << e
DEBUG:numba.core.ssa:find_def var='e' stmt=$214binary_lshift.2 = x.6 << e
DEBUG:numba.core.ssa:find_def_from_top label 210
DEBUG:numba.core.ssa:insert phi node e.5 = phi(incoming_values=[], incoming_blocks=[]) at 210
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:incoming_def e.2 = $184binary_modulo.2
DEBUG:numba.core.ssa:find_def_from_bottom label 190
DEBUG:numba.core.ssa:incoming_def e.3 = $194binary_subtract.2 - $204binary_modulo.7
DEBUG:numba.core.ssa:replaced with: $214binary_lshift.2 = x.6 << e.5
DEBUG:numba.core.ssa:on stmt: $216load_global.3 = global(_PyHASH_MODULUS: 2305843009213693951)
DEBUG:numba.core.ssa:on stmt: $218binary_and.4 = $214binary_lshift.2 & $216load_global.3
DEBUG:numba.core.ssa:on stmt: $222load_global.6 = global(_PyHASH_BITS: 61)
DEBUG:numba.core.ssa:on stmt: $226binary_subtract.8 = $222load_global.6 - e
DEBUG:numba.core.ssa:find_def var='e' stmt=$226binary_subtract.8 = $222load_global.6 - e
DEBUG:numba.core.ssa:replaced with: $226binary_subtract.8 = $222load_global.6 - e.5
DEBUG:numba.core.ssa:on stmt: $228binary_rshift.9 = x.6 >> $226binary_subtract.8
DEBUG:numba.core.ssa:on stmt: x.4 = $218binary_and.4 | $228binary_rshift.9
DEBUG:numba.core.ssa:on stmt: $238binary_multiply.13 = x.4 * sign.2
DEBUG:numba.core.ssa:on stmt: x.5 = $238binary_multiply.13
DEBUG:numba.core.ssa:on stmt: $242load_global.14 = global(process_return: <function process_return at 0x7fda213bc0d0>)
DEBUG:numba.core.ssa:on stmt: $246call_function.16 = call $242load_global.14(x.5, func=$242load_global.14, args=[Var(x.5, hashing.py:108)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248return_value.17 = cast(value=$246call_function.16)
DEBUG:numba.core.ssa:on stmt: return $248return_value.17
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 211
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e03b3610>
DEBUG:numba.core.ssa:on stmt: x.7 = phi(incoming_values=[Var(x.3, hashing.py:99), Var(x.2, hashing.py:97)], incoming_blocks=[162, 90])
DEBUG:numba.core.ssa:on stmt: jump 86
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=55)
           2	LOAD_GLOBAL(arg=0, lineno=55)
           4	LOAD_FAST(arg=0, lineno=55)
           6	CALL_FUNCTION(arg=1, lineno=55)
           8	STORE_FAST(arg=1, lineno=55)
          10	LOAD_FAST(arg=1, lineno=56)
          12	LOAD_GLOBAL(arg=1, lineno=56)
          14	LOAD_CONST(arg=1, lineno=56)
          16	CALL_FUNCTION(arg=1, lineno=56)
          18	COMPARE_OP(arg=2, lineno=56)
          20	POP_JUMP_IF_FALSE(arg=30, lineno=56)
          22	LOAD_GLOBAL(arg=1, lineno=57)
          24	LOAD_CONST(arg=2, lineno=57)
          26	CALL_FUNCTION(arg=1, lineno=57)
          28	STORE_FAST(arg=1, lineno=57)
>         30	LOAD_FAST(arg=1, lineno=58)
          32	RETURN_VALUE(arg=None, lineno=58)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=55)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=55)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=55)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=55)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$val4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=1, lineno=55)
DEBUG:numba.core.byteflow:stack ['$6call_function.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=56)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=56)
DEBUG:numba.core.byteflow:stack ['$asint10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=56)
DEBUG:numba.core.byteflow:stack ['$asint10.3', '$12load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=56)
DEBUG:numba.core.byteflow:stack ['$asint10.3', '$12load_global.4', '$const14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=COMPARE_OP(arg=2, lineno=56)
DEBUG:numba.core.byteflow:stack ['$asint10.3', '$16call_function.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=POP_JUMP_IF_FALSE(arg=30, lineno=56)
DEBUG:numba.core.byteflow:stack ['$18compare_op.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=22, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=22 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_GLOBAL(arg=1, lineno=57)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=57)
DEBUG:numba.core.byteflow:stack ['$22load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL_FUNCTION(arg=1, lineno=57)
DEBUG:numba.core.byteflow:stack ['$22load_global.0', '$const24.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=STORE_FAST(arg=1, lineno=57)
DEBUG:numba.core.byteflow:stack ['$26call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=58)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=58)
DEBUG:numba.core.byteflow:stack ['$asint30.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$val4.1'}), (6, {'func': '$2load_global.0', 'args': ['$val4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$asint10.3'}), (12, {'res': '$12load_global.4'}), (14, {'res': '$const14.5'}), (16, {'func': '$12load_global.4', 'args': ['$const14.5'], 'res': '$16call_function.6'}), (18, {'lhs': '$asint10.3', 'rhs': '$16call_function.6', 'res': '$18compare_op.7'}), (20, {'pred': '$18compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: (), 30: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=22 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'res': '$22load_global.0'}), (24, {'res': '$const24.1'}), (26, {'func': '$22load_global.0', 'args': ['$const24.1'], 'res': '$26call_function.2'}), (28, {'value': '$26call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {'res': '$asint30.0'}), (32, {'retval': '$asint30.0', 'castval': '$32return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    val = arg(0, name=val)                   ['val']
    $2load_global.0 = global(_Py_hash_t: int64) ['$2load_global.0']
    asint = call $2load_global.0(val, func=$2load_global.0, args=[Var(val, hashing.py:55)], kws=(), vararg=None, target=None) ['$2load_global.0', 'asint', 'val']
    $12load_global.4 = global(int: <class 'int'>) ['$12load_global.4']
    $const14.5 = const(int, -1)              ['$const14.5']
    $16call_function.6 = call $12load_global.4($const14.5, func=$12load_global.4, args=[Var($const14.5, hashing.py:56)], kws=(), vararg=None, target=None) ['$12load_global.4', '$16call_function.6', '$const14.5']
    $18compare_op.7 = asint == $16call_function.6 ['$16call_function.6', '$18compare_op.7', 'asint']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, hashing.py:56),), kws=(), vararg=None, target=None) ['$18compare_op.7', '$20pred', 'bool20']
    branch $20pred, 22, 30                   ['$20pred']
label 22:
    $22load_global.0 = global(int: <class 'int'>) ['$22load_global.0']
    $const24.1 = const(int, -2)              ['$const24.1']
    asint = call $22load_global.0($const24.1, func=$22load_global.0, args=[Var($const24.1, hashing.py:57)], kws=(), vararg=None, target=None) ['$22load_global.0', '$const24.1', 'asint']
    jump 30                                  []
label 30:
    $32return_value.1 = cast(value=asint)    ['$32return_value.1', 'asint']
    return $32return_value.1                 ['$32return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e04350a0>
DEBUG:numba.core.ssa:on stmt: val = arg(0, name=val)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(_Py_hash_t: int64)
DEBUG:numba.core.ssa:on stmt: asint = call $2load_global.0(val, func=$2load_global.0, args=[Var(val, hashing.py:55)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12load_global.4 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $const14.5 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $16call_function.6 = call $12load_global.4($const14.5, func=$12load_global.4, args=[Var($const14.5, hashing.py:56)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $18compare_op.7 = asint == $16call_function.6
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, hashing.py:56),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 30
DEBUG:numba.core.ssa:==== SSA block analysis pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e04350a0>
DEBUG:numba.core.ssa:on stmt: $22load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $const24.1 = const(int, -2)
DEBUG:numba.core.ssa:on stmt: asint = call $22load_global.0($const24.1, func=$22load_global.0, args=[Var($const24.1, hashing.py:57)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e04350a0>
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=asint)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12load_global.4': [<numba.core.ir.Assign object at 0x7fd9e0435ac0>],
             '$16call_function.6': [<numba.core.ir.Assign object at 0x7fd9e0435e20>],
             '$18compare_op.7': [<numba.core.ir.Assign object at 0x7fd9e0435f70>],
             '$20pred': [<numba.core.ir.Assign object at 0x7fd9e0438220>],
             '$22load_global.0': [<numba.core.ir.Assign object at 0x7fd9e04383a0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fd9e0435460>],
             '$32return_value.1': [<numba.core.ir.Assign object at 0x7fd9e0438a60>],
             '$const14.5': [<numba.core.ir.Assign object at 0x7fd9e0435c40>],
             '$const24.1': [<numba.core.ir.Assign object at 0x7fd9e0438520>],
             'asint': [<numba.core.ir.Assign object at 0x7fd9e0435760>,
                       <numba.core.ir.Assign object at 0x7fd9e0438700>],
             'bool20': [<numba.core.ir.Assign object at 0x7fd9e0438100>],
             'val': [<numba.core.ir.Assign object at 0x7fd9e042a3d0>]})
DEBUG:numba.core.ssa:SSA violators {'asint'}
DEBUG:numba.core.ssa:Fix SSA violator on var asint
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e04351f0>
DEBUG:numba.core.ssa:on stmt: val = arg(0, name=val)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(_Py_hash_t: int64)
DEBUG:numba.core.ssa:on stmt: asint = call $2load_global.0(val, func=$2load_global.0, args=[Var(val, hashing.py:55)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:first assign: asint
DEBUG:numba.core.ssa:replaced with: asint = call $2load_global.0(val, func=$2load_global.0, args=[Var(val, hashing.py:55)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12load_global.4 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $const14.5 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $16call_function.6 = call $12load_global.4($const14.5, func=$12load_global.4, args=[Var($const14.5, hashing.py:56)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $18compare_op.7 = asint == $16call_function.6
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, hashing.py:56),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e04351f0>
DEBUG:numba.core.ssa:on stmt: $22load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $const24.1 = const(int, -2)
DEBUG:numba.core.ssa:on stmt: asint = call $22load_global.0($const24.1, func=$22load_global.0, args=[Var($const24.1, hashing.py:57)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:replaced with: asint.1 = call $22load_global.0($const24.1, func=$22load_global.0, args=[Var($const24.1, hashing.py:57)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x7fd9e04351f0>
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=asint)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7fd9e042ae80>],
             22: [<numba.core.ir.Assign object at 0x7fd9e042a820>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e04351f0>
DEBUG:numba.core.ssa:on stmt: val = arg(0, name=val)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(_Py_hash_t: int64)
DEBUG:numba.core.ssa:on stmt: asint = call $2load_global.0(val, func=$2load_global.0, args=[Var(val, hashing.py:55)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12load_global.4 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $const14.5 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $16call_function.6 = call $12load_global.4($const14.5, func=$12load_global.4, args=[Var($const14.5, hashing.py:56)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $18compare_op.7 = asint == $16call_function.6
DEBUG:numba.core.ssa:find_def var='asint' stmt=$18compare_op.7 = asint == $16call_function.6
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($18compare_op.7, func=bool20, args=(Var($18compare_op.7, hashing.py:56),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e04351f0>
DEBUG:numba.core.ssa:on stmt: $22load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $const24.1 = const(int, -2)
DEBUG:numba.core.ssa:on stmt: asint.1 = call $22load_global.0($const24.1, func=$22load_global.0, args=[Var($const24.1, hashing.py:57)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 30
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x7fd9e04351f0>
DEBUG:numba.core.ssa:on stmt: $32return_value.1 = cast(value=asint)
DEBUG:numba.core.ssa:find_def var='asint' stmt=$32return_value.1 = cast(value=asint)
DEBUG:numba.core.ssa:find_def_from_top label 30
DEBUG:numba.core.ssa:insert phi node asint.2 = phi(incoming_values=[], incoming_blocks=[]) at 30
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def asint = call $2load_global.0(val, func=$2load_global.0, args=[Var(val, hashing.py:55)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_bottom label 22
DEBUG:numba.core.ssa:incoming_def asint.1 = call $22load_global.0($const24.1, func=$22load_global.0, args=[Var($const24.1, hashing.py:57)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:replaced with: $32return_value.1 = cast(value=asint.2)
DEBUG:numba.core.ssa:on stmt: return $32return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=278)
           2	LOAD_GLOBAL(arg=0, lineno=278)
           4	LOAD_METHOD(arg=1, lineno=278)
           6	LOAD_FAST(arg=0, lineno=278)
           8	LOAD_FAST(arg=1, lineno=278)
          10	CALL_METHOD(arg=2, lineno=278)
          12	RETURN_VALUE(arg=None, lineno=278)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=278)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=278)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=278)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=278)
DEBUG:numba.core.byteflow:stack ['$4load_method.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=278)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$mi6.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=278)
DEBUG:numba.core.byteflow:stack ['$4load_method.1', '$mi6.2', '$typ8.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=278)
DEBUG:numba.core.byteflow:stack ['$10call_method.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$mi6.2'}), (8, {'res': '$typ8.3'}), (10, {'func': '$4load_method.1', 'args': ['$mi6.2', '$typ8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    mi = arg(0, name=mi)                     ['mi']
    typ = arg(1, name=typ)                   ['typ']
    $2load_global.0 = global(dictobject: <module 'numba.typed.dictobject' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numba/typed/dictobject.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=_from_meminfo) ['$2load_global.0', '$4load_method.1']
    $10call_method.4 = call $4load_method.1(mi, typ, func=$4load_method.1, args=[Var(mi, typeddict.py:278), Var(typ, typeddict.py:278)], kws=(), vararg=None, target=None) ['$10call_method.4', '$4load_method.1', 'mi', 'typ']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e04b7340>
DEBUG:numba.core.ssa:on stmt: mi = arg(0, name=mi)
DEBUG:numba.core.ssa:on stmt: typ = arg(1, name=typ)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(dictobject: <module 'numba.typed.dictobject' from '/Users/adambricknell/opt/anaconda3/lib/python3.9/site-packages/numba/typed/dictobject.py'>)
DEBUG:numba.core.ssa:on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=_from_meminfo)
DEBUG:numba.core.ssa:on stmt: $10call_method.4 = call $4load_method.1(mi, typ, func=$4load_method.1, args=[Var(mi, typeddict.py:278), Var(typ, typeddict.py:278)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12return_value.5 = cast(value=$10call_method.4)
DEBUG:numba.core.ssa:on stmt: return $12return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10call_method.4': [<numba.core.ir.Assign object at 0x7fd9e04b6790>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x7fd9e04b6880>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fd9e04b61c0>],
             '$4load_method.1': [<numba.core.ir.Assign object at 0x7fd9e04b6340>],
             'mi': [<numba.core.ir.Assign object at 0x7fd9e04ae190>],
             'typ': [<numba.core.ir.Assign object at 0x7fd9e04ae1f0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=63)
           2	LOAD_GLOBAL(arg=0, lineno=63)
           4	LOAD_FAST(arg=0, lineno=63)
           6	LOAD_METHOD(arg=1, lineno=63)
           8	CALL_METHOD(arg=0, lineno=63)
          10	CALL_FUNCTION(arg=1, lineno=63)
          12	RETURN_VALUE(arg=None, lineno=63)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=63)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=63)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=63)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_METHOD(arg=1, lineno=63)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$d4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=CALL_METHOD(arg=0, lineno=63)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$6load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=CALL_FUNCTION(arg=1, lineno=63)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$8call_method.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=63)
DEBUG:numba.core.byteflow:stack ['$10call_function.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$d4.1'}), (6, {'item': '$d4.1', 'res': '$6load_method.2'}), (8, {'func': '$6load_method.2', 'args': [], 'res': '$8call_method.3'}), (10, {'func': '$2load_global.0', 'args': ['$8call_method.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    d = arg(0, name=d)                       ['d']
    $2load_global.0 = global(list: <class 'list'>) ['$2load_global.0']
    $6load_method.2 = getattr(value=d, attr=keys) ['$6load_method.2', 'd']
    $8call_method.3 = call $6load_method.2(func=$6load_method.2, args=[], kws=(), vararg=None, target=None) ['$6load_method.2', '$8call_method.3']
    $10call_function.4 = call $2load_global.0($8call_method.3, func=$2load_global.0, args=[Var($8call_method.3, typeddict.py:63)], kws=(), vararg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8call_method.3']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fda0019cc10>
DEBUG:numba.core.ssa:on stmt: d = arg(0, name=d)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(list: <class 'list'>)
DEBUG:numba.core.ssa:on stmt: $6load_method.2 = getattr(value=d, attr=keys)
DEBUG:numba.core.ssa:on stmt: $8call_method.3 = call $6load_method.2(func=$6load_method.2, args=[], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $10call_function.4 = call $2load_global.0($8call_method.3, func=$2load_global.0, args=[Var($8call_method.3, typeddict.py:63)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12return_value.5 = cast(value=$10call_function.4)
DEBUG:numba.core.ssa:on stmt: return $12return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10call_function.4': [<numba.core.ir.Assign object at 0x7fd9e0464be0>],
             '$12return_value.5': [<numba.core.ir.Assign object at 0x7fd9e0464340>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fda21a97550>],
             '$6load_method.2': [<numba.core.ir.Assign object at 0x7fd9e0464850>],
             '$8call_method.3': [<numba.core.ir.Assign object at 0x7fd9e04645b0>],
             'd': [<numba.core.ir.Assign object at 0x7fda21a97760>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=878)
           2	LOAD_GLOBAL(arg=0, lineno=878)
           4	LOAD_FAST(arg=0, lineno=878)
           6	CALL_FUNCTION(arg=1, lineno=878)
           8	RETURN_VALUE(arg=None, lineno=878)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=878)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=878)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=878)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=878)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$d4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=878)
DEBUG:numba.core.byteflow:stack ['$6call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$d4.1'}), (6, {'func': '$2load_global.0', 'args': ['$d4.1'], 'res': '$6call_function.2'}), (8, {'retval': '$6call_function.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    d = arg(0, name=d)                       ['d']
    $2load_global.0 = global(_dict_keys: <intrinsic _dict_keys>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(d, func=$2load_global.0, args=[Var(d, dictobject.py:878)], kws=(), vararg=None, target=None) ['$2load_global.0', '$6call_function.2', 'd']
    $8return_value.3 = cast(value=$6call_function.2) ['$6call_function.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fda219e1790>
DEBUG:numba.core.ssa:on stmt: d = arg(0, name=d)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(_dict_keys: <intrinsic _dict_keys>)
DEBUG:numba.core.ssa:on stmt: $6call_function.2 = call $2load_global.0(d, func=$2load_global.0, args=[Var(d, dictobject.py:878)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $8return_value.3 = cast(value=$6call_function.2)
DEBUG:numba.core.ssa:on stmt: return $8return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$2load_global.0': [<numba.core.ir.Assign object at 0x7fda00198910>],
             '$6call_function.2': [<numba.core.ir.Assign object at 0x7fda001986d0>],
             '$8return_value.3': [<numba.core.ir.Assign object at 0x7fda001984c0>],
             'd': [<numba.core.ir.Assign object at 0x7fda00198be0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=467)
           2	BUILD_LIST(arg=0, lineno=467)
           4	STORE_FAST(arg=1, lineno=467)
           6	LOAD_FAST(arg=1, lineno=468)
           8	LOAD_METHOD(arg=0, lineno=468)
          10	LOAD_FAST(arg=0, lineno=468)
          12	CALL_METHOD(arg=1, lineno=468)
          14	POP_TOP(arg=None, lineno=468)
          16	LOAD_FAST(arg=1, lineno=469)
          18	RETURN_VALUE(arg=None, lineno=469)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=467)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=BUILD_LIST(arg=0, lineno=467)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=STORE_FAST(arg=1, lineno=467)
DEBUG:numba.core.byteflow:stack ['$2build_list.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=468)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_METHOD(arg=0, lineno=468)
DEBUG:numba.core.byteflow:stack ['$res6.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=468)
DEBUG:numba.core.byteflow:stack ['$8load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=CALL_METHOD(arg=1, lineno=468)
DEBUG:numba.core.byteflow:stack ['$8load_method.2', '$iterable10.3']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=POP_TOP(arg=None, lineno=468)
DEBUG:numba.core.byteflow:stack ['$12call_method.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=469)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=RETURN_VALUE(arg=None, lineno=469)
DEBUG:numba.core.byteflow:stack ['$res16.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'items': [], 'res': '$2build_list.0'}), (4, {'value': '$2build_list.0'}), (6, {'res': '$res6.1'}), (8, {'item': '$res6.1', 'res': '$8load_method.2'}), (10, {'res': '$iterable10.3'}), (12, {'func': '$8load_method.2', 'args': ['$iterable10.3'], 'res': '$12call_method.4'}), (16, {'res': '$res16.5'}), (18, {'retval': '$res16.5', 'castval': '$18return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    iterable = arg(0, name=iterable)         ['iterable']
    res = build_list(items=[])               ['res']
    $8load_method.2 = getattr(value=res, attr=extend) ['$8load_method.2', 'res']
    $12call_method.4 = call $8load_method.2(iterable, func=$8load_method.2, args=[Var(iterable, listobj.py:467)], kws=(), vararg=None, target=None) ['$12call_method.4', '$8load_method.2', 'iterable']
    $18return_value.6 = cast(value=res)      ['$18return_value.6', 'res']
    return $18return_value.6                 ['$18return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e0440070>
DEBUG:numba.core.ssa:on stmt: iterable = arg(0, name=iterable)
DEBUG:numba.core.ssa:on stmt: res = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: $8load_method.2 = getattr(value=res, attr=extend)
DEBUG:numba.core.ssa:on stmt: $12call_method.4 = call $8load_method.2(iterable, func=$8load_method.2, args=[Var(iterable, listobj.py:467)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $18return_value.6 = cast(value=res)
DEBUG:numba.core.ssa:on stmt: return $18return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12call_method.4': [<numba.core.ir.Assign object at 0x7fd9e042ac10>],
             '$18return_value.6': [<numba.core.ir.Assign object at 0x7fda21af7bb0>],
             '$8load_method.2': [<numba.core.ir.Assign object at 0x7fd9e042a100>],
             'iterable': [<numba.core.ir.Assign object at 0x7fd9e0428550>],
             'res': [<numba.core.ir.Assign object at 0x7fda0018dbb0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=911)
           2	LOAD_FAST(arg=0, lineno=911)
           4	LOAD_ATTR(arg=0, lineno=911)
           6	STORE_FAST(arg=2, lineno=911)
           8	LOAD_FAST(arg=1, lineno=912)
          10	GET_ITER(arg=None, lineno=912)
>         12	FOR_ITER(arg=12, lineno=912)
          14	STORE_FAST(arg=3, lineno=912)
          16	LOAD_FAST(arg=2, lineno=913)
          18	LOAD_FAST(arg=3, lineno=913)
          20	CALL_FUNCTION(arg=1, lineno=913)
          22	POP_TOP(arg=None, lineno=913)
          24	JUMP_ABSOLUTE(arg=12, lineno=913)
>         26	LOAD_CONST(arg=0, lineno=913)
          28	RETURN_VALUE(arg=None, lineno=913)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=911)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=911)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=911)
DEBUG:numba.core.byteflow:stack ['$lst2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=STORE_FAST(arg=2, lineno=911)
DEBUG:numba.core.byteflow:stack ['$4load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=912)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=GET_ITER(arg=None, lineno=912)
DEBUG:numba.core.byteflow:stack ['$iterable8.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=12, stack=('$10get_iter.3',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=12 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi12.0']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=FOR_ITER(arg=12, lineno=912)
DEBUG:numba.core.byteflow:stack ['$phi12.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=14, stack=('$phi12.0', '$12for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=14 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=0, lineno=913)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=RETURN_VALUE(arg=None, lineno=913)
DEBUG:numba.core.byteflow:stack ['$const26.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=14 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi14.0', '$phi14.1']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=STORE_FAST(arg=3, lineno=912)
DEBUG:numba.core.byteflow:stack ['$phi14.0', '$phi14.1']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=913)
DEBUG:numba.core.byteflow:stack ['$phi14.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=3, lineno=913)
DEBUG:numba.core.byteflow:stack ['$phi14.0', '$meth16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=CALL_FUNCTION(arg=1, lineno=913)
DEBUG:numba.core.byteflow:stack ['$phi14.0', '$meth16.2', '$v18.3']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=POP_TOP(arg=None, lineno=913)
DEBUG:numba.core.byteflow:stack ['$phi14.0', '$20call_function.4']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=JUMP_ABSOLUTE(arg=12, lineno=913)
DEBUG:numba.core.byteflow:stack ['$phi14.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=12, stack=('$phi14.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=12 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=1): {'$phi12.0'},
             State(pc_initial=14 nstack_initial=2): {'$phi14.1'},
             State(pc_initial=26 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi12.0': State(pc_initial=0 nstack_initial=0),
 '$phi14.1': State(pc_initial=12 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi12.0': {('$10get_iter.3',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi14.0', State(pc_initial=14 nstack_initial=2))},
             '$phi14.0': {('$phi12.0', State(pc_initial=12 nstack_initial=1))},
             '$phi14.1': {('$12for_iter.2',
                           State(pc_initial=12 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi12.0': {('$10get_iter.3',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi12.0', State(pc_initial=12 nstack_initial=1))},
             '$phi14.0': {('$10get_iter.3',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi14.1': {('$12for_iter.2',
                           State(pc_initial=12 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi12.0': {('$10get_iter.3',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi14.0': {('$10get_iter.3',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi14.1': {('$12for_iter.2',
                           State(pc_initial=12 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi12.0': {('$10get_iter.3',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi14.0': {('$10get_iter.3',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi14.1': {('$12for_iter.2',
                           State(pc_initial=12 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi12.0': {('$10get_iter.3', State(pc_initial=0 nstack_initial=0))},
 '$phi14.1': {('$12for_iter.2', State(pc_initial=12 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi12.0': '$10get_iter.3'},
             State(pc_initial=12 nstack_initial=1): {'$phi14.1': '$12for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$lst2.0'}), (4, {'item': '$lst2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$iterable8.2'}), (10, {'value': '$iterable8.2', 'res': '$10get_iter.3'})), outgoing_phis={'$phi12.0': '$10get_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: ('$10get_iter.3',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=12 nstack_initial=1):
AdaptBlockInfo(insts=((12, {'iterator': '$phi12.0', 'pair': '$12for_iter.1', 'indval': '$12for_iter.2', 'pred': '$12for_iter.3'}),), outgoing_phis={'$phi14.1': '$12for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 14: ('$phi12.0', '$12for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=14 nstack_initial=2):
AdaptBlockInfo(insts=((14, {'value': '$phi14.1'}), (16, {'res': '$meth16.2'}), (18, {'res': '$v18.3'}), (20, {'func': '$meth16.2', 'args': ['$v18.3'], 'res': '$20call_function.4'}), (24, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: ('$phi14.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'retval': '$const26.0', 'castval': '$28return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    lst = arg(0, name=lst)                   ['lst']
    iterable = arg(1, name=iterable)         ['iterable']
    meth = getattr(value=lst, attr=append)   ['lst', 'meth']
    $10get_iter.3 = getiter(value=iterable)  ['$10get_iter.3', 'iterable']
    $phi12.0 = $10get_iter.3                 ['$10get_iter.3', '$phi12.0']
    jump 12                                  []
label 12:
    $12for_iter.1 = iternext(value=$phi12.0) ['$12for_iter.1', '$phi12.0']
    $12for_iter.2 = pair_first(value=$12for_iter.1) ['$12for_iter.1', '$12for_iter.2']
    $12for_iter.3 = pair_second(value=$12for_iter.1) ['$12for_iter.1', '$12for_iter.3']
    $phi14.1 = $12for_iter.2                 ['$12for_iter.2', '$phi14.1']
    branch $12for_iter.3, 14, 26             ['$12for_iter.3']
label 14:
    v = $phi14.1                             ['$phi14.1', 'v']
    $20call_function.4 = call meth(v, func=meth, args=[Var(v, listobj.py:912)], kws=(), vararg=None, target=None) ['$20call_function.4', 'meth', 'v']
    jump 12                                  []
label 26:
    $const26.0 = const(NoneType, None)       ['$const26.0']
    $28return_value.1 = cast(value=$const26.0) ['$28return_value.1', '$const26.0']
    return $28return_value.1                 ['$28return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e050cd60>
DEBUG:numba.core.ssa:on stmt: lst = arg(0, name=lst)
DEBUG:numba.core.ssa:on stmt: iterable = arg(1, name=iterable)
DEBUG:numba.core.ssa:on stmt: meth = getattr(value=lst, attr=append)
DEBUG:numba.core.ssa:on stmt: $10get_iter.3 = getiter(value=iterable)
DEBUG:numba.core.ssa:on stmt: $phi12.0 = $10get_iter.3
DEBUG:numba.core.ssa:on stmt: jump 12
DEBUG:numba.core.ssa:==== SSA block analysis pass on 12
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e050cd60>
DEBUG:numba.core.ssa:on stmt: $12for_iter.1 = iternext(value=$phi12.0)
DEBUG:numba.core.ssa:on stmt: $12for_iter.2 = pair_first(value=$12for_iter.1)
DEBUG:numba.core.ssa:on stmt: $12for_iter.3 = pair_second(value=$12for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi14.1 = $12for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $12for_iter.3, 14, 26
DEBUG:numba.core.ssa:==== SSA block analysis pass on 14
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e050cd60>
DEBUG:numba.core.ssa:on stmt: v = $phi14.1
DEBUG:numba.core.ssa:on stmt: $20call_function.4 = call meth(v, func=meth, args=[Var(v, listobj.py:912)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 12
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e050cd60>
DEBUG:numba.core.ssa:on stmt: $const26.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $28return_value.1 = cast(value=$const26.0)
DEBUG:numba.core.ssa:on stmt: return $28return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10get_iter.3': [<numba.core.ir.Assign object at 0x7fd9e0511160>],
             '$12for_iter.1': [<numba.core.ir.Assign object at 0x7fd9e05113a0>],
             '$12for_iter.2': [<numba.core.ir.Assign object at 0x7fd9e05114c0>],
             '$12for_iter.3': [<numba.core.ir.Assign object at 0x7fd9e05115e0>],
             '$20call_function.4': [<numba.core.ir.Assign object at 0x7fd9e0511cd0>],
             '$28return_value.1': [<numba.core.ir.Assign object at 0x7fd9e0517070>],
             '$const26.0': [<numba.core.ir.Assign object at 0x7fd9e0511eb0>],
             '$phi12.0': [<numba.core.ir.Assign object at 0x7fd9e050c220>],
             '$phi14.1': [<numba.core.ir.Assign object at 0x7fd9e05112e0>],
             'iterable': [<numba.core.ir.Assign object at 0x7fd9e050cf10>],
             'lst': [<numba.core.ir.Assign object at 0x7fd9e050c850>],
             'meth': [<numba.core.ir.Assign object at 0x7fd9e050c4c0>],
             'v': [<numba.core.ir.Assign object at 0x7fd9e05118b0>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=38)
           2	LOAD_FAST(arg=0, lineno=38)
           4	LOAD_FAST(arg=1, lineno=38)
           6	BINARY_SUBSCR(arg=None, lineno=38)
           8	RETURN_VALUE(arg=None, lineno=38)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=38)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=38)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=38)
DEBUG:numba.core.byteflow:stack ['$d2.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=38)
DEBUG:numba.core.byteflow:stack ['$d2.0', '$key4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=38)
DEBUG:numba.core.byteflow:stack ['$6binary_subscr.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$d2.0'}), (4, {'res': '$key4.1'}), (6, {'index': '$key4.1', 'target': '$d2.0', 'res': '$6binary_subscr.2'}), (8, {'retval': '$6binary_subscr.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    d = arg(0, name=d)                       ['d']
    key = arg(1, name=key)                   ['key']
    $6binary_subscr.2 = getitem(value=d, index=key, fn=<built-in function getitem>) ['$6binary_subscr.2', 'd', 'key']
    $8return_value.3 = cast(value=$6binary_subscr.2) ['$6binary_subscr.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fda21b30eb0>
DEBUG:numba.core.ssa:on stmt: d = arg(0, name=d)
DEBUG:numba.core.ssa:on stmt: key = arg(1, name=key)
DEBUG:numba.core.ssa:on stmt: $6binary_subscr.2 = getitem(value=d, index=key, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $8return_value.3 = cast(value=$6binary_subscr.2)
DEBUG:numba.core.ssa:on stmt: return $8return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$6binary_subscr.2': [<numba.core.ir.Assign object at 0x7fda21b30fd0>],
             '$8return_value.3': [<numba.core.ir.Assign object at 0x7fda21b33160>],
             'd': [<numba.core.ir.Assign object at 0x7fda21b30220>],
             'key': [<numba.core.ir.Assign object at 0x7fda21b30280>]})
DEBUG:numba.core.ssa:SSA violators set()
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=736)
           2	LOAD_GLOBAL(arg=0, lineno=736)
           4	LOAD_FAST(arg=1, lineno=736)
           6	LOAD_DEREF(arg=0, lineno=736)
           8	CALL_FUNCTION(arg=2, lineno=736)
          10	STORE_FAST(arg=2, lineno=736)
          12	LOAD_GLOBAL(arg=1, lineno=737)
          14	LOAD_FAST(arg=0, lineno=737)
          16	LOAD_FAST(arg=2, lineno=737)
          18	LOAD_GLOBAL(arg=2, lineno=737)
          20	LOAD_FAST(arg=2, lineno=737)
          22	CALL_FUNCTION(arg=1, lineno=737)
          24	CALL_FUNCTION(arg=3, lineno=737)
          26	UNPACK_SEQUENCE(arg=2, lineno=737)
          28	STORE_FAST(arg=3, lineno=737)
          30	STORE_FAST(arg=4, lineno=737)
          32	LOAD_FAST(arg=3, lineno=738)
          34	LOAD_GLOBAL(arg=3, lineno=738)
          36	LOAD_ATTR(arg=4, lineno=738)
          38	COMPARE_OP(arg=2, lineno=738)
          40	POP_JUMP_IF_FALSE(arg=50, lineno=738)
          42	LOAD_GLOBAL(arg=5, lineno=739)
          44	CALL_FUNCTION(arg=0, lineno=739)
          46	RAISE_VARARGS(arg=1, lineno=739)
          48	JUMP_FORWARD(arg=28, lineno=739)
>         50	LOAD_FAST(arg=3, lineno=740)
          52	LOAD_GLOBAL(arg=3, lineno=740)
          54	LOAD_ATTR(arg=4, lineno=740)
          56	COMPARE_OP(arg=0, lineno=740)
          58	POP_JUMP_IF_FALSE(arg=70, lineno=740)
          60	LOAD_GLOBAL(arg=6, lineno=741)
          62	LOAD_CONST(arg=1, lineno=741)
          64	CALL_FUNCTION(arg=1, lineno=741)
          66	RAISE_VARARGS(arg=1, lineno=741)
          68	JUMP_FORWARD(arg=8, lineno=741)
>         70	LOAD_GLOBAL(arg=7, lineno=743)
          72	LOAD_FAST(arg=4, lineno=743)
          74	CALL_FUNCTION(arg=1, lineno=743)
          76	RETURN_VALUE(arg=None, lineno=743)
>         78	LOAD_CONST(arg=0, lineno=743)
          80	RETURN_VALUE(arg=None, lineno=743)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=736)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=736)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=736)
DEBUG:numba.core.byteflow:stack ['$2load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_DEREF(arg=0, lineno=736)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$key4.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=736)
DEBUG:numba.core.byteflow:stack ['$2load_global.0', '$key4.1', '$6load_deref.2']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=STORE_FAST(arg=2, lineno=736)
DEBUG:numba.core.byteflow:stack ['$8call_function.3']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=737)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=14, inst=LOAD_FAST(arg=0, lineno=737)
DEBUG:numba.core.byteflow:stack ['$12load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=737)
DEBUG:numba.core.byteflow:stack ['$12load_global.4', '$d14.5']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=737)
DEBUG:numba.core.byteflow:stack ['$12load_global.4', '$d14.5', '$castedkey16.6']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=737)
DEBUG:numba.core.byteflow:stack ['$12load_global.4', '$d14.5', '$castedkey16.6', '$18load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL_FUNCTION(arg=1, lineno=737)
DEBUG:numba.core.byteflow:stack ['$12load_global.4', '$d14.5', '$castedkey16.6', '$18load_global.7', '$castedkey20.8']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL_FUNCTION(arg=3, lineno=737)
DEBUG:numba.core.byteflow:stack ['$12load_global.4', '$d14.5', '$castedkey16.6', '$22call_function.9']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=UNPACK_SEQUENCE(arg=2, lineno=737)
DEBUG:numba.core.byteflow:stack ['$24call_function.10']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=STORE_FAST(arg=3, lineno=737)
DEBUG:numba.core.byteflow:stack ['$26unpack_sequence.12', '$26unpack_sequence.11']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_FAST(arg=4, lineno=737)
DEBUG:numba.core.byteflow:stack ['$26unpack_sequence.12']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=3, lineno=738)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_GLOBAL(arg=3, lineno=738)
DEBUG:numba.core.byteflow:stack ['$ix32.14']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_ATTR(arg=4, lineno=738)
DEBUG:numba.core.byteflow:stack ['$ix32.14', '$34load_global.15']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=COMPARE_OP(arg=2, lineno=738)
DEBUG:numba.core.byteflow:stack ['$ix32.14', '$36load_attr.16']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=POP_JUMP_IF_FALSE(arg=50, lineno=738)
DEBUG:numba.core.byteflow:stack ['$38compare_op.17']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=50, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=50 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_GLOBAL(arg=5, lineno=739)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=CALL_FUNCTION(arg=0, lineno=739)
DEBUG:numba.core.byteflow:stack ['$42load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=739)
DEBUG:numba.core.byteflow:stack ['$44call_function.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=3, lineno=740)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_GLOBAL(arg=3, lineno=740)
DEBUG:numba.core.byteflow:stack ['$ix50.0']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_ATTR(arg=4, lineno=740)
DEBUG:numba.core.byteflow:stack ['$ix50.0', '$52load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=COMPARE_OP(arg=0, lineno=740)
DEBUG:numba.core.byteflow:stack ['$ix50.0', '$54load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=70, lineno=740)
DEBUG:numba.core.byteflow:stack ['$56compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=70, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=70 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_GLOBAL(arg=6, lineno=741)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_CONST(arg=1, lineno=741)
DEBUG:numba.core.byteflow:stack ['$60load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=CALL_FUNCTION(arg=1, lineno=741)
DEBUG:numba.core.byteflow:stack ['$60load_global.0', '$const62.1']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=RAISE_VARARGS(arg=1, lineno=741)
DEBUG:numba.core.byteflow:stack ['$64call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=70 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_GLOBAL(arg=7, lineno=743)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=4, lineno=743)
DEBUG:numba.core.byteflow:stack ['$70load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=CALL_FUNCTION(arg=1, lineno=743)
DEBUG:numba.core.byteflow:stack ['$70load_global.0', '$val72.1']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=743)
DEBUG:numba.core.byteflow:stack ['$74call_function.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$key4.1'}), (6, {'res': '$6load_deref.2'}), (8, {'func': '$2load_global.0', 'args': ['$key4.1', '$6load_deref.2'], 'res': '$8call_function.3'}), (10, {'value': '$8call_function.3'}), (12, {'res': '$12load_global.4'}), (14, {'res': '$d14.5'}), (16, {'res': '$castedkey16.6'}), (18, {'res': '$18load_global.7'}), (20, {'res': '$castedkey20.8'}), (22, {'func': '$18load_global.7', 'args': ['$castedkey20.8'], 'res': '$22call_function.9'}), (24, {'func': '$12load_global.4', 'args': ['$d14.5', '$castedkey16.6', '$22call_function.9'], 'res': '$24call_function.10'}), (26, {'iterable': '$24call_function.10', 'stores': ['$26unpack_sequence.11', '$26unpack_sequence.12'], 'tupleobj': '$26unpack_sequence.13'}), (28, {'value': '$26unpack_sequence.11'}), (30, {'value': '$26unpack_sequence.12'}), (32, {'res': '$ix32.14'}), (34, {'res': '$34load_global.15'}), (36, {'item': '$34load_global.15', 'res': '$36load_attr.16'}), (38, {'lhs': '$ix32.14', 'rhs': '$36load_attr.16', 'res': '$38compare_op.17'}), (40, {'pred': '$38compare_op.17'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 50: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {'res': '$42load_global.0'}), (44, {'func': '$42load_global.0', 'args': [], 'res': '$44call_function.1'}), (46, {'exc': '$44call_function.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=50 nstack_initial=0):
AdaptBlockInfo(insts=((50, {'res': '$ix50.0'}), (52, {'res': '$52load_global.1'}), (54, {'item': '$52load_global.1', 'res': '$54load_attr.2'}), (56, {'lhs': '$ix50.0', 'rhs': '$54load_attr.2', 'res': '$56compare_op.3'}), (58, {'pred': '$56compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 70: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_global.0'}), (62, {'res': '$const62.1'}), (64, {'func': '$60load_global.0', 'args': ['$const62.1'], 'res': '$64call_function.2'}), (66, {'exc': '$64call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$70load_global.0'}), (72, {'res': '$val72.1'}), (74, {'func': '$70load_global.0', 'args': ['$val72.1'], 'res': '$74call_function.2'}), (76, {'retval': '$74call_function.2', 'castval': '$76return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    d = arg(0, name=d)                       ['d']
    key = arg(1, name=key)                   ['key']
    $2load_global.0 = global(_cast: <intrinsic _cast>) ['$2load_global.0']
    $6load_deref.2 = freevar(keyty: float64) ['$6load_deref.2']
    castedkey = call $2load_global.0(key, $6load_deref.2, func=$2load_global.0, args=[Var(key, dictobject.py:736), Var($6load_deref.2, dictobject.py:736)], kws=(), vararg=None, target=None) ['$2load_global.0', '$6load_deref.2', 'castedkey', 'key']
    $12load_global.4 = global(_dict_lookup: <intrinsic _dict_lookup>) ['$12load_global.4']
    $18load_global.7 = global(hash: <built-in function hash>) ['$18load_global.7']
    $22call_function.9 = call $18load_global.7(castedkey, func=$18load_global.7, args=[Var(castedkey, dictobject.py:736)], kws=(), vararg=None, target=None) ['$18load_global.7', '$22call_function.9', 'castedkey']
    $24call_function.10 = call $12load_global.4(d, castedkey, $22call_function.9, func=$12load_global.4, args=[Var(d, dictobject.py:736), Var(castedkey, dictobject.py:736), Var($22call_function.9, dictobject.py:737)], kws=(), vararg=None, target=None) ['$12load_global.4', '$22call_function.9', '$24call_function.10', 'castedkey', 'd']
    $26unpack_sequence.13 = exhaust_iter(value=$24call_function.10, count=2) ['$24call_function.10', '$26unpack_sequence.13']
    $26unpack_sequence.11 = static_getitem(value=$26unpack_sequence.13, index=0, index_var=None, fn=<built-in function getitem>) ['$26unpack_sequence.11', '$26unpack_sequence.13']
    $26unpack_sequence.12 = static_getitem(value=$26unpack_sequence.13, index=1, index_var=None, fn=<built-in function getitem>) ['$26unpack_sequence.12', '$26unpack_sequence.13']
    ix = $26unpack_sequence.11               ['$26unpack_sequence.11', 'ix']
    val = $26unpack_sequence.12              ['$26unpack_sequence.12', 'val']
    $34load_global.15 = global(DKIX: <enum 'DKIX'>) ['$34load_global.15']
    $36load_attr.16 = getattr(value=$34load_global.15, attr=EMPTY) ['$34load_global.15', '$36load_attr.16']
    $38compare_op.17 = ix == $36load_attr.16 ['$36load_attr.16', '$38compare_op.17', 'ix']
    bool40 = global(bool: <class 'bool'>)    ['bool40']
    $40pred = call bool40($38compare_op.17, func=bool40, args=(Var($38compare_op.17, dictobject.py:738),), kws=(), vararg=None, target=None) ['$38compare_op.17', '$40pred', 'bool40']
    branch $40pred, 42, 50                   ['$40pred']
label 42:
    $42load_global.0 = global(KeyError: <class 'KeyError'>) ['$42load_global.0']
    $44call_function.1 = call $42load_global.0(func=$42load_global.0, args=[], kws=(), vararg=None, target=None) ['$42load_global.0', '$44call_function.1']
    raise $44call_function.1                 ['$44call_function.1']
label 50:
    $52load_global.1 = global(DKIX: <enum 'DKIX'>) ['$52load_global.1']
    $54load_attr.2 = getattr(value=$52load_global.1, attr=EMPTY) ['$52load_global.1', '$54load_attr.2']
    $56compare_op.3 = ix < $54load_attr.2    ['$54load_attr.2', '$56compare_op.3', 'ix']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.3, func=bool58, args=(Var($56compare_op.3, dictobject.py:740),), kws=(), vararg=None, target=None) ['$56compare_op.3', '$58pred', 'bool58']
    branch $58pred, 60, 70                   ['$58pred']
label 60:
    $60load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$60load_global.0']
    $const62.1 = const(str, internal dict error during lookup) ['$const62.1']
    $64call_function.2 = call $60load_global.0($const62.1, func=$60load_global.0, args=[Var($const62.1, dictobject.py:741)], kws=(), vararg=None, target=None) ['$60load_global.0', '$64call_function.2', '$const62.1']
    raise $64call_function.2                 ['$64call_function.2']
label 70:
    $70load_global.0 = global(_nonoptional: <intrinsic _nonoptional>) ['$70load_global.0']
    $74call_function.2 = call $70load_global.0(val, func=$70load_global.0, args=[Var(val, dictobject.py:737)], kws=(), vararg=None, target=None) ['$70load_global.0', '$74call_function.2', 'val']
    $76return_value.3 = cast(value=$74call_function.2) ['$74call_function.2', '$76return_value.3']
    return $76return_value.3                 ['$76return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e05774c0>
DEBUG:numba.core.ssa:on stmt: d = arg(0, name=d)
DEBUG:numba.core.ssa:on stmt: key = arg(1, name=key)
DEBUG:numba.core.ssa:on stmt: $2load_global.0 = global(_cast: <intrinsic _cast>)
DEBUG:numba.core.ssa:on stmt: $6load_deref.2 = freevar(keyty: float64)
DEBUG:numba.core.ssa:on stmt: castedkey = call $2load_global.0(key, $6load_deref.2, func=$2load_global.0, args=[Var(key, dictobject.py:736), Var($6load_deref.2, dictobject.py:736)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $12load_global.4 = global(_dict_lookup: <intrinsic _dict_lookup>)
DEBUG:numba.core.ssa:on stmt: $18load_global.7 = global(hash: <built-in function hash>)
DEBUG:numba.core.ssa:on stmt: $22call_function.9 = call $18load_global.7(castedkey, func=$18load_global.7, args=[Var(castedkey, dictobject.py:736)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $24call_function.10 = call $12load_global.4(d, castedkey, $22call_function.9, func=$12load_global.4, args=[Var(d, dictobject.py:736), Var(castedkey, dictobject.py:736), Var($22call_function.9, dictobject.py:737)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $26unpack_sequence.13 = exhaust_iter(value=$24call_function.10, count=2)
DEBUG:numba.core.ssa:on stmt: $26unpack_sequence.11 = static_getitem(value=$26unpack_sequence.13, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $26unpack_sequence.12 = static_getitem(value=$26unpack_sequence.13, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ix = $26unpack_sequence.11
DEBUG:numba.core.ssa:on stmt: val = $26unpack_sequence.12
DEBUG:numba.core.ssa:on stmt: $34load_global.15 = global(DKIX: <enum 'DKIX'>)
DEBUG:numba.core.ssa:on stmt: $36load_attr.16 = getattr(value=$34load_global.15, attr=EMPTY)
DEBUG:numba.core.ssa:on stmt: $38compare_op.17 = ix == $36load_attr.16
DEBUG:numba.core.ssa:on stmt: bool40 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $40pred = call bool40($38compare_op.17, func=bool40, args=(Var($38compare_op.17, dictobject.py:738),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $40pred, 42, 50
DEBUG:numba.core.ssa:==== SSA block analysis pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e05774c0>
DEBUG:numba.core.ssa:on stmt: $42load_global.0 = global(KeyError: <class 'KeyError'>)
DEBUG:numba.core.ssa:on stmt: $44call_function.1 = call $42load_global.0(func=$42load_global.0, args=[], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'KeyError'>()
DEBUG:numba.core.ssa:==== SSA block analysis pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e05774c0>
DEBUG:numba.core.ssa:on stmt: $52load_global.1 = global(DKIX: <enum 'DKIX'>)
DEBUG:numba.core.ssa:on stmt: $54load_attr.2 = getattr(value=$52load_global.1, attr=EMPTY)
DEBUG:numba.core.ssa:on stmt: $56compare_op.3 = ix < $54load_attr.2
DEBUG:numba.core.ssa:on stmt: bool58 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $58pred = call bool58($56compare_op.3, func=bool58, args=(Var($56compare_op.3, dictobject.py:740),), kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $58pred, 60, 70
DEBUG:numba.core.ssa:==== SSA block analysis pass on 60
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e05774c0>
DEBUG:numba.core.ssa:on stmt: $60load_global.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: $const62.1 = const(str, internal dict error during lookup)
DEBUG:numba.core.ssa:on stmt: $64call_function.2 = call $60load_global.0($const62.1, func=$60load_global.0, args=[Var($const62.1, dictobject.py:741)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>('internal dict error during lookup')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 70
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x7fd9e05774c0>
DEBUG:numba.core.ssa:on stmt: $70load_global.0 = global(_nonoptional: <intrinsic _nonoptional>)
DEBUG:numba.core.ssa:on stmt: $74call_function.2 = call $70load_global.0(val, func=$70load_global.0, args=[Var(val, dictobject.py:737)], kws=(), vararg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $76return_value.3 = cast(value=$74call_function.2)
DEBUG:numba.core.ssa:on stmt: return $76return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12load_global.4': [<numba.core.ir.Assign object at 0x7fd9e0581310>],
             '$18load_global.7': [<numba.core.ir.Assign object at 0x7fd9e0577640>],
             '$22call_function.9': [<numba.core.ir.Assign object at 0x7fd9e0571ee0>],
             '$24call_function.10': [<numba.core.ir.Assign object at 0x7fd9e0571d60>],
             '$26unpack_sequence.11': [<numba.core.ir.Assign object at 0x7fda21b301c0>],
             '$26unpack_sequence.12': [<numba.core.ir.Assign object at 0x7fda21b30940>],
             '$26unpack_sequence.13': [<numba.core.ir.Assign object at 0x7fda21a973d0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x7fd9e0577c10>],
             '$34load_global.15': [<numba.core.ir.Assign object at 0x7fd9e05814c0>],
             '$36load_attr.16': [<numba.core.ir.Assign object at 0x7fd9e0581640>],
             '$38compare_op.17': [<numba.core.ir.Assign object at 0x7fd9e05817f0>],
             '$40pred': [<numba.core.ir.Assign object at 0x7fd9e0581a60>],
             '$42load_global.0': [<numba.core.ir.Assign object at 0x7fd9e0581190>],
             '$44call_function.1': [<numba.core.ir.Assign object at 0x7fd9e0581ca0>],
             '$52load_global.1': [<numba.core.ir.Assign object at 0x7fd9e05830a0>],
             '$54load_attr.2': [<numba.core.ir.Assign object at 0x7fd9e0583220>],
             '$56compare_op.3': [<numba.core.ir.Assign object at 0x7fd9e05833d0>],
             '$58pred': [<numba.core.ir.Assign object at 0x7fd9e0583640>],
             '$60load_global.0': [<numba.core.ir.Assign object at 0x7fd9e0583880>],
             '$64call_function.2': [<numba.core.ir.Assign object at 0x7fd9e0583be0>],
             '$6load_deref.2': [<numba.core.ir.Assign object at 0x7fd9e0577eb0>],
             '$70load_global.0': [<numba.core.ir.Assign object at 0x7fd9e0583e80>],
             '$74call_function.2': [<numba.core.ir.Assign object at 0x7fd9e05851c0>],
             '$76return_value.3': [<numba.core.ir.Assign object at 0x7fd9e05852e0>],
             '$const62.1': [<numba.core.ir.Assign object at 0x7fd9e0583a00>],
             'bool40': [<numba.core.ir.Assign object at 0x7fd9e0581940>],
             'bool58': [<numba.core.ir.Assign object at 0x7fd9e0583520>],
             'castedkey': [<numba.core.ir.Assign object at 0x7fd9e05810d0>],
             'd': [<numba.core.ir.Assign object at 0x7fd9e05770d0>],
             'ix': [<numba.core.ir.Assign object at 0x7fda21b309a0>],
             'key': [<numba.core.ir.Assign object at 0x7fd9e0577a90>],
             'val': [<numba.core.ir.Assign object at 0x7fda21b30b20>]})
DEBUG:numba.core.ssa:SSA violators set()
